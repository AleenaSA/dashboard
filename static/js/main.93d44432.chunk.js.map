{"version":3,"sources":["data/yaml.js","flux/constants.js","settings.js","flux/config.js","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/Notifications.js","components/Layout/MainNavbar/UserActions.js","flux/dispatcher.js","helpers.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Default.jsx","components/Common/CookiesBanner.jsx","components/Common/InfoBanner.jsx","components/Common/ConnectionBanner.jsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/NodePort.jsx","components/FlowChart/ExampleSelection.jsx","views/FlowView.jsx","components/LogStream/LogItem.jsx","components/LogStream/LogStream.jsx","components/LogStream/ChartBase.jsx","components/LogStream/SummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/OccurenceChart.jsx","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","views/PackageView.jsx","views/LogIn.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","withTracker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","pokedex","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_EXAMPLE","SHOW_POD_IN_FLOW","nodeOffset","x","y","timeout","hubURL","className","toggleSidebar","onClick","connected","reconnect","pill","theme","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","Dispatcher","YAML","require","settings","propertyList","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","type","parents","Array","isArray","i","length","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","formatBytes","numBytes","parseFloat","toFixed","prop","name","logStream","taskStream","_store","hub","axios","create","baseURL","withCredentials","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","log","startsWith","close","EventSource","onopen","onmessage","m","JSON","onerror","console","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","content","searchHub","category","q","sort","CHART_LEVELS","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadExample","showPodByLabel","init","clearIntervals","localStorage","getItem","yaml","shutdown","ready","images","banner","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","flowchart","outPort","logs","logSources","logLevels","occurences","current","previous","lastLog","logIndex","summaryCharts","processes","taskData","qps","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","Date","messages","bytes","selectedNode","modalParams","currentTab","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","updateChartInterval","clearInterval","updateTaskInterval","yamlSTRING","flow","api","with","board","e","parsed","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","setInterval","status","message","formattedTimestamp","created","toLocaleString","idx","push","process","levelname","includes","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","map","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","level","updateSummaryCharts","numLogs","prevNum","entries","key","window","location","hash","customYAML","exampleName","exampleYAML","setItem","setTimeout","String","showError","image","reload","bannerTimeout","clearTimeout","hideBanner","params","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getOccurencesByName","getTaskData","getActivePanel","path","substring","getConnectionStatus","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","register","peakLogs","this","EventEmitter","MainNavbar","componentWillUnmount","Store","removeListener","getData","setState","dispatch","state","render","fluid","NavbarSpacer","navbar","Notifications","UserActions","NavbarToggle","on","React","Component","href","style","lineHeight","maxWidth","item","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","top","subItem","nav","SidebarNavItem","MainSidebar","props","onChange","getMenuState","sidebarNavItems","getSidebarItems","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","defaultProps","contained","DashboardLayout","children","noNavbar","noFooter","sm","show","acceptCookies","Button","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","inputRef","as","rows","submitReview","IconSidebarLayout","accepted","yamlString","acceptedCookies","hideLogoText","InfoBanner","ConnectionBanner","CookiesBanner","PasteYAML","WriteReview","subtitle","attrs","xs","ButtonGroup","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","stringify","ChartNode","FlowChartSidebar","getInitialNodeState","newProperties","componentWillReceiveProps","nextProps","chart","searchResults","searchQuery","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","updateSearchQuery","searchProperties","query","indexProperties","search","availableProperties","lunr","field","add","renderEditNode","FormControl","spellCheck","property","deleteSelection","renderEditLink","nodeTo","choices","updateLink","choice","renderPodMenu","SidebarItem","inPort","defaultPods","hasSelected","Card","data-html2canvas-ignore","DropdownButton","Item","FlowView","componentDidMount","querySelector","addEventListener","preventDefault","extension","classList","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","updateChart","callback","newChart","cloneDeep","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","copyChartAsYAML","output","propId","formatAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","example","display","noGutters","PageTitle","ExampleSelection","CommandBar","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","reduce","action","newChartTransformer","showPodInFlow","msg","logName","levelInitial","toLowerCase","StreamContainer","_cache","CellMeasurerCache","defaultHeight","fixedWidth","_resultsCache","_mostRecentWidth","_mostRecentHeight","_resizeAllFlag","_startIndex","_scrollIndex","_scrollTop","_scrolledToBottom","downloadLogs","format","allLogs","filename","lineno","funcname","pathname","blob","Blob","saveAs","_list","_resizeAll","backToBottom","sources","levels","filterLogs","scrollToBottom","selectedSource","selectedLevel","scrollToLog","filter","setSelectedSource","setSelectedLevel","results","indexLogs","_resizeSearchResults","listenForEnter","charCode","scrollToRow","scrollToBottomResults","_resultsList","clearSearchResults","podLabel","renderSearchResults","height","deferredMeasurementCache","rowHeight","rowCount","rowRenderer","renderSearchResultRow","renderLogRow","isScrolling","cache","columnIndex","rowIndex","wordBreak","LogItem","showHelper","Header","source","onKeyPress","Body","onScroll","_onScroll","scrollToAlignment","_onRowsRendered","cb","startIndex","scrollTop","scrollHeight","clientHeight","difference","clearAll","recomputeRowHeights","prevQuery","_colors","INFO","background","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","ChartBase","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","gridLines","ticks","yAxes","borderDash","zeroLineColor","drawBorder","suggestedMin","chartConfig","getLabels","datasets","chartData","borderWidth","borderColor","options","ChartElement","canvasRef","activePoints","getElementsAtEvent","amount","animation","update","createRef","SummaryChart","showLog","_index","PieChart","getColor","names","mode","OccurenceChart","LogsView","Container","LogStream","ElapsedCard","ProgressCard","percent","newData","hoverBorderColor","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","suggestedMax","line","tension","scaleLabel","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","QueriesPerSecond","SettingsCard","original","updates","updateSetting","setting","toggleExpand","expanded","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","rating","userRated","rate","round","getStars","integer","remainder","j","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","StarRating","HubView","sortBy","sortType","setCategory","updateSearch","ImageCard","buildHistory","build","formattedCreated","buildSize","os","architecture","version","documentation","license","vendor","url","readme","copyCode","imageVar","repoTags","code","language","atomOneLight","review","newReview","ReviewCard","PackageView","getImageData","imageData","readmeHTML","CopyCommand","BuildHistory","Readme","ImageReviews","windowHash","windowParams","URLSearchParams","Login","icon","Errors","HelpCard","exact","layout","DefaultLayout","component","IconSidebar","NotFound","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","basename","routes","route","Boolean","hostname","ReactDOM","navigator","serviceWorker","registration","unregister","catch"],"mappings":"w9CAAAA,EAAOC,QAAU,CACfC,QAAQ,kgCAoDRC,OAAO,+uCA8DPC,UAAU,shC,+9BCnHZJ,EAAOC,QAAU,CACfI,eAAgB,iBAChBC,gBAAiB,kBACjBC,YAAa,cACbC,mBAAoB,qBACpBC,WAAY,aACZC,YAAa,cACbC,kBAAmB,oBACnBC,cAAe,gBACfC,UAAW,YACXC,YAAa,cACbC,YAAa,cACbC,QAAS,UACTC,WAAY,aACZC,YAAa,cACbC,aAAc,eACdC,iBAAkB,qB,kBChBpBpB,EAAOC,QAAU,CACfoB,WAAY,CACVC,EAAG,IACHC,EAAG,O,iBCHPvB,EAAOC,QAAU,CACfuB,QAAS,KACTC,OAAQ,wB,wKCAK,oBACb,yBAAKC,UAAU,0DCDF,kBAAGC,EAAH,EAAGA,cAAH,OACb,yBAAKD,UAAU,sBACb,0BACEE,QAASD,EACTD,UAAU,uFAEV,uBAAGA,UAAU,kBAAb,aCLS,cAA+B,IAA5BG,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAC3B,OACE,kBAAC,IAAD,CACEJ,UAAU,sCACVE,QAASE,GAET,kBAAC,IAAD,CAASJ,UAAU,6BACjB,yBAAKA,UAAU,0BACb,uBAAGA,UAAU,kBAAb,YACCG,EACC,kBAAC,IAAD,CAAOE,MAAI,EAACC,MAAM,UAAUN,UAAU,4BACpC,uBAAGA,UAAU,kBAAb,SAGF,kBAAC,IAAD,CAAOK,MAAI,EAACC,MAAM,SAASN,UAAU,4BACnC,uBAAGA,UAAU,kBAAb,cCLC,cAA8D,IAA3DO,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,mBAAoBC,EAAwB,EAAxBA,kBAClD,OACE,kBAAC,IAAD,CAASC,IAAKC,IAAUC,OAAK,EAACC,OAAQJ,GACnCH,EACC,kBAAC,IAAD,CAAgBM,OAAK,EAACF,IAAKI,IAASf,UAAU,oBAC5C,yBACEA,UAAU,kCACVgB,IAAKT,EAAKU,MAAMC,WAChBC,IAAI,gBACH,IACH,0BAAMnB,UAAU,4BAA4BO,EAAKa,WAGnD,kBAAC,IAAD,CAAMC,GAAG,SAASrB,UAAU,iBAC1B,kBAAC,IAAD,CAAQA,UAAU,yBAAlB,WAIJ,kBAAC,IAAD,CAAUW,IAAKW,IAAcC,OAAK,EAACC,OAAK,EAACC,KAAMhB,GAC7C,kBAAC,IAAD,CACEE,IAAKe,IACLL,GAAG,IACHrB,UAAU,cACVE,QAASM,GAET,uBAAGR,UAAU,8BAAb,UANF,cC9BO,M,OAAI2B,Y,oFCFbC,EAAOC,EAAQ,KACfC,EAAWD,EAAQ,KACnBE,EAAeF,EAAQ,KAEvBG,EAAgB,GAGf,SAASC,EAAgBC,GAC9B,IAAMC,EAAOC,SAASC,cAAc,YACpCF,EAAKG,MAAQJ,EACbE,SAASG,KAAKC,YAAYL,GAC1BA,EAAKM,SACLL,SAASM,YAAY,QACrBN,SAASG,KAAKI,YAAYR,GAGrB,SAASS,EAAUC,GACxB,IAEE,MAAO,CAAEC,KADIlB,EAAKmB,MAAMF,IAExB,MAAOG,GAEP,OADAC,MAAM,wBAA0BD,GACzB,CAAEA,UAGN,SAASE,EAAmBC,EAAMC,GACvC,IAAMC,EAAY,CAChBC,OAAQ,CACN1D,EAAG,EACHC,EAAG,GAEL0D,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,MAAO,GAGLJ,EAAQ,GACRC,EAAQ,GAERI,GAAW,EAEf,IAAKT,EAAKU,QAAS,CACjB,IAAIC,EACJA,EAAO,aACLD,QAAS,MACNV,GAELA,EAAOW,EAGTC,OAAOC,KAAKb,GAAMc,SAAQ,SAACC,GACzB,IAAMC,EAAMhB,EAAKe,IAAO,GACpBE,EAAO,CACTF,KACAG,MAAOH,EACPI,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,WAAW,eAAMP,IAUnB,GAPIC,EAAKM,WAAWH,cAAcH,EAAKM,WAAWH,MAElDH,EAAKE,MAAL,OAAuB,CAAEJ,GAAI,SAAUS,KAAM,SAC7CP,EAAKE,MAAL,QAAwB,CAAEJ,GAAI,UAAWS,KAAM,UAE3Cf,IAAaO,EAAII,OAAgB,YAAPL,IAAkBC,EAAII,MAAQX,GAExDO,EAAII,MAGN,IAFA,IAAIK,EAAUC,MAAMC,QAAQX,EAAII,OAASJ,EAAII,MAAQ,CAACJ,EAAII,OAEjDQ,EAAI,EAAGA,EAAIH,EAAQI,SAAUD,EAAG,CACvC,IAAIE,EAAWL,EAAQG,GACvBX,EAAKG,MAAMU,IAAY,EAEvB,IAAIC,EAAM,UAAMD,EAAN,eAAqBf,GAC3BiB,EAAO,CACTC,MAAO,MACPlB,GAAIgB,EACJG,KAAM,CAAEC,OAAQL,EAAUM,OAAQ,WAClClE,GAAI,CAAEiE,OAAQpB,EAAIqB,OAAQ,WAE5B/B,EAAM0B,GAAUC,EAIpB,GAAI/B,GAAUA,EAAOc,GAAK,CAAC,IAAD,EACPd,EAAOc,GAAhBtE,EADgB,EAChBA,EAAGC,EADa,EACbA,EACXuE,EAAKK,SAAW,CAAE7E,EAAG4F,SAAS5F,GAAIC,EAAG2F,SAAS3F,IAGhD0D,EAAMW,GAAME,EACZR,EAAWM,KAGb,IAAMuB,EAAkB,GAClBC,EAAU5D,EAASnC,WAAWC,EAC9B+F,EAAU7D,EAASnC,WAAWE,EAoBpC,OAjBAkE,OAAOC,KAAKT,GAAOU,SAAQ,SAACC,GAC1B,IAAI0B,EA0FR,SAASC,EAAatC,EAAOuC,EAAWC,GAItC,IAHA,IAAInB,EAAUb,OAAOC,KAAKT,EAAMuC,GAAWvB,OACvCyB,EAAe,EAEVjB,EAAI,EAAGA,EAAIH,EAAQI,SAAUD,EAAG,CACvC,IAAIkB,EAASrB,EAAQG,GACjBa,OAAK,GACgBA,EAArBrC,EAAM0C,GAAQL,MAAerC,EAAM0C,GAAQL,MAAQ,EAC1CC,EAAatC,EAAO0C,EAAQ,IAC7BD,IAAcA,EAAeJ,GAG3C,OAAOG,EAAeC,EAtGRH,CAAatC,EAAOW,EAAI,GACpCX,EAAMW,GAAI0B,MAAQA,EAEdH,EAAgBG,IAAU,EAAGH,EAAgBG,KAC5CH,EAAgBG,GAAS,EAEzBrC,EAAMW,GAAIO,SAAS7E,IACtB2D,EAAMW,GAAIO,SAAW,CACnB5E,EAAG+F,EAAQD,EAAUA,EACrB/F,EAAG6F,EAAgBG,GAASF,EAAUA,OAI5CrC,EAAUE,MAAQA,EAClBF,EAAUG,MAAQA,EAEXH,EAkEF,SAAS6C,EAAYC,GAC1B,OAAIA,EAAW,KAAY,GAAN,OAAUA,EAAV,UACjBA,EAAQ,SAAG,KAAQ,GAAS,GAAN,OAAUC,WAAWD,GAAUE,QAAQ,GAAvC,OACtBF,EAAQ,SAAG,KAAQ,GACf,GAAN,OAAUC,WAAWD,EAAQ,SAAG,KAAQ,IAAGE,QAAQ,GAAnD,OACI,GAAN,OAAUD,WAAWD,EAAQ,SAAG,KAAQ,IAAGE,QAAQ,GAAnD,OA1LFtE,EAAakC,SAAQ,SAACqC,GAAD,OAAWtE,EAAcsE,EAAKC,MAAQD,EAAK3B,Q,ICH5D6B,EACAC,ECMAC,E,0BDJEC,EAAMC,IAAMC,OAAO,CACvBC,QAAS/G,SACTgH,iBAAiB,EACjBjH,kBACAkH,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAIG,GACbC,QAAS,SAACpF,EAAUqF,EAAkBC,EAAWC,GAC/C,IAAMC,EAAS,UAAMxF,EAASyF,KAAf,YAAuBzF,EAAS0F,MAAhC,OACb1F,EAAS2F,IAAIC,WAAW,KAAO5F,EAAS2F,IAAM,IAAM3F,EAAS2F,KAE3DjB,GAAWA,EAAUmB,SACzBnB,EAAY,IAAIoB,YAAYN,IAElBO,OAAS,WACjBV,EACE,YADc,8CAEyBrF,EAASyF,KAFlC,YAE0CzF,EAAS0F,QAIrEhB,EAAUsB,UAAY,SAACC,GACrBX,EAAU,CAAEzC,KAAM,MAAO7B,KAAMkF,KAAKjF,MAAMgF,EAAEjF,SAG9C0D,EAAUyB,QAAU,SAACnF,GACnBqE,EACE,SADc,4CAEuBrF,EAASyF,KAFhC,YAEwCzF,EAAS0F,OAEjEU,QAAQlF,MAAM,cAAeF,GAC7B0D,EAAUmB,SAGZ,IAAMQ,EAAU,UAAMrG,EAASyF,KAAf,YAAuBzF,EAAS0F,MAAhC,OACd1F,EAASsG,QAAQV,WAAW,KACxB5F,EAASsG,QACT,IAAMtG,EAASsG,SAEjB3B,GAAYA,EAAWkB,SAC3BlB,EAAa,IAAImB,YAAYO,IAElBN,OAAS,WAClBR,EAAW,CACT1C,KAAM,UACN7B,KAAK,kCAAD,OAAoCqF,MAI5C1B,EAAWqB,UAAY,SAACC,GACtBV,EAAW,CAAE1C,KAAM,QAAS7B,KAAMkF,KAAKjF,MAAMgF,EAAEjF,SAGjD2D,EAAWwB,QAAU,SAACnF,GACpBuE,EAAW,CACT1C,KAAM,QACN7B,KAAK,mCAAD,OAAqCqF,KAE3CD,QAAQlF,MAAM,cAAeF,GAC7B2D,EAAWkB,UAGfU,WAAW,WAAD,4BAAE,4BAAAC,EAAA,sEACW3B,EAAI4B,IAAI,WADnB,cACJC,EADI,yBAEHA,EAAO1F,MAFJ,2CAAF,kDAAC,GAIX2F,QAAQ,WAAD,4BAAE,WAAOC,GAAP,eAAAJ,EAAA,sEACc1B,IAAM2B,IAAIG,EAAkB,CAAE5I,oBAD5C,cACD0I,EADC,yBAEAA,EAAO1F,MAFP,2CAAF,mDAAC,GAIR6F,UAAU,WAAD,4BAAE,4BAAAL,EAAA,sEACY3B,EAAI4B,IAAI,UADpB,cACHC,EADG,yBAEFA,EAAO1F,MAFL,2CAAF,kDAAC,GAIV8F,SAAS,WAAD,4BAAE,WAAO1E,GAAP,eAAAoE,EAAA,sEACa3B,EAAI4B,IAAJ,kBAAmBrE,IADhC,cACFsE,EADE,yBAEDA,EAAO1F,MAFN,2CAAF,mDAAC,GAIT+F,WAAW,WAAD,4BAAE,WAAOC,EAASC,GAAhB,eAAAT,EAAA,sEACW3B,EAAIqC,KAAJ,kBAAoBF,EAApB,YAAuC,CAAEC,UADpD,cACJP,EADI,yBAEHA,EAAO1F,MAFJ,2CAAF,qDAAC,GAIXmG,WAAW,WAAD,4BAAE,WAAOH,EAASI,GAAhB,eAAAZ,EAAA,sEACW3B,EAAIqC,KAAJ,kBAAoBF,EAApB,YAAuC,CAAEI,YADpD,cACJV,EADI,yBAEHA,EAAO1F,MAFJ,2CAAF,qDAAC,GAIXqG,UAAU,WAAD,4BAAE,WAAOC,EAAUC,EAAGC,GAApB,eAAAhB,EAAA,sEACY3B,EAAI4B,IAAJ,2BACCa,EADD,cACeC,EADf,iBACyBC,IAFrC,cACHd,EADG,yBAIFA,EAAO1F,MAJL,2CAAF,uDAAC,GAMVtC,OAAO,WAAD,4BAAE,4BAAA8H,EAAA,sEACe3B,EAAIqC,KAAK,gBADxB,cACAR,EADA,yBAECA,EAAO1F,MAFR,2CAAF,kDAAC,I,2BCtFHyG,EAAe,CACnB,OACA,UACA,UACA,QACA,WACA,S,IA0kBa,M,kDArfb,aAAe,IAAD,8BACZ,gBAMFC,gBAAkB,YAA8B,IAAD,EAA1BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC/B,OAAQD,GACN,KAAKE,IAAUhL,eACb,EAAKsB,gBACL,MACF,KAAK0J,IAAU5K,WACb,EAAK6K,UAAUF,GACf,MACF,KAAKC,IAAUnK,aACb,KAAKqK,WAAL,oBAAmBH,IACnB,MACF,KAAKC,IAAU7K,mBACb,EAAKgL,iBAAiBJ,GACtB,MACF,KAAKC,IAAU3K,YACb,EAAK+K,aACL,MACF,KAAKJ,IAAU1K,kBACb,EAAK+K,eAAeN,GACpB,MACF,KAAKC,IAAUzK,cACb,EAAK+K,aAAaP,GAClB,MACF,KAAKC,IAAUxK,UACb,EAAKiB,UAAUsJ,GACf,MACF,KAAKC,IAAUtK,YACb,EAAKwJ,WAAWa,GAChB,MACF,KAAKC,IAAUvK,YACb,EAAK6J,WAAWS,GAChB,MACF,KAAKC,IAAUpK,WACb,EAAK4J,UAAUO,GACf,MACF,KAAKC,IAAUrK,QACb,EAAKkB,SACL,MACF,KAAKmJ,IAAUlK,aACb,EAAKyK,YAAYR,GACjB,MACF,KAAKC,IAAUjK,iBACb,EAAKyK,eAAeT,KAjDZ,EAuDdU,KAvDc,sBAuDP,sBAAA9B,EAAA,6DACL,EAAK+B,iBACL3D,EA1IK,CACL5E,SAAU,CACRyF,KAAM+C,aAAaC,QAAQ,qBAAuB,mBAClD/C,KAAM8C,aAAaC,QAAQ,qBAAuB,IAClD9C,IAAK6C,aAAaC,QAAQ,oBAAsB,cAChDnC,QAASkC,aAAaC,QAAQ,wBAA0B,kBACxDC,KAAMF,aAAaC,QAAQ,qBAAuB,aAClDE,SACEH,aAAaC,QAAQ,yBAA2B,mBAClDG,MAAOJ,aAAaC,QAAQ,sBAAwB,iBAEtDI,OAAQ,GACRhE,IAAK,GACLiE,QAAQ,EACRzK,WAAW,EACX0K,SAAS,EACTC,OAAO,EACPC,aAAa,EACbC,SC1CK,CACL,CACEC,MAAO,aACPC,MAAO,CACL,CACED,MAAO,OACP5J,GAAI,QACJ8J,WAAY,qCACZC,UAAW,GACXC,QAAS,CAAC,SAEZ,CACEJ,MAAO,aACP5J,GAAI,QACJ8J,WAAY,+CACZC,UAAW,GACXC,QAAS,CAAC,SAEZ,CACEJ,MAAO,OACP5J,GAAI,QACJ8J,WAAY,2CACZC,UAAW,GACXC,QAAS,CAAC,SAEZ,CACEJ,MAAO,cACP5J,GAAI,QACJ8J,WAAY,2CACZC,UAAW,GACXC,QAAS,CAAC,SAEZ,CACEJ,MAAO,MACP5J,GAAI,OACJ8J,WAAY,sCACZC,UAAW,GACXC,QAAS,CAAC,MAAO,YAEnB,CACEJ,MAAO,WACP5J,GAAI,YACJ8J,WAAY,yCACZC,UAAW,GACXC,QAAS,CAAC,aAEZ,CACEJ,MAAO,OACP5J,GAAI,QACJ8J,WAAY,qCACZC,UAAW,GACXC,QAAS,CAAC,YDRhBC,UAAW,CACT7H,SAAU,GACVC,QAAS,GACTC,MAAO,EACPJ,MAAO,CACLM,QAAS,CACPK,GAAI,UACJG,MAAO,UACPC,MAAO,CACLiH,QAAS,CACPrH,GAAI,UACJS,KAAM,WAGVD,WAAY,GACZD,SAAU,CAAE7E,EAAG,IAAKC,EAAG,MAG3B2D,MAAO,GACPF,OAAQ,CAAE1D,EAAG,EAAGC,EAAG,IAErB2L,KAAM,GACNC,WAAY,GACZC,UAAW,GACXC,WAAY,CACVC,QAAS,GACTC,SAAU,GACVC,QAAS,IAEXC,UAAU,EACVC,cAAe,GACfC,UAAW,GACXC,SAAU,CACRC,IAAK,CACHP,QAAS,EACTQ,QAAS,IAAIvH,MAAM,IAAIwH,KAAK,IAE9BC,QAAS,CACPC,UAAW,kBACXC,QAAS,MAEXC,SAAU,CACRC,eAAgB,EAChBC,QAAS,EACTC,SAAU,GAEZC,MAAO,CACLjB,QAAS,EACTkB,KAAM,QACNV,QAAS,IAAIvH,MAAM,IAAIwH,KAAK,IAE9BU,gBAAiB,IAAIC,KACrBC,SAAU,GACVC,MAAO,IAETC,aAAc,KACdC,YAAa,KACbC,WAAY,aA4DP,SAIC,EAAKC,gBAJN,OAKL,EAAKC,gBACL,EAAKC,aACL,EAAKC,UACL,EAAKC,WAEL,EAAKC,KAAK,aACV,EAAKA,KAAK,mBAXL,4CAvDO,EAqEdtD,eAAiB,WACX,EAAKuD,qBAAqBC,cAAc,EAAKD,qBAC7C,EAAKE,oBAAoBD,cAAc,EAAKC,qBAvEpC,EA0EdR,cA1Ec,uCA0EE,WAAOS,GAAP,yBAAAzF,EAAA,yDAENxG,EAAa4E,EAAb5E,SACF4G,EAHQ,UAGc5G,EAASyF,KAHvB,YAG+BzF,EAAS0F,MAHxC,OAIZ1F,EAAS0I,KAAK9C,WAAW,KAAO5F,EAAS0I,KAAO,IAAM1I,EAAS0I,OAG7DuD,EAPU,gBAQZC,EAAOpL,EAAUmL,GARL,gDAWME,EAAIxF,QAAQC,GAXlB,OAWNxG,EAXM,OAYV8L,EAAOpL,EAAUV,GAZP,oFAkBd,IACEkB,EAAS4K,EAAKlL,KAAKoL,KAAKC,MAAM/K,OAC9B,MAAOgL,GACPhL,EAAS,IAELiL,EAASnL,EAAmB8K,EAAKlL,KAAKK,KAAMC,IAC3C8K,KAAOF,EAAKlL,KAAKoL,KACxBxH,EAAO4E,UAAY+C,EACnB,EAAKV,KAAK,aACV,EAAKA,KAAK,oBA3BI,0DA1EF,wDAwGdJ,cAAgB,WACdU,EAAI/G,QACFR,EAAO5E,SACP,EAAKwM,0BACL,EAAKC,aACL,EAAKC,oBAEP,EAAKV,mBAAqBW,aACxB,kBAAM,EAAKd,KAAK,iBA5MO,MA4Fb,EAqHdW,0BAA4B,SAACI,EAAQC,GAEnC,OADAjI,EAAOmE,SAAU,EACF,cAAX6D,GACFhI,EAAOvG,WAAY,EACZ,EAAK0J,WAAW8E,EAAS,aAEhCjI,EAAOvG,WAAY,EACZ,EAAK0J,WAAW8E,EAAS,WA5HtB,EAgIdJ,aAAe,SAACI,GAAa,IAGrBlH,EAFWkH,EAAT7L,KAIR2E,EAAImH,mBAAqB,IAAI5B,KAAmB,IAAdvF,EAAIoH,SAAgBC,iBACtDrH,EAAIsH,IAAMrI,EAAO8E,KAAKxG,OAEtB0B,EAAO8E,KAAKwD,KAAKvH,GACjBf,EAAOuF,UAAUxE,EAAIwH,SAAWxH,EAAIlB,KACpCG,EAAO+E,WAAWhE,EAAIlB,OAAQ,EAC9BG,EAAOgF,UAAUjE,EAAIyH,YAAa,EAE9B3F,EAAa4F,SAAS1H,EAAIyH,YAC5BxI,EAAOiF,WAAWC,QAAQnE,EAAIyH,aAGhC,EAAKvB,KAAK,gBAjJE,EAoJda,mBAAqB,SAACG,GAAa,IFnFPS,EEsFpBC,EAFWV,EAAT7L,KAKNyJ,EAaE8C,EAbF9C,UACA0C,EAYEI,EAZFJ,QACAtC,EAWE0C,EAXF1C,QACAC,EAUEyC,EAVFzC,SACAN,EASE+C,EATF/C,QACAO,EAQEwC,EARFxC,MACAyC,EAOED,EAPFC,WACAC,EAMEF,EANFE,WACAC,EAKEH,EALFG,WACAC,EAIEJ,EAJFI,SACAC,EAGEL,EAHFK,SACAC,EAEEN,EAFFM,SACAxD,EACEkD,EADFlD,IASF,GANIQ,GAAWC,IACblG,EAAOwF,SAASO,SAASC,eAAiBiD,EAC1CjJ,EAAOwF,SAASO,SAASE,QAAUA,EACnCjG,EAAOwF,SAASO,SAASG,SAAWA,GAGlC6C,GAAYC,EAAU,CACxB,IAAIE,EAAQlJ,EAAOwF,SAASe,SACzB4C,KAAI,SAACC,GAAD,OAASA,EAAIb,WACjBc,QAAQd,GACPe,EAAU,CACZf,UACAgB,KAAMP,EACNQ,SAAUT,EACVrL,KAAMsC,EAAOuF,UAAUgD,IAErBkB,EAAY,CACdlB,UACAgB,KAAMT,EACNU,SAAUX,EACVnL,KAAMsC,EAAOuF,UAAUgD,IAErBW,EAAQ,GACVlJ,EAAOwF,SAASe,SAAS+B,KAAKgB,GAC9BtJ,EAAOwF,SAASgB,MAAM8B,KAAKmB,KAE3BzJ,EAAOwF,SAASe,SAAS2C,GAASI,EAClCtJ,EAAOwF,SAASgB,MAAM0C,GAASO,GAEjCzJ,EAAOwF,SAASe,SAAWvG,EAAOwF,SAASe,SACxC3D,MAAK,SAAChB,EAAG8H,GAAJ,OAAUA,EAAEH,KAAOG,EAAEF,UAAY5H,EAAE2H,KAAO3H,EAAE4H,aACjDG,MAAM,EAAG,IACZ3J,EAAOwF,SAASgB,MAAQxG,EAAOwF,SAASgB,MACrC5D,MAAK,SAAChB,EAAG8H,GAAJ,OAAUA,EAAEH,KAAOG,EAAEF,UAAY5H,EAAE2H,KAAO3H,EAAE4H,aACjDG,MAAM,EAAG,IACZ3J,EAAOwF,SAASa,gBAAkB,IAAIC,KAGpCb,IACFzF,EAAOwF,SAASC,IAAIP,QAAUxF,WAAW+F,GAAK9F,QAAQ,GACtDK,EAAOwF,SAASC,IAAIC,QAAQ4C,KAAK5I,WAAW+F,GAAK9F,QAAQ,IACzDK,EAAOwF,SAASC,IAAIC,QAAQkE,SAG1BzD,GAASyC,IACX5I,EAAOwF,SAASW,MAAMC,KAAOwC,EAC7B5I,EAAOwF,SAASW,MAAMjB,QAAUxF,WAAWyG,GAAOxG,QAAQ,GAC1DK,EAAOwF,SAASW,MAAMT,QAAQ4C,KAAK5I,WAAWyG,GAAOxG,QAAQ,IAC7DK,EAAOwF,SAASW,MAAMT,QAAQkE,SAG5BhE,IACF5F,EAAOwF,SAASI,QAAQE,SF5JA4C,EE4JwB5J,SAAS8G,IF3JhD,GAGkB,GAAN,OAAU8C,EAAV,KACrBA,EAHO,KAIH,GAAN,OAAU5J,SAAS4J,EALR,IAKX,aAA4C5J,SAC1C4J,EANS,IAKX,KAIA,UAAU5J,SAAS4J,EARV,MAQT,aAA0C5J,SACvC4J,EATM,KADE,IASX,aAEM5J,SAAS4J,EAXJ,IASX,KEmJE1I,EAAOwF,SAASI,QAAQC,UAAxB,gBAA6CA,KA9NnC,EAkOdiB,WAAa,WACX,IAAK,IAAIzI,EAAI,EAAGA,EAAIwE,EAAavE,SAAUD,EAAG,CAC5C,IAAIwL,EAAQhH,EAAaxE,GACzB2B,EAAOiF,WAAWC,QAAQ2E,GAAS,EACnC7J,EAAOiF,WAAWE,SAAS0E,GAAS,EACpC7J,EAAOsF,cAAcuE,GAAS,IAAI1L,MArUb,IAqUuCwH,KAAK,GAEnE3F,EAAOiF,WAAWG,QAAU,IAAIjH,MAvUT,IAuUmCwH,KAAK,IAC/D,EAAKuB,oBAAsBa,YACzB,EAAK+B,oBAxUmB,MA6Fd,EAgPd/C,QAhPc,sBAgPJ,4BAAAnF,EAAA,+EAEe2F,EAAItF,YAFnB,OAEAgC,EAFA,OAGNjE,EAAOC,IAAMgE,EAHP,gDAKNjE,EAAOC,KAAM,EALP,QAOR,EAAKgH,KAAK,cAPF,yDAhPI,EA0PdD,SA1Pc,sBA0PH,4BAAApF,EAAA,sEACU2F,EAAI5F,aADd,OACH9H,EADG,OAETmG,EAAOnG,KAAOA,EACd,EAAKoN,KAAK,eAHD,2CA1PG,EAgQd6C,oBAAsB,WAEpB,IAF2B,IAAD,EACI9J,EAAOiF,WAA7BC,EADkB,EAClBA,QAASC,EADS,EACTA,SACR9G,EAAI,EAAGA,EAAIwE,EAAavE,SAAUD,EAAG,CAC5C,IAAIwL,EAAQhH,EAAaxE,GACnB0L,EAAU7E,EAAQ2E,GAClBG,EAAU7E,EAAS0E,GACzB7J,EAAOsF,cAAcuE,GAAOvB,KAAKyB,EAAUC,GAC3ChK,EAAOsF,cAAcuE,GAAOD,QAC5B5J,EAAOiF,WAAWE,SAAS0E,GAASE,EAEtC/J,EAAOiF,WAAWG,QAAQkD,KAAKtI,EAAO8E,KAAKxG,OAAS,GACpD0B,EAAOiF,WAAWG,QAAQwE,QAC1B,EAAK3C,KAAK,yBA5QE,EAwRd3D,eAAiB,SAAC4F,GACDlJ,EAAOiF,WAAWG,QAAQ8D,KAEzClJ,EAAOqF,SAAWrF,EAAOiF,WAAWG,QAAQ8D,GAC5C,EAAKjC,KAAK,cA5RE,EA+RdxD,eAAiB,SAAC9F,GAIhB,IAHA,IAAIZ,EAAW,GACX7D,EAAI,EACJC,EAAI,EACR,MAA2BkE,OAAO4M,QAAQjK,EAAO4E,UAAU/H,OAA3D,eAAmE,CAAC,IAAD,sBAAvDqN,EAAuD,KAAlDtO,EAAkD,KAC7DA,EAAM+B,QAAUA,IAClBZ,EAASS,GAAK0M,EACdnN,EAASkB,KAAO,OAChB/E,GAAwB,EAApB0C,EAAMmC,SAAS7E,EAAS,GAC5BC,GAAwB,EAApByC,EAAMmC,SAAS5E,EAAS,KAGhC6G,EAAO4E,UAAU7H,SAAWA,EAC5BiD,EAAO4E,UAAUhI,OAAS,CAAE1D,IAAGC,KAC/B,EAAK8N,KAAK,oBACVkD,OAAOC,SAASC,KAAO,UA9SX,EAiTdjH,iBAAmB,SAACkH,GAClB,EAAK1D,cAAc0D,GACnB,EAAKjH,aACL,EAAK4D,KAAK,qBApTE,EAuTdzD,YAAc,SAAC+G,GACb,IAAMjD,EAAOkD,IAAYD,GACzB,EAAK3D,cAAcU,GACnB,EAAKL,KAAK,qBA1TE,EA6Td1D,aAAe,SAACnI,GACdiC,OAAOC,KAAKlC,GAAUmC,SAAQ,SAAC2M,GAC7BtG,aAAa6G,QAAb,sBAAoCP,GAAO9O,EAAS8O,OAEtDQ,WAAW,EAAKhH,KAAM,MAjUV,EAoUdvB,WApUc,uCAoUD,qCAAAP,EAAA,yDAASQ,EAAT,EAASA,QAASC,EAAlB,EAAkBA,MACxBrC,EAAOnG,KADD,yCACesQ,OAAOC,SAASC,KAAO,WADtC,gCAIM9C,EAAIpF,WAAWC,EAASC,GAJ9B,OAITP,EAJS,8DAMLxF,EAAQqO,OAAO,EAAD,IAAIlC,SAAS,OAAS,gBAA5B,KANH,kBAOF,EAAKmC,UAAUtO,IAPb,QASPwF,EAAOxF,MAAO,EAAKsO,UAAU9I,EAAOxF,OAC/BwF,EAAO1F,OACRyO,EAAQ/I,EAAO1F,KACrB4D,EAAOiE,OAAO4G,EAAMrN,IAAMqN,EAC1B,EAAK1H,WAAW,6BAA8B,YAEhD,EAAK8D,KAAK,cAfC,yDApUC,wDAsVd1E,WAtVc,uCAsVD,qCAAAX,EAAA,yDAASQ,EAAT,EAASA,QAASI,EAAlB,EAAkBA,QACxBxC,EAAOnG,KADD,uBAET,EAAKwJ,aAFI,kBAGD8G,OAAOC,SAASC,KAAO,WAHtB,cAKX,EAAKhH,aALM,kBAQMkE,EAAIhF,WAAWH,EAASI,GAR9B,OAQTV,EARS,gEAULxF,EAAQqO,OAAO,EAAD,IAAIlC,SAAS,OAAS,mBAA5B,KAVH,kBAWF,EAAKmC,UAAUtO,IAXb,QAaPwF,EAAOxF,MAAO,EAAKsO,UAAU9I,EAAOxF,OAC/BwF,EAAO1F,OACRyO,EAAQ/I,EAAO1F,KACrB4D,EAAOiE,OAAO4G,EAAMrN,IAAMqN,EAC1B,EAAK1H,WAAW,6BAA8B,YAEhD,EAAK8D,KAAK,cAnBC,0DAtVC,wDA4WdnN,OA5Wc,sBA4WL,sBAAA8H,EAAA,sEACD2F,EAAIzN,SADH,OAEPqQ,OAAOC,SAASU,SAFT,2CA5WK,EAiXdrI,UAjXc,uCAiXF,mCAAAb,EAAA,6DAASc,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,EAAGC,EAAtB,EAAsBA,KAAtB,SACW2E,EAAI9E,UAAUC,EAAUC,EAAGC,GADtC,OACJqB,EADI,OAEVjE,EAAOC,IAAMgE,EACb,EAAKgD,KAAK,cAHA,2CAjXE,wDAuXd9D,WAAa,SAAC8E,EAASrO,GACjB,EAAKmR,eAAeC,aAAa,EAAKD,eAC1C/K,EAAOkE,OAAS,CAAE+D,QAAS0C,OAAO1C,GAAUrO,SAC5C,EAAKmR,cAAgBL,WAAW,EAAKO,WAzdb,KA0dxB,EAAKhE,KAAK,cA3XE,EA8XdgE,WAAa,WACXjL,EAAOkE,QAAS,EAChB,EAAK+C,KAAK,cAhYE,EAmYd2D,UAAY,SAAC3C,GACX,EAAK9E,WAAW8E,EAAS,UApYb,EAuYd/E,UAAY,SAAC9G,GAAU,IACbgI,EAAkBhI,EAAlBgI,MAAO8G,EAAW9O,EAAX8O,OACflL,EAAOoE,MAAQA,EACfpE,EAAO0G,YAAcwE,EACrB,EAAKjE,KAAK,cA3YE,EA8Yd5D,WAAa,WACXrD,EAAOoE,OAAQ,EACfpE,EAAO0G,YAAc,GACrB,EAAKO,KAAK,cAjZE,EA4ZdkE,cAAgB,WACd,OAAOnL,EAAO2G,YA7ZF,EAgadyE,QAAU,WACR,OAAOpL,EAAOnG,MAjaF,EAoadwR,aAAe,WACb,OAAOrL,EAAOC,KAraF,EAwadqL,YAxac,uCAwaA,WAAOlJ,GAAP,SAAAR,EAAA,yDACP5B,EAAOiE,OAAO7B,GADP,gCAEqBmF,EAAIrF,SAASE,GAFlC,OAEVpC,EAAOiE,OAAO7B,GAFJ,uCAILpC,EAAOiE,OAAO7B,IAJT,2CAxaA,wDA+admJ,YAAc,WACZ,OAAOvL,EAAO5E,UAhbF,EAmbdoQ,UAAY,WACV,OAAOxL,EAAOkE,QApbF,EAubduH,SAAW,WACT,OAAOzL,EAAOoE,OAxbF,EA2bdsH,eAAiB,WACf,OAAO1L,EAAO0G,aA5bF,EA+bdiF,QAAU,WACR,OAAO3L,EAAO8E,MAhcF,EAmcd8G,cAAgB,WACd,OAAO5L,EAAO+E,YApcF,EAucd8G,aAAe,WACb,OAAO7L,EAAOgF,WAxcF,EA2cd8G,iBAAmB,WACjB,OAAO9L,EAAOsF,eA5cF,EA+cdyG,oBAAsB,WACpB,OAAO/L,EAAOiF,WAAWC,SAhdb,EAmdd8G,YAAc,WACZ,OAAOhM,EAAOwF,UApdF,EAuddyG,eAAiB,WACf,IAAMC,EAAO/B,OAAOC,SAASC,KAAK8B,UAAU,EAAGhC,OAAOC,SAASC,KAAK/L,QACpE,OAAI4N,EAAKlL,WAAW,QAAgB,OAChCkL,EAAKlL,WAAW,QAAgB,OAChCkL,EAAKlL,WAAW,QAAUkL,EAAKlL,WAAW,WAAmB,MAC7DkL,EAAKlL,WAAW,QAAgB,OAC7B,WA7dK,EAgedoL,oBAAsB,WACpB,OAAOpM,EAAOvG,WAjeF,EAoed4S,UAAY,WACV,OAAOrM,EAAOmE,SAreF,EAwedmI,aAAe,WACb,OAAOtM,EAAO4E,WAzeF,EA4ed2H,uBAAyB,WACvB,OAAOlR,GA7eK,EAgfdmR,cAAgB,WACd,OAAOxM,EAAOqF,UA/edpK,EAAWwR,SAAS,EAAK3J,iBACzB,EAAKY,OACLyG,OAAOuC,SAAW,EAAKf,QAJX,E,wDAgRZgB,KAAKjJ,S,sCAIL1D,EAAOqE,aAAerE,EAAOqE,YAC7BsI,KAAK1F,KAAK,e,qCAgIV,OAAOjH,EAAOqE,c,wCAId,OAAOrE,EAAOsE,a,GA1ZEsI,iBEvBLC,E,kDAxEb,aAAe,IAAD,8BACZ,gBAUFC,qBAAuB,WACrBC,EAAMC,eAAe,YAAa,EAAKC,SACvCF,EAAMC,eAAe,cAAe,EAAKC,UAb7B,EAgBdA,QAAU,WACR,IAAMxT,EAAYsT,EAAMX,sBAClBvS,EAAOkT,EAAM3B,UACnB,EAAK8B,SAAS,CAAEzT,YAAWI,UAnBf,EAsBdH,UAAY,WACVuB,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUxK,aAxBZ,EA4BduB,kBAAoB,WAClB,EAAKkT,SAAS,CACZnT,oBAAqB,EAAKqT,MAAMrT,sBA9BtB,EAkCdD,OAAS,WACPmB,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUrK,WApCZ,EAwCdW,cAAgB,WACd0B,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUhL,kBA1CZ,EA6CdoV,OAAS,WAAO,IAAD,EACmC,EAAKD,MAA7C3T,EADK,EACLA,UAAWI,EADN,EACMA,KAAME,EADZ,EACYA,mBACzB,OACE,yBAAKT,UAAU,mCACb,kBAAC,IAAD,CAAWgU,OAAK,EAAChU,UAAU,OACzB,kBAAC,IAAD,CACE2E,KAAK,QACL3E,UAAU,0CAEV,kBAACiU,EAAD,MACA,kBAAC,IAAD,CAAKC,QAAM,EAAClU,UAAU,wBACpB,kBAACmU,EAAD,CAAe/T,UAAW,EAAKA,UAAWD,UAAWA,IACrD,kBAACiU,EAAD,CACE7T,KAAMA,EACNE,mBAAoBA,EACpBC,kBAAmB,EAAKA,kBACxBF,OAAQ,EAAKA,UAGjB,kBAAC6T,EAAD,CAAcpU,cAAe,EAAKA,oBA9D1C,EAAK6T,MAAQ,CACXrT,oBAAoB,EACpBN,UAAWsT,EAAMX,sBACjBvS,KAAMkT,EAAM3B,WAEd2B,EAAMa,GAAG,YAAa,EAAKX,SAC3BF,EAAMa,GAAG,cAAe,EAAKX,SARjB,E,UADSY,IAAMC,W,gBCNhB,cAAwB,IAArBvU,EAAoB,EAApBA,cAChB,OACE,yBAAKD,UAAU,eACb,kBAAC,IAAD,CACEA,UAAU,gEACV2E,KAAK,SAEL,kBAAC,IAAD,CACE3E,UAAU,aACVyU,KAAK,IACLC,MAAO,CAAEC,WAAY,SAErB,yBAAK3U,UAAU,kBACb,yBACEkE,GAAG,YACHlE,UAAU,2BACV0U,MAAO,CAAEE,SAAU,QACnB5T,IAAI,kBACJG,IAAI,qBAIV,0BACEnB,UAAU,iDACVE,QAASD,GAET,uBAAGD,UAAU,kBAAb,cCnBK,cAA8B,IAA3B6U,EAA0B,EAA1BA,KAAM5U,EAAoB,EAApBA,cAChB6U,EAAcD,EAAK3J,OAAS2J,EAAK3J,MAAMlG,OACvC4N,EAAO/B,OAAOC,SAASC,KAAK8B,UAAU,EAAGhC,OAAOC,SAASC,KAAK/L,QAChE+P,GAAS,EAKb,OAJAF,EAAKxJ,QAAQpH,SAAQ,SAAC+Q,GAChBpC,EAAKlL,WAAWsN,KAAQD,GAAS,MAIrC,kBAAC,IAAD,CAASL,MAAO,CAAEjQ,SAAU,aAC1B,kBAAC,IAAD,CACEzE,UAAW8U,GAAe,kBAC1BnU,IAAKmU,EAAc,IAAMG,IACzB5T,GAAIyT,EAAc,IAAMD,EAAKxT,GAC7B0T,OAAQA,EACR7U,QAASD,GAER4U,EAAK1J,YACJ,yBACEnL,UAAU,mCACVkV,wBAAyB,CAAEC,OAAQN,EAAK1J,cAG3C0J,EAAK5J,OAAS,8BAAO4J,EAAK5J,OAC1B4J,EAAKzJ,WACJ,yBACEpL,UAAU,mCACVkV,wBAAyB,CAAEC,OAAQN,EAAKzJ,cAI7C0J,GACC,kBAAC,IAAD,CAAUnU,IAAKW,IAAcE,OAAK,EAACC,KAAMoT,EAAKpT,KAAMiT,MAAO,CAAEU,IAAK,IAC/DP,EAAK3J,MAAM2E,KAAI,SAACwF,EAAStG,GAAV,OACd,kBAAC,IAAD,CAAc6B,IAAK7B,EAAKpO,IAAKsU,IAAc5T,GAAIgU,EAAQhU,IACpDgU,EAAQpK,aCxCR,eAAyC,IAA5BC,EAA2B,EAArCF,SAAiB/K,EAAoB,EAApBA,cACjC,OACE,yBAAKD,UAAU,eACZkL,EAAM2E,KAAI,SAACyF,EAAKvG,GAAN,OACT,yBAAK6B,IAAK7B,GACR,wBAAI/O,UAAU,2BAA2BsV,EAAIrK,OACvB,qBAAdqK,EAAIpK,OAAyBoK,EAAIpK,MAAMlG,QAC7C,kBAAC,IAAD,CAAKhF,UAAU,+BACZsV,EAAIpK,MAAM2E,KAAI,SAACgF,EAAM9F,GAAP,OACb,kBAACwG,EAAD,CACE3E,IAAK7B,EACL8F,KAAMA,EACN5U,cAAeA,cCyClBuV,G,kDAhDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,SAAW,WACT,EAAK9B,SAAL,2BACK,EAAKE,OADV,IAEE/I,YAAa0I,EAAMkC,eACnBC,gBAAiBnC,EAAMoC,sBAjBR,EAqBnB5V,cAAgB,WACd0B,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUhL,kBArBxB,EAAKmV,MAAQ,CACX/I,YAAa0I,EAAMkC,eACnBC,gBAAiBnC,EAAMoC,mBAEzBpC,EAAMa,GAAG,YAAa,EAAKoB,UANV,E,mEAUjBjC,EAAMC,eAAe,YAAaL,KAAKqC,Y,+BAiB/B,IACAE,EAAoBvC,KAAKS,MAAzB8B,gBACFE,EAAUC,IACd,eACA,OACA,SACA1C,KAAKS,MAAM/I,aAAe,QAG5B,OACE,kBAAC,IAAD,CAAKpK,IAAI,QAAQX,UAAW8V,EAASE,GAAI,CAAEC,KAAM,GAAKC,GAAI,CAAED,KAAM,IAChE,kBAACE,EAAD,CAAmBlW,cAAeoT,KAAKpT,gBACvC,kBAACmW,GAAD,CACEpL,SAAU4K,EACV3V,cAAeoT,KAAKpT,qB,GA1CJsU,IAAMC,WCN1B6B,GAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAd,OACjB,4BAAQvW,UAAU,mDAChB,kBAAC,IAAD,CAAWgU,OAAK,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGsC,EAAUzG,KAAI,SAACgF,EAAM9F,GAAP,OACb,uBAAG6B,IAAK7B,EAAK0F,KAAMI,EAAKxT,GAAIrB,UAAU,YACnC6U,EAAK5J,WAIZ,0BAAMjL,UAAU,kCAAkCuW,OAM1DF,GAAWG,aAAe,CACxBC,WAAW,EACXF,UAAW,iCACXD,UAAW,CACT,CACErL,MAAO,OACP5J,GAAI,mBAEN,CACE4J,MAAO,aACP5J,GAAI,8BAEN,CACE4J,MAAO,QACP5J,GAAI,wBAEN,CACE4J,MAAO,YACP5J,GAAI,+BAEN,CACE4J,MAAO,OACP5J,GAAI,iDAEN,CACE4J,MAAO,kBACP5J,GAAI,sCAKKgV,UCzBAK,GAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,SAAvB,OACtB,kBAAC,IAAD,CAAW7C,OAAK,GACd,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,CACEhU,UAAU,mBACVgW,GAAI,CAAEC,KAAM,GAAI3S,OAAQ,GACxB4S,GAAI,CAAED,KAAM,EAAG3S,OAAQ,GACvBwT,GAAG,KACHnW,IAAI,SAEFiW,GAAY,kBAAC,EAAD,MACbD,GACCE,GAAY,kBAAC,GAAD,U,UCjBP,eAA8B,IAA3BE,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACtB,OACE,yBAAKhX,UAAS,yBAAoB+W,EAAO,GAAK,WAC5C,uBAAG/W,UAAU,QAAb,8gBAUA,kBAACiX,GAAA,EAAD,CAAQjX,UAAU,kBAAkBE,QAAS8W,GAA7C,0BCdS,eAAe,IAAZlU,EAAW,EAAXA,KAChB,OAAOA,EACL,yBAAK9C,UAAU,QACb,yBAAKA,UAAS,kCAA6B8C,EAAKxC,QAC7CwC,EAAK6L,UAIV,I,oBCPW,eAAwC,IAArC9D,EAAoC,EAApCA,QAAS1K,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACpC,OAAOyK,GAAW1K,EAChB,GAEA,yBAAKH,UAAU,mCACb,kBAACkX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,QAAtB,4DAC4D,IAC1D,uBAAGyU,KAAK,cAAR,YAFF,8BAIA,kBAAC0C,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,cACpB,uBACEyU,KAAK,uDACL2C,OAAO,SACPC,IAAI,sBACJrX,UAAU,QAEV,kBAACiX,GAAA,EAAD,CAAQK,QAAQ,SAAhB,cAEF,kBAACL,GAAA,EAAD,CAAQK,QAAQ,UAAUpX,QAASE,GACjC,uBAAGJ,UAAU,uBAAb,WADF,iB,yCCnBJ0U,GAAQ,CACZ6C,QAAS,CACPC,gBAAiB,yBAEnBtO,QAAS,CACPuO,OAAQ,OACRC,OAAQ,OACRC,UAAW,MACXC,KAAM,MACNC,QAAS,OACTpT,SAAU,QACVlD,MAAO,OACP6T,IAAK,MACL0C,UAAW,uBACXC,MAAO,MACPnD,SAAU,QACVoD,SAAU,WAIC,eAAuC,IAApCvW,EAAmC,EAAnCA,KAAMsI,EAA6B,EAA7BA,WAAYkO,EAAiB,EAAjBA,WAClC,OACE,kBAAC,KAAD,CACEC,aAAa,EACbC,OAAQ1W,EACR2W,aAAa,eACbpY,UAAU,0CACVqY,2BAA2B,EAC3B3D,MAAOA,GACP4D,eAAgBvO,EAChBwO,eAAgB,KAEhB,yBAAKvY,UAAU,oBACb,4BACE,2CAEF,4BACE,0BAAMA,UAAU,0BACd,uBAAGA,UAAU,iBAAiBE,QAAS6J,GAAvC,YAMN,yBAAK/J,UAAU,wBACb,kBAACwY,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,qBACA,kBAACF,GAAA,EAAKG,QAAN,CACEC,YAAY,aACZC,IAAK,SAACA,GAAD,OAAU,GAAKC,SAAWD,GAC/BE,GAAG,WACHC,KAAK,SAIX,kBAAC/B,GAAA,EAAD,CACEjX,UAAU,cACVE,QAAS,kBAAM+X,EAAW,GAAKa,SAASxW,SAF1C,c,UCtDAoS,GAAQ,CACZ6C,QAAS,CACPC,gBAAiB,yBAEnBtO,QAAS,CACPuO,OAAQ,OACRC,OAAQ,OACRC,UAAW,MACXC,KAAM,MACNC,QAAS,OACTpT,SAAU,QACVlD,MAAO,OACP6T,IAAK,MACL0C,UAAW,uBACXC,MAAO,MACPnD,SAAU,QACVoD,SAAU,WAIC,eAAyC,IAAtCvW,EAAqC,EAArCA,KAAMsI,EAA+B,EAA/BA,WAAYkP,EAAmB,EAAnBA,aAClC,OACE,kBAAC,KAAD,CACEf,aAAa,EACbC,OAAQ1W,EACR2W,aAAa,eACbpY,UAAU,0CACVqY,2BAA2B,EAC3B3D,MAAOA,GACP4D,eAAgBvO,EAChBwO,eAAgB,KAEhB,yBAAKvY,UAAU,oBACb,4BACE,8CAEF,4BACE,0BAAMA,UAAU,0BACd,uBAAGA,UAAU,iBAAiBE,QAAS6J,GAAvC,YAMN,yBAAK/J,UAAU,wBACb,kBAACwY,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKG,QAAN,CACEC,YAAY,uCACZC,IAAK,SAACA,GAAD,OAAU,GAAKC,SAAWD,GAC/BE,GAAG,WACHC,KAAK,SAIX,kBAAC/B,GAAA,EAAD,CACEjX,UAAU,cACVE,QAAS,kBAAM+Y,EAAa,GAAKH,SAASxW,SAF5C,YCqDS4W,G,kDA/Fb,aAAe,IAAD,8BACZ,gBAWF1F,qBAAuB,WACrBC,EAAMC,eAAe,YAAa,EAAKC,UAb3B,EAgBdA,QAAU,WACR,IAAM7I,EAAQ2I,EAAMtB,WACdtH,EAAU4I,EAAMV,YAChBnI,EAAS6I,EAAMvB,YACf/R,EAAYsT,EAAMX,sBACxB,EAAKc,SAAS,CAAE9I,QAAOD,UAASD,SAAQzK,eArB5B,EAwBd6W,cAAgB,WACd1M,aAAa6G,QAAQ,oBAAoB,GACzC,EAAKyC,SAAS,CAAEuF,UAAU,KA1Bd,EA6BdpP,WAAa,WACXpI,EAAWkS,SAAS,CAClBpK,WAAYE,IAAU3K,eA/BZ,EAmCdiZ,WAAa,SAACmB,GACZzX,EAAWkS,SAAS,CAClBpK,WAAYE,IAAU7K,mBACtB4K,QAAS0P,KAtCC,EA0CdH,aAAe,SAAC/P,GACd,IACQJ,EADO2K,EAAMrB,iBACbtJ,QACRnH,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUvK,YACtBsK,QAAS,CAAER,UAASJ,cA/CV,EAmDd1I,UAAY,WACVuB,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUxK,aArDZ,EAyDd4U,OAAS,WAAO,IAAD,EACkD,EAAKD,MAA5DhJ,EADK,EACLA,MAAOuO,EADF,EACEA,gBAAiBzO,EADnB,EACmBA,OAAQzK,EAD3B,EAC2BA,UAAW0K,EADtC,EACsCA,QAC3C8L,EAAa,EAAKlB,MAAlBkB,SACR,OACE,kBAAC,IAAD,CAAW3C,OAAK,EAAChU,UAAU,oBACzB,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAasZ,cAAY,IACzB,kBAAC,IAAD,CAAKtZ,UAAU,mBAAmBW,IAAI,QACpC,kBAAC,EAAD,MACA,kBAAC4Y,GAAD,CAAYzW,KAAM8H,IAClB,kBAAC4O,GAAD,CACE3O,QAASA,EACT1K,UAAWA,EACXC,UAAW,EAAKA,YAEjBuW,EACD,kBAAC8C,GAAD,CACE1C,MAAOsC,EACPrC,cAAe,EAAKA,gBAEtB,kBAAC,GAAD,QAGJ,kBAAC0C,GAAD,CACEjY,KAAgB,WAAVqJ,EACNf,WAAY,EAAKA,WACjBkO,WAAY,EAAKA,aAEnB,kBAAC0B,GAAD,CACElY,KAAgB,WAAVqJ,EACNf,WAAY,EAAKA,WACjBkP,aAAc,EAAKA,iBAtFzB,EAAKnF,MAAQ,CACXhJ,MAAO2I,EAAMtB,WACbtH,QAAS4I,EAAMV,YACfnI,OAAQ6I,EAAMvB,YACd/R,UAAWsT,EAAMX,sBACjBuG,gBAAiB/O,aAAaC,QAAQ,qBAExCkJ,EAAMa,GAAG,YAAa,EAAKX,SATf,E,UADgBY,IAAMC,W,sCCXvB,eAA+C,IAA5CvJ,EAA2C,EAA3CA,MAAO2O,EAAoC,EAApCA,SAAU5Z,EAA0B,EAA1BA,UAAc6Z,EAAY,iDACrD/D,EAAUC,IACd/V,EACA,cACA,eACA,WAGF,OACE,kBAAC,IAAD,eAAK8Z,GAAG,KAAKhD,GAAG,IAAI9W,UAAW8V,GAAa+D,GAC1C,0BAAM7Z,UAAU,gCAAgC4Z,GAChD,wBAAI5Z,UAAU,cAAciL,K,+BCZnB,YAACwK,GACd,OACE,yBAAKzV,UAAU,yBACb,yBAAKA,UAAU,eACb,kBAAC+Z,GAAA,EAAD,KACE,kBAAC9C,GAAA,EAAD,CAAQK,QAAQ,YAAY0C,UAAQ,GAClC,uBAAGha,UAAU,kBAAb,eAEF,kBAACiX,GAAA,EAAD,CAAQK,QAAQ,YAAY0C,UAAQ,GAClC,uBAAGha,UAAU,kBAAb,SAEF,kBAACiX,GAAA,EAAD,CAAQK,QAAQ,YAAY0C,UAAQ,GAClC,uBAAGha,UAAU,kBAAb,aAEF,kBAACiX,GAAA,EAAD,CAAQK,QAAQ,YAAYpX,QAASuV,EAAMwE,aACzC,uBAAGja,UAAU,kBAAb,aAEF,kBAACiX,GAAA,EAAD,CAAQK,QAAQ,YAAYpX,QAASuV,EAAMyE,WACzC,uBAAGla,UAAU,kBAAb,eAEF,kBAACiX,GAAA,EAAD,CAAQK,QAAQ,YAAYpX,QAAS,kBAAMuV,EAAM0E,YAAY,SAC3D,uBAAGna,UAAU,kBAAb,mB,UCrBG,YAACyV,GAAW,IAAD,EACMA,EAAMrR,KAA5BM,EADgB,EAChBA,WAAYL,EADI,EACJA,MACd+V,EAAO,GACbrW,OAAOC,KAAKU,GAAYT,SAAQ,SAACqC,EAAMyI,GACjCrK,EAAW4B,IAAkB,SAATA,GACtB8T,EAAKpL,KACH,yBAAK4B,IAAK7B,GACR,0BAAM/O,UAAU,kBAAkBsG,EAAlC,KACC5B,EAAW4B,QAIpB,IAAM+T,EAAYtW,OAAOC,KAAKU,GAAYM,OAAS,EAC7CsV,EAAsB,YAAVjW,EACdkW,EAA6B,qBAAVlW,EAAwBK,EAAW6B,KAAOlC,GAAS,GAC1E,OACE,yBACErE,UAAS,qBAAgBsa,EAAY,UAAY,IACjDpW,GAAE,qBAAgBG,IAElB,yBAAKrE,UAAU,eACb,yBAAKA,UAAS,cAASqa,EAAY,UAAY,KAC7C,uBAAGra,UAAU,OACX,0BAAMA,UAAU,aACbua,GAAa,0BAAMva,UAAU,gBAAhB,cAEhB,kBAACwa,GAAA,EAAD,CAAOlD,QAAQ,UAAUtX,UAAU,uBAChC0E,EAAW+V,aAKnBL,EAAKpV,OAAS,GACb,yBAAKhF,UAAU,6BAA6Boa,KChCrC,YAAC3E,GAAW,IACjBpR,EAA6BoR,EAA7BpR,MAAOC,EAAsBmR,EAAtBnR,MAAOI,EAAe+Q,EAAf/Q,WAChBmU,EAAMtE,cACZ,OACE,uBACEsE,IAAKA,EACL7Y,UAAU,2BACV0a,WAAW,EACXC,YAAa,SAACtL,GACZA,EAAMuL,aAAaC,QACjBC,oBACA9S,KAAK+S,UAAU,CAAE1W,QAAOC,QAAOI,aAAYC,KAAM,mBAIrD,gBAACqW,GAAD,CAAW5W,KAAM,CAAEM,kB,mDC2UVuW,G,kDAtVb,WAAYxF,GAAQ,IAAD,uBACjB,gBAeFyF,oBAAsB,SAAC9W,GACrB,IAAMM,EAAa,GAEbL,EAAQD,EAAKC,MAMnB,OAJAN,OAAOC,KAAKI,EAAKM,YAAYT,SAAQ,SAAC2M,GACpClM,EAAWkM,GAAOxM,EAAKM,WAAWkM,MAG7B,CAAEvM,QAAOH,GAAIE,EAAKF,GAAIQ,aAAYyW,cAPnB,KAlBL,EA4BnBC,0BAA4B,SAACC,GAAe,IAAD,EACbA,EAAUC,MAA9B7X,EADiC,EACjCA,SAAUF,EADuB,EACvBA,MACVW,EAAaT,EAAbS,GAAIS,EAASlB,EAATkB,KAEZ,GAAIT,IAAO,EAAK4P,MAAM1P,KAAKF,KAE3B,EAAK0P,SAAS,CAAE2H,cAAe,GAAIC,YAAa,KAE3CtX,GAEQ,SAATS,GAAmBT,IAAO,EAAK4P,MAAM1P,KAAKF,IAAI,CAChD,IAAME,EAAOb,EAAMW,GACnB,EAAK0P,SAAS,CAAExP,KAAM,EAAK8W,oBAAoB9W,OAxChC,EA4CnBqX,YAAc,SAACpX,GACb,EAAKuP,UAAS,SAAC8H,GAAe,IACpBtX,EAASsX,EAATtX,KAER,OADAA,EAAKC,MAAQA,EACN,CAAED,UACR,EAAKuX,cAjDS,EAoDnBC,oBAAsB,SAACtV,EAAMhE,GAC3B,EAAKsR,UAAS,SAAC8H,GAAe,IACpBtX,EAASsX,EAATtX,KAER,OADAA,EAAKM,WAAW4B,GAAQhE,EACjB,CAAE8B,UACR,EAAKuX,cAzDS,EA4DnBE,eAAiB,SAACvV,EAAMhE,GACtB,EAAKsR,UAAS,SAAC8H,GAAe,IACpBtX,EAASsX,EAATtX,KAER,OADAA,EAAK+W,cAAc7U,GAAQhE,EACpB,CAAE8B,UACR,EAAKuX,cAjES,EAoEnBA,YAAc,WAAO,IACXvX,EAAS,EAAK0P,MAAd1P,KACR,EAAKqR,MAAMqG,WAAW1X,IAtEL,EAyEnB2X,kBAAoB,SAAC3N,GACnB,EAAKwF,SAAS,CAAE4H,YAAapN,EAAEgJ,OAAO9U,OAAS,EAAK0Z,mBA1EnC,EA6EnBA,iBAAmB,WACjB,IAAMC,EAAQ,EAAKnI,MAAM0H,YACzB,IAAKS,EAAO,OAAO,EAAKrI,SAAS,CAAE2H,eAAe,IAClD,EAAKW,kBACL,IAAIX,EAAgB,EAAK3L,MAAMuM,OAAX,UAAqBF,EAArB,YAA8BA,EAA9B,MACpB,EAAKrI,SAAS,CAAE2H,mBAlFC,EAqFnBW,gBAAkB,WAAO,IACfE,EAAwB,EAAKtI,MAA7BsI,oBACR,EAAKxM,MAAQyM,MAAK,WAAa,IAAD,OAC5BhJ,KAAKiJ,MAAM,QAEXF,EAAoBnY,SAAQ,SAACqC,EAAMyI,GACjCzI,EAAKpC,GAAKsB,SAASuJ,GACnB,EAAKwN,IAAIjW,UA5FI,EAiGnBkW,eAAiB,WAAO,IAAD,EAMjB,EAAK1I,MAJPsI,EAFmB,EAEnBA,oBACAhY,EAHmB,EAGnBA,KACAoX,EAJmB,EAInBA,YACAD,EALmB,EAKnBA,cAEElX,EACoB,qBAAfD,EAAKC,MACRD,EAAKM,WAAW6B,KAChBnC,EAAKC,OAAS,GACpB,OACE,yBAAKrE,UAAU,4BACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,QACX,wCAEF,kBAACyc,GAAA,EAAD,CACEC,YAAY,EACZpa,MAAO+B,EACPqR,SAAU,SAACtH,GAAD,OAAO,EAAKqN,YAAYrN,EAAEgJ,OAAO9U,QAC3CtC,UAAU,oBAGd,uBAAGA,UAAU,aACX,0CAEF,yBAAKA,UAAU,OACb,kBAACyc,GAAA,EAAD,CACEC,YAAY,EACZ9D,YAAY,uBACZtW,MAAOkZ,EACP9F,SAAU,EAAKqG,qBAGnB,yBAAK/b,UAAU,iCACZwb,GAAeD,EACdA,EAAc1L,KAAI,SAACrH,GACjB,IAAMmU,EAAWP,EAAoB5T,EAAOqQ,KACpCtS,EAAeoW,EAAfpW,KAAM5B,EAASgY,EAAThY,KACRrC,EAAQ8B,EAAKM,WAAW6B,GAE9B,MAAoB,oBAATjE,EAEP,yBAAKsO,IAAKrK,EAAMvG,UAAU,sBACxB,uBAAGA,UAAU,uBAAuBuG,GACpC,kBAACkW,GAAA,EAAD,CACEC,YAAY,EACZ9D,YAAajU,EACbrC,MAAO8B,EAAK+W,cAAc5U,IAAS,GACnCmP,SAAU,SAACtH,GAAD,OACR,EAAKyN,eAAetV,EAAM6H,EAAEgJ,OAAO9U,QAErCtC,UAAU,0BAKhB,yBAAK4Q,IAAKrK,EAAMvG,UAAU,sBACxB,uBAAGA,UAAU,uBAAuBuG,GACpC,kBAACkW,GAAA,EAAD,CACEC,YAAY,EACZpa,MAAOA,GAAS,GAChBoT,SAAU,SAACtH,GAAD,OACR,EAAKwN,oBAAoBrV,EAAM6H,EAAEgJ,OAAO9U,QAE1CtC,UAAU,6BAMlB,6BACG+D,OAAOC,KAAKI,EAAKM,YAAYmL,KAAI,SAACvJ,GACjC,IAAMhE,EAAQ8B,EAAKM,WAAW4B,GAC9B,MAAa,SAATA,EAAwB,GAE1B,yBAAKsK,IAAKtK,EAAMtG,UAAU,sBACxB,uBAAGA,UAAU,uBAAuBsG,GACpC,kBAACmW,GAAA,EAAD,CACEC,YAAY,EACZpa,MAAOA,GAAS,GAChBoT,SAAU,SAACtH,GAAD,OACR,EAAKwN,oBAAoBtV,EAAM8H,EAAEgJ,OAAO9U,QAE1CtC,UAAU,6BAKjBoc,EAAoBvM,KAAI,SAAC8M,GAAD,MACkB,oBAAlCvY,EAAKM,WAAWiY,EAASpW,MAC9B,yBAAKqK,IAAK+L,EAASpW,KAAMvG,UAAU,sBACjC,uBAAGA,UAAU,uBAAuB2c,EAASpW,MAC7C,kBAACkW,GAAA,EAAD,CACEC,YAAY,EACZ9D,YAAa+D,EAAShY,KACtBrC,MAAO8B,EAAK+W,cAAcwB,EAASpW,OAAS,GAC5CmP,SAAU,SAACtH,GAAD,OACR,EAAKyN,eAAec,EAASpW,KAAM6H,EAAEgJ,OAAO9U,QAE9CtC,UAAU,0BAId,QAMV,yBAAKA,UAAU,OACb,kBAACiX,GAAA,EAAD,CACEK,QAAQ,SACRtX,UAAU,QACVE,QAAS,EAAKuV,MAAMmH,iBAHtB,iBAjNW,EA6NnBC,eAAiB,SAAC1X,GAAU,IAClB5B,EAAU,EAAKkS,MAAM6F,MAArB/X,MACF0B,EAAW1B,EAAM4B,EAAKE,KAAKC,QAC3BwX,EAASvZ,EAAM4B,EAAK9D,GAAGiE,QAEzByX,EAAUhZ,OAAOC,KAAKT,GAAOsM,KAAI,SAAC3L,GACpC,MAAO,CAAEG,MAAOd,EAAMW,GAAIG,OAASd,EAAMW,GAAIQ,WAAW6B,KAAMrC,SAGhE,OACE,yBAAKlE,UAAU,4BACb,wBAAIA,UAAU,gCACZ,+CAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,QACX,oCAEF,kBAACyc,GAAA,EAAD,CACEzc,UAAU,OACV+Y,GAAG,SACHrD,SAAU,SAACtH,GAAD,OACR,EAAKqH,MAAMuH,WAAW7X,EAAKjB,GAAIkK,EAAEgJ,OAAO9U,MAAOwa,EAAO5Y,KAExD5B,MAAO2C,EAASf,IAEf6Y,EAAQlN,KAAI,SAACoN,GAAD,OACX,4BAAQrM,IAAKqM,EAAO/Y,GAAI5B,MAAO2a,EAAO/Y,IACnC+Y,EAAO5Y,WAId,uBAAGrE,UAAU,QACX,kCAEF,kBAACyc,GAAA,EAAD,CACEzc,UAAU,OACV+Y,GAAG,SACHrD,SAAU,SAACtH,GAAD,OACR,EAAKqH,MAAMuH,WAAW7X,EAAKjB,GAAIe,EAASf,GAAIkK,EAAEgJ,OAAO9U,QAEvDA,MAAOwa,EAAO5Y,IAEb6Y,EAAQlN,KAAI,SAACoN,GAAD,OACX,4BAAQrM,IAAKqM,EAAO/Y,GAAI5B,MAAO2a,EAAO/Y,IACnC+Y,EAAO5Y,aAMlB,yBAAKrE,UAAU,OACb,kBAACiX,GAAA,EAAD,CACEK,QAAQ,SACRtX,UAAU,QACVE,QAAS,EAAKuV,MAAMmH,iBAHtB,wBAlRW,EA8RnBM,cAAgB,WACd,OACE,yBAAKld,UAAU,4BACb,wBAAIA,UAAU,gCACZ,wCAEF,yBAAKA,UAAU,4BACb,kBAACmd,GAAD,CACE7Y,MAAO,CACL8Y,OAAQ,CACNlZ,GAAI,SACJS,KAAM,SAER4G,QAAS,CACPrH,GAAI,UACJS,KAAM,WAGVD,WAAY,KAEb2Y,GAAYxN,KAAI,SAAC1L,EAAK4K,GAAN,OACf,kBAACoO,GAAD,CACEvM,IAAK7B,EACLzK,MAAO,CACL8Y,OAAQ,CACNlZ,GAAI,SACJS,KAAM,SAER4G,QAAS,CACPrH,GAAI,UACJS,KAAM,WAGVD,WAAYP,UA/TL,EAuUnB4P,OAAS,WAAO,IAAD,EACsB,EAAK0B,MAAM6F,MAAtC7X,EADK,EACLA,SAAUF,EADL,EACKA,MAAOC,EADZ,EACYA,MACnB8Z,EAAcvZ,OAAOC,KAAKP,GAAUuB,OAAS,EACnD,OACE,kBAACuY,GAAA,EAAD,CAAMvd,UAAU,0BACbsd,EACqB,SAAlB7Z,EAASkB,KACP,EAAKkY,eAAerZ,EAAMC,EAASS,IAAKX,GACxC,EAAKiZ,eAAejZ,EAAME,EAASS,KACrC,EAAKgZ,kBA9Ub,IAAI9Y,EAAO,GACX,GAAIqR,EAAM6F,MAAM7X,SAASS,GAAI,CAC3B,IAAMiJ,EAAesI,EAAM6F,MAAM/X,MAAMkS,EAAM6F,MAAM7X,SAASS,IAC5DE,EAAO,EAAK8W,oBAAoB/N,GALjB,OAQjB,EAAK2G,MAAQ,CACXsI,oBAAqB3I,EAAMR,yBAC3B7O,OACAmX,cAAe,GACfC,YAAa,IAZE,E,UADUjH,IAAMC,WCLtB,cACb,OACE,yBAAKxU,UAAU,aACb,uBAAGA,UAAU,qBAAqBwd,0BAAwB,W,oBCFjD,YAAC/H,GACd,OACE,yBAAKzV,UAAU,qBACb,kBAACyd,GAAA,EAAD,CACE1E,GAAIgB,KACJ9O,MAAM,eACN/G,GAAG,sBAEH,kBAACtD,GAAA,EAAS8c,KAAV,CAAexd,QAAS,kBAAMuV,EAAMvL,YAAY,aAAhD,iBAGA,kBAACtJ,GAAA,EAAS8c,KAAV,CAAexd,QAAS,kBAAMuV,EAAMvL,YAAY,eAAhD,oBAGA,kBAACtJ,GAAA,EAAS8c,KAAV,CAAexd,QAAS,kBAAMuV,EAAMvL,YAAY,YAAhD,0BCkMOyT,G,kDAlMb,WAAYlI,GAAQ,IAAD,uBACjB,cAAMA,IAmBRmI,kBAAoB,WAClBxb,SACGyb,cAAc,oBACdC,iBAAiB,eAAe,SAAC1P,GAAD,OAAOA,EAAE2P,qBAvB3B,EA0BnBvK,qBAAuB,WACrBC,EAAMC,eAAe,mBAAoB,EAAKC,UA3B7B,EA8BnBwG,YAAc,WAAwB,IAAvB6D,EAAsB,uDAAV,MACzB5b,SAASyb,cAAc,oBAAoBI,UAAU1B,IAAI,YACzD,EAAK2B,qBACL9M,YAAW,kBAAM,EAAK8M,oBAAmB,KAAQ,KACjD,IAAIC,EAAe,CACjBC,wBAAwB,EACxBC,SAAS,EACTze,EAAG,EACHC,EAAG,EACHye,QAAS,EACTC,QAAS,EACT5a,MAAO,GAET6a,KAAYpc,SAASyb,cAAc,oBAAqBM,GAAcM,MACpE,SAACrb,GACC,IAAImO,EAAQnO,EAAOsb,UAAP,gBAA0BV,IAClC7Y,EAAO/C,SAASuc,eAAe,iBACnCxZ,EAAKyZ,aAAa,WAAlB,2BAAkDZ,IAClD7Y,EAAKyZ,aAAa,OAAQrN,GAC1BpM,EAAK0Z,YAjDQ,EAsDnBX,mBAAqB,WAAyB,IAAxBY,IAAuB,yDAC3C,EAAKlL,SAAS,CAAEkL,iBAvDC,EA0DnBnL,QAAU,WACR,IAAM2H,EAAQ7H,EAAMT,eACpB,EAAK+L,YAAYzD,IA5DA,EA+DnBQ,WAAa,SAAC1X,EAAM4a,GAAc,IAC1B1D,EAAU,EAAKxH,MAAfwH,MACF2D,EAAWC,qBAAU5D,GACzB2D,EAAS1b,MAAMa,EAAKF,IAAIG,MAAQD,EAAKC,MAErC,IAAIoR,EAAK,2BACJrR,EAAKM,YACLN,EAAK+W,eAYV,OATApX,OAAOC,KAAKyR,GAAOxR,SAAQ,SAACC,GACR,KAAduR,EAAMvR,IAAmC,qBAAduR,EAAMvR,WAC5BuR,EAAMvR,MAIjB+a,EAAS1b,MAAMa,EAAKF,IAAIQ,WAAa+Q,EAErC,EAAKsJ,YAAL,2BAAsBzD,GAAU2D,IACzBA,EAAS1b,MAAMa,EAAKF,KAlFV,EAqFnB8Y,WAAa,SAAC9X,EAAQia,EAAQC,GAC5B,GAAID,IAAWC,EAAf,CADqC,IAE/B9D,EAAU,EAAKxH,MAAfwH,MACF2D,EAAWC,qBAAU5D,GAEzB2D,EAASzb,MAAM0B,GAAQG,KAAKC,OAAS6Z,EACrCF,EAASzb,MAAM0B,GAAQ7D,GAAGiE,OAAS8Z,EAEnC,EAAKL,YAAL,2BAAsBzD,GAAU2D,MA7Ff,EAgGnBI,cAAgB,WACd,EAAKC,qBAAqBC,cAAc,KAjGvB,EAoGnB3C,gBAAkB,WAChB,EAAK0C,qBAAqBE,YAAY,KArGrB,EAwGnBT,YAAc,SAACzD,GACb,EAAK1H,SAAS,CAAE0H,WAzGC,EA4GnBmE,WAAa,SAAC3c,GACZnB,EAAWkS,SAAS,CAClBpK,WAAYE,IAAU9K,YACtB6K,QAAS5G,EAAKwC,UA/GC,EAmHnBoa,gBAAkB,WAChBzd,ExBVG,SAAsBqZ,GAC3B,IAAIqE,EAAS,CACXzR,KAAMoN,EAAMpN,MAAQ,GACpB/K,KAAM,IA0CR,OAxCAwc,EAAOzR,KAAKC,MAAQ,CAAE/K,OAAQ,IAE9BW,OAAOC,KAAKsX,EAAM/X,OAAOU,SAAQ,SAACC,GAChC,IAAIE,EAAOkX,EAAM/X,MAAMW,GACvBE,EAAKC,MAAQD,EAAKC,OAASD,EAAKM,WAAW6B,KACvCnC,EAAKM,WAAW6B,aAAanC,EAAKM,WAAW6B,QAGnDxC,OAAOC,KAAKsX,EAAM/X,OAAOU,SAAQ,SAACC,GAChC,IAAME,EAAOkX,EAAM/X,MAAMW,GAEpBE,EAAKC,QAEVsb,EAAOxc,KAAKiB,EAAKC,OAAS,GAE1BN,OAAOC,KAAKI,EAAKM,YAAYT,SAAQ,SAAC2b,GACpC,IAAIjb,EAAO3C,EAAc4d,GAEvBD,EAAOxc,KAAKiB,EAAKC,OAAOub,GADb,SAATjb,EAEoC,SAApC0M,OAAOjN,EAAKM,WAAWkb,IACP,QAATjb,EACyBa,SAASpB,EAAKM,WAAWkb,IACtBxb,EAAKM,WAAWkb,MAEzDD,EAAOzR,KAAKC,MAAM/K,OAAOgB,EAAKC,OAAS,CACrCzE,EAAGwE,EAAKK,SAAS7E,EACjBC,EAAGuE,EAAKK,SAAS5E,OAGrBkE,OAAOC,KAAKsX,EAAM9X,OAAOS,SAAQ,SAACC,GAChC,IAAMiB,EAAOmW,EAAM9X,MAAMU,GACnBe,EAAWqW,EAAM/X,MAAM4B,EAAKE,KAAKC,QAAQjB,MACzCyY,EAASxB,EAAM/X,MAAM4B,EAAK9D,GAAGiE,QAAQjB,MACtCY,GAAa6X,IACd6C,EAAOxc,KAAK2Z,GAAQvY,OACjBM,MAAMC,QAAQ6a,EAAOxc,KAAK2Z,GAAQvY,SACrCob,EAAOxc,KAAK2Z,GAAQvY,MAAQ,CAACob,EAAOxc,KAAK2Z,GAAQvY,QACnDob,EAAOxc,KAAK2Z,GAAQvY,MAAMyK,KAAK/J,IAC1B0a,EAAOxc,KAAK2Z,GAAQvY,MAAQU,MAE/B,UAAN,OAAiBrD,EAAKmZ,UAAU4E,IwBnCdE,CAAa,EAAK/L,MAAMwH,QACxCrY,MAAM,sCArHW,EAwHnB6c,aAAe,YAA4D,IAAzDC,EAAwD,EAAxDA,WAAYC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAsB,EAAZ5E,MAC5D,MAAmB,YAAf2E,GAAyC,WAAbC,GAC5BH,IAAeC,GA1HF,EA8HnBG,gBAAkB,WAChBxe,EAAWkS,SAAS,CAClBpK,WAAYE,IAAU5K,WACtB2K,QAAS,CAAEoB,MAAO,aAjIH,EAqInBZ,YAAc,SAACkW,GACbze,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUlK,aACtBiK,QAAS0W,KAxIM,EA4InBrM,OAAS,WAAO,IAAD,EACkB,EAAKD,MAA5BwH,EADK,EACLA,MAAOwD,EADF,EACEA,YACf,OACE,kBAAC,IAAD,CAAW9K,OAAK,EAAChU,UAAU,+BACzB,yBAAKA,UAAU,QACb,uBAAGyU,KAAK,KAAKvQ,GAAG,gBAAgBwQ,MAAO,CAAE2L,QAAS,SAAlD,YAGA,kBAAC,IAAD,CAAKC,WAAS,EAACtgB,UAAU,oBACvB,kBAACugB,GAAD,CACEtV,MAAM,cACN2O,SAAS,UACT5Z,UAAU,uBAGd,yBAAKA,UAAU,iDACb,kBAAC,IAAD,CAAMA,UAAU,4CACd,kBAACwgB,GAAD,CAAkBtW,YAAa,EAAKA,cACpC,kBAACuW,GAAD,CACEvG,UAAW,EAAKwF,gBAChBzF,YAAa,EAAKkG,gBAClBhG,YAAa,EAAKA,cAEpB,yBAAKna,UAAU,mBACb,yBACEA,UAAU,kBACV0U,MAAO,CAAE2L,QAASvB,EAAc,GAAK,SAErC,yBAAK9e,UAAU,wBACf,yBAAKA,UAAU,4BAEjB,kBAAC,aAAD,CACEsb,MAAOA,EACPoF,WAAY,CAAEC,UAAWC,GAAYC,KAAMC,IAC3CC,UAAW,EAAKzB,qBAChB0B,OAAQ,CACNlB,aAAc,EAAKA,kBAK3B,kBAACmB,GAAD,CACE3F,MAAOA,EACP+D,cAAe,EAAKA,cACpBzC,gBAAiB,EAAKA,gBACtBd,WAAY,EAAKA,WACjBkB,WAAY,EAAKA,iBAxL3B,IAAM1B,EAAQ7H,EAAMT,eAFH,OAGjB,EAAKc,MAAQ,CAAEwH,QAAOwD,aAAa,GAEnC,EAAKQ,qBAAuBvb,OAAOC,KAAKkd,IAASC,QAAO,SAACrR,EAAKc,EAAK7B,GASjE,OARAe,EAAIc,GAAO,WAAc,IACjB0K,EAAU,EAAKxH,MAAfwH,MACF8F,EAASF,GAAQtQ,GACjByQ,EAAsBD,EAAM,WAAN,aACtBnC,EAAWoC,EAAoB/F,GAEnC,OADA,EAAKyD,YAAL,2BAAsBzD,GAAU2D,IACzBA,GAEFnP,IACN,IAEH2D,EAAMa,GAAG,mBAAoB,EAAKX,SAjBjB,E,UADEY,IAAMC,W,UCbd,eAA8B,IAA3B1R,EAA0B,EAA1BA,KAAMwe,EAAoB,EAApBA,cACd/a,EAA2DzD,EAA3DyD,KAAMgb,EAAqDze,EAArDye,IAAKrS,EAAgDpM,EAAhDoM,UAAWD,EAAqCnM,EAArCmM,QAASL,EAA4B9L,EAA5B8L,mBAAoBG,EAAQjM,EAARiM,IACvDyS,EAAUnQ,OAAO9K,GACrBib,EAAUA,EAAQxc,OAAS,GAAKwc,EAAQ3O,UAAU,EAAG,IAAM2O,EAC3D,IAAIC,EAAepQ,OAAOnC,GAAW,GACrC,OACE,yBACElP,UAAS,kBAAaqR,OACpBnC,GACAwS,cAFO,6BAIT,kBAACxK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEnB,GAAG,IACHE,GAAG,IACHlW,UAAU,8CAEV,yBAAKA,UAAU,kBAAkB+O,GACjC,yBAAK/O,UAAU,WAAW4O,IAE5B,kBAACuI,GAAA,EAAD,CACEnB,GAAG,IACHE,GAAG,IACHlW,UAAU,mEACVE,QAAS,kBAAMohB,EAAcE,KAE5BA,EANH,IAMavS,EANb,IAMuBwS,EANvB,MAQA,kBAACtK,GAAA,EAAD,CAAKL,GAAG,KAAKZ,GAAG,IAAIF,GAAG,IAAIhW,UAAU,QAClCuhB,M,wECsZII,G,kDAhZb,aAAe,IAAD,8BACZ,gBAfFC,OAAS,IAAIC,qBAAkB,CAAEC,cAAe,GAAIC,YAAY,IAclD,EAbdC,cAAgB,IAAIH,qBAAkB,CACpCC,cAAe,GACfC,YAAY,IAWA,EARdE,iBAAmB,EAQL,EAPdC,kBAAoB,EAON,EANdC,gBAAiB,EAMH,EALdC,YAAc,EAKA,EAJdC,aAAe,EAID,EAHdC,WAAa,EAGC,EAFdC,mBAAoB,EAEN,EAoBd/O,qBAAuB,WACrBC,EAAMC,eAAe,cAAe,EAAKC,SACzCF,EAAMC,eAAe,WAAY,EAAKR,gBAtB1B,EAyBdsP,aAAe,SAACC,GACd,IAAIjX,EAAO,EAAKsI,MAAM4O,QAClBxZ,EAAU,GACC,SAAXuZ,EAAmBvZ,EAAU,MACb,QAAXuZ,IACPvZ,EACE,+GAEJ,IAAK,IAAInE,EAAI,EAAGA,EAAIyG,EAAKxG,SAAUD,EAAG,CACpC,IAAI0C,EAAM+D,EAAKzG,GAEbmE,GADa,SAAXuZ,EAEAza,KAAK+S,UAAUvP,EAAKzG,IAApB,UAA6BA,EAAIyG,EAAKxG,OAAS,EAAI,IAAM,GAAzD,MACgB,QAAXyd,EACA,UAAOhb,EAAIoH,QAAX,aAAuBpH,EAAImH,mBAA3B,aAAkDnH,EAAIlB,KAAtD,YAA8DkB,EAAIwH,QAAlE,YAA6ExH,EAAIyH,UAAjF,aAA+FzH,EAAI8Z,IAAnG,aAA2G9Z,EAAIkb,SAA/G,YAA2Hlb,EAAImb,OAA/H,YAAyInb,EAAInJ,OAA7I,YAAuJmJ,EAAIob,SAA3J,YAAuKpb,EAAIqb,SAA3K,MAEA,UAAOrb,EAAImH,mBAAX,YAAiCnH,EAAIlB,KAArC,YAA6CkB,EAAIwH,QAAjD,aAA6DxH,EAAIyH,UAAjE,cAAgFzH,EAAI8Z,IAApF,MAEI,SAAXkB,IAAmBvZ,GAAW,KAElC,IAAIyZ,EAAQ,oBAAgB,IAAI3V,KAApB,YAA8ByV,GACtCM,EAAO,IAAIC,KAAK,CAAC9Z,GAAU,CAAEvE,KAAM,6BACvCse,kBAAOF,EAAMJ,IA/CD,EAkDd/E,kBAAoB,WAClBxM,YAAW,WACL,EAAK8R,QACP,EAAKC,aACL,EAAKC,kBAEN,IAxDS,EA2DdzP,QAAU,WACR,IAAM+O,EAAUjP,EAAMpB,UAChBgR,EAAU5P,EAAMnB,gBAChBgR,EAAS7P,EAAMlB,eACrB,EAAKqB,SAAS,CAAEyP,UAASC,SAAQZ,WAAW,EAAKa,YAC7C,EAAKhB,mBAAqB,EAAKW,OAAO,EAAKM,kBAhEnC,EAmEdtQ,cAAgB,WACd,IAAMtD,EAAQ6D,EAAMP,gBAGd1H,EAAO,EAAKsI,MAAM4O,QACxB,EAAK9O,SAAS,CAAE6P,gBAHO,EAGSC,eAFV,EAEyBlY,SAC/C,EAAKmY,YAAY/T,IAzEL,EA4Ed2T,WAAa,WAAO,IAAD,EACgC,EAAKzP,MAAhD4O,EADW,EACXA,QAASe,EADE,EACFA,eAAgBC,EADd,EACcA,cAI/B,GAHuB,UAAnBD,IAA4BA,GAAiB,GAC3B,UAAlBC,IAA2BA,GAAgB,IAE1CD,IAAmBC,EACtB,OAAO,EAAK9P,SAAS,CAAEpI,KAAMkX,IAC/B,IAAIlX,EAAOkX,EAAQkB,QAAO,SAACnc,GACzB,OAAIgc,GAAkBC,EACbjc,EAAIyH,YAAcwU,GAAiBjc,EAAIlB,OAASkd,EAChDA,EAAuBhc,EAAIlB,OAASkd,IACpCC,GAAsBjc,EAAIyH,YAAcwU,KAInD,EAAK9P,SAAS,CAAEpI,QAAQ,EAAK2X,aA3FjB,EA8FdU,kBAAoB,SAACJ,GACnB,EAAK7P,SAAS,CAAE6P,kBAAkB,EAAKF,aA/F3B,EAkGdO,iBAAmB,SAACJ,GAClB,EAAK9P,SAAS,CAAE8P,iBAAiB,EAAKH,aAnG1B,EAsGdpH,OAAS,WACP,IAAMF,EAAQ,EAAKnI,MAAM0H,YACzB,IAAKS,EAAO,OAAO,EAAKrI,SAAS,CAAEmQ,SAAS,GAAS,EAAKZ,YAC1D,EAAKa,YACL,IAAID,EAAU,EAAKnU,MAAMuM,OAAX,UAAqBF,EAArB,MACd,EAAKrI,SAAS,CAAEmQ,WAAW,EAAKE,uBA3GpB,EA8GdC,eAAiB,SAACtT,GACe,KAA3BpL,SAASoL,EAAIuT,WACf,EAAKhI,UAhHK,EAoHd6H,UAAY,WAAO,IACTxY,EAAS,EAAKsI,MAAdtI,KACR,EAAKoE,MAAQyM,MAAK,WAAa,IAAD,OAC5BhJ,KAAKiJ,MAAM,YACXjJ,KAAKiJ,MAAM,YACXjJ,KAAKiJ,MAAM,OACXjJ,KAAKiJ,MAAM,QACXjJ,KAAKiJ,MAAM,UACXjJ,KAAKiJ,MAAM,YAEX9Q,EAAKvH,SAAQ,SAACwD,EAAKsH,GACjBtH,EAAIvD,GAAKsB,SAASuJ,GAClB,EAAKwN,IAAI9U,UAhID,EAqIdkc,YAAc,SAAC/T,GACb,EAAKsT,MAAMkB,YAAYxU,IAtIX,EAyId4T,eAAiB,WACf,EAAKN,MAAMkB,YAAY,EAAKtQ,MAAMtI,KAAKxG,QACvC,EAAKud,mBAAoB,GA3Ib,EA8Id8B,sBAAwB,WACtB,EAAKC,aAAaF,YAAY,EAAKtQ,MAAMiQ,QAAQ/e,QACjD,EAAKud,mBAAoB,GAhJb,EAmJda,aAAe,WACb,EAAKI,iBACLpS,WAAW,EAAKoS,eAAgB,IArJpB,EAwJdzH,kBAAoB,SAAC3N,GACnB,EAAKwF,SAAS,CAAE4H,YAAapN,EAAEgJ,OAAO9U,OAAS,EAAK6Z,SAzJxC,EA4JdoI,mBAAqB,WACnB,EAAK3Q,SAAS,CACZmQ,SAAS,EACTvI,YAAa,MA/JH,EAmKd8F,cAAgB,SAACkD,GACf7iB,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUjK,iBACtBgK,QAAS8a,KAtKC,EA0KdC,oBAAsB,WAAO,IACnBV,EAAY,EAAKjQ,MAAjBiQ,QACR,OACE,kBAAC,KAAD,MACG,YAAwB,IAArBW,EAAoB,EAApBA,OAAQ3M,EAAY,EAAZA,MASV,OARI,EAAKkK,mBAAqBlK,IAC5B,EAAKkK,iBAAmBlK,EACxB3G,WAAW,EAAK6S,qBAAsB,IAEpC,EAAK/B,oBAAsBwC,IAC7B,EAAKxC,kBAAoBwC,EACzBtT,WAAW,EAAK6S,qBAAsB,IAGtC,kBAAC,KAAD,CACElM,MAAOA,EACP2M,OAAQA,EACR7L,IAAK,SAACA,GAAD,OAAU,EAAKyL,aAAezL,GACnC8L,yBAA0B,EAAK3C,cAC/B4C,UAAW,EAAK5C,cAAc4C,UAC9BC,SAAUd,EAAQ/e,OAClB8f,YAAa,EAAKC,4BA/LhB,EAuMdC,aAAe,YAAiD,IAA9CpV,EAA6C,EAA7CA,MAAoBgB,GAAyB,EAAtCqU,YAAsC,EAAzBrU,KAAK3K,EAAoB,EAApBA,OAAQyO,EAAY,EAAZA,MAC3CjN,EAAM,EAAKqM,MAAMtI,KAAKoE,GAC5B,OACE,kBAAC,KAAD,CACEsV,MAAO,EAAKtD,OACZuD,YAAa,EACbvU,IAAKA,EACL3K,OAAQA,EACRmf,SAAUxV,GAEV,yBACE8E,MAAK,2BACAA,GADA,IAEH2Q,UAAW,gBAGb,kBAACC,GAAD,CACEhE,cAAe,EAAKA,cACpB1R,MAAOA,EACP9M,KAAM2E,OA1NF,EAiOdsd,sBAAwB,YAAiD,IAA9CnV,EAA6C,EAA7CA,MAAoBgB,GAAyB,EAAtCqU,YAAsC,EAAzBrU,KAAK3K,EAAoB,EAApBA,OAAQyO,EAAY,EAAZA,MACpDlM,EAAS,EAAKsL,MAAMiQ,QAAQnU,GAC5BnI,EAAM,EAAKqM,MAAMtI,KAAKhD,EAAOqQ,KACnC,OACE,kBAAC,KAAD,CACEqM,MAAO,EAAKlD,cACZmD,YAAa,EACbvU,IAAKA,EACL3K,OAAQA,EACRmf,SAAUxV,GAEV,yBACE8E,MAAK,2BACAA,GADA,IAEH2Q,UAAW,gBAGb,kBAACC,GAAD,CAAShE,cAAe,EAAKA,cAAexe,KAAM2E,OAlP5C,EAwPdsM,OAAS,WAAO,IAAD,EAQT,EAAKD,MANPiQ,EAFW,EAEXA,QACAvI,EAHW,EAGXA,YACAhQ,EAJW,EAIXA,KACA+Z,EALW,EAKXA,WACAlC,EANW,EAMXA,QACAC,EAPW,EAOXA,OAEF,OACE,kBAAC/F,GAAA,EAAD,CAAMvd,UAAU,QACd,kBAACud,GAAA,EAAKiI,OAAN,CAAaxlB,UAAU,OACrB,kBAACkX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKjB,GAAG,IAAI4D,GAAG,KACb,kBAAC2C,GAAA,EAAD,CACE1D,GAAG,SACHrD,SAAU,SAACtH,GAAD,OAAO,EAAKyV,kBAAkBzV,EAAEgJ,OAAO9U,QACjDtC,UAAU,8CAEV,4BAAQsC,OAAO,GAAf,YACCyB,OAAOC,KAAKqf,GAASxT,KAAI,SAAC4V,GAAD,OACxB,4BAAQ7U,IAAK6U,EAAQnjB,MAAOmjB,GACzBA,OAIP,kBAAChJ,GAAA,EAAD,CACE1D,GAAG,SACHrD,SAAU,SAACtH,GAAD,OAAO,EAAK0V,iBAAiB1V,EAAEgJ,OAAO9U,QAChDtC,UAAU,8CAEV,4BAAQsC,OAAO,GAAf,cACCyB,OAAOC,KAAKsf,GAAQzT,KAAI,SAACU,GAAD,OACvB,4BAAQK,IAAKL,EAAOjO,MAAOiO,GACxBA,OAIP,kBAACkN,GAAA,EAAD,CACE1E,GAAIgB,KACJ9O,MAAM,gBACN/G,GAAG,sBAEH,kBAACtD,GAAA,EAAS8c,KAAV,CAAexd,QAAS,kBAAM,EAAKsiB,aAAa,SAAhD,mBAGA,kBAAC5hB,GAAA,EAAS8c,KAAV,CAAexd,QAAS,kBAAM,EAAKsiB,aAAa,UAAhD,oBAGA,kBAAC5hB,GAAA,EAAS8c,KAAV,CAAexd,QAAS,kBAAM,EAAKsiB,aAAa,SAAhD,qBAKJ,kBAACrL,GAAA,EAAD,CAAKjB,GAAG,IAAI4D,GAAG,KACb,kBAAC2C,GAAA,EAAD,CACE7D,YAAY,iBACZ8M,WAAY,EAAKxB,eACjBxO,SAAU,EAAKqG,kBACfzZ,MAAOkZ,OAKf,kBAAC+B,GAAA,EAAKoI,KAAN,CACE3lB,UAAU,sCACVkE,GAAG,wBAEFsX,GAAeuI,EACd,GAEA,yBACE7jB,QAAS,EAAKkjB,aACdpjB,UAAS,yBAAoBulB,GAAc,WAE3C,uBAAGvlB,UAAU,kBAAb,kBAJF,mBAODwb,GAAeuI,EACd,EAAKU,sBAEL,kBAAC,KAAD,MACG,YAAwB,IAArBC,EAAoB,EAApBA,OAAQ3M,EAAY,EAAZA,MAWV,OAVI,EAAKkK,mBAAqBlK,IAC5B,EAAKkK,iBAAmBlK,EACxB3G,WAAW,EAAK+R,WAAY,GAC5B/R,WAAW,EAAKgS,aAAc,IAE5B,EAAKlB,oBAAsBwC,IAC7B,EAAKxC,kBAAoBwC,EACzBtT,WAAW,EAAK+R,WAAY,GAC5B/R,WAAW,EAAKgS,aAAc,IAG9B,kBAAC,KAAD,CACErL,MAAOA,EACP2M,OAAQA,EACR7L,IAAK,SAACA,GAAD,OAAU,EAAKqK,MAAQrK,GAC5B8L,yBAA0B,EAAK/C,OAC/BgD,UAAW,EAAKhD,OAAOgD,UACvBC,SAAUrZ,EAAKxG,OACf8f,YAAa,EAAKE,aAClBY,SAAU,EAAKC,UACfC,kBAAkB,iBA/VtB,EA0WdC,gBAAkB,SAACjjB,EAAMkjB,GAAQ,IACvBC,EAAenjB,EAAfmjB,WACR,EAAK7D,YAAc6D,GA5WP,EA+WdJ,UAAY,SAAC/iB,GAAU,IACbojB,EAA0CpjB,EAA1CojB,UAAWC,EAA+BrjB,EAA/BqjB,aAAcC,EAAiBtjB,EAAjBsjB,aACjC,EAAK9D,WAAa4D,EAClB,IAAIG,EAAaF,GAAgBD,EAAYE,GAExB,EAAK7D,kBAAtB8D,EAAa,GAKbA,EAAa,KAAO,EAAKvS,MAAMyR,WACjC,EAAK3R,SAAS,CAAE2R,YAAY,IACrBc,GAAc,IAAM,EAAKvS,MAAMyR,YACtC,EAAK3R,SAAS,CAAE2R,YAAY,KA5XlB,EA+XdpC,WAAa,WACX,EAAKhB,gBAAiB,EACtB,EAAKP,OAAO0E,WACR,EAAKpD,OACP,EAAKA,MAAMqD,uBAnYD,EAuYdtC,qBAAuB,WACrB,EAAK9B,gBAAiB,EACtB,EAAKH,cAAcsE,WACf,EAAKhC,cACP,EAAKA,aAAaiC,uBAxYpB,EAAKzS,MAAQ,CACX4O,QAASjP,EAAMpB,UACf7G,KAAMiI,EAAMpB,UACZgR,QAAS5P,EAAMnB,gBACfgR,OAAQ7P,EAAMlB,eACdiJ,YAAa,GACbgL,UAAW,GACXzC,QAAS,GACTwB,YAAY,EACZ9B,gBAAgB,EAChBC,eAAe,GAGjBjQ,EAAMa,GAAG,cAAe,EAAKX,SAC7BF,EAAMa,GAAG,WAAY,EAAKpB,eAjBd,E,UAfcqB,IAAMC,W,oBCpB9BiS,GAAU,CACdC,KAAM,CACJjP,OAAQ,UACRkP,WAAY,0BAEdC,QAAS,CACPnP,OAAQ,UACRkP,WAAY,2BAEdE,QAAS,CACPpP,OAAQ,UACRkP,WAAY,4BAEdG,MAAO,CACLrP,OAAQ,UACRkP,WAAY,4BAEdI,SAAU,CACRtP,OAAQ,UACRkP,WAAY,0BAEdK,MAAO,CACLvP,OAAQ,UACRkP,WAAY,6BA0IDM,G,kDArIb,WAAYxR,GAAQ,IAAD,8BACjB,cAAMA,IAIRmI,kBAAoB,WAClB,EAAKsJ,eANY,EASnBA,YAAc,WAAO,IACXpkB,EAAS,EAAK2S,MAAd3S,KACFqkB,EAAe,CACnBC,OAAQ,CAAC,SACTlnB,QAAS,EAAKA,QACdmnB,qBAAqB,EACrBC,YAAY,EACZC,OAAQ,CACN9iB,SAAU,SACV+iB,OAAQ,CACN3P,QAAS,GACT4P,SAAU,KAGdC,SAAU,CACRC,SAAS,EACTC,QAAQ,GAEVC,SAAU,CACRC,MAAO,CACLC,OAAQ,EACRC,UAAW,KAGfC,OAAQ,CACNC,MAAO,CACL,CACEC,WAAW,EACX/iB,MAAO,MACPgjB,MAAO,CACL/H,SAAS,KAIfgI,MAAO,CACL,CACEF,UAAW,CACTG,WAAY,CAAC,IAAK,GAClBC,cAAe,UACfC,YAAY,EACZpjB,MAAO,WAETgjB,MAAO,CACLvQ,QAAS,EACT4Q,aAAc,OAOlBC,EAAW,aACfxoB,QAAS,EAAKA,QACdyE,KAAM,OACN6iB,OAAQ,EAAKmB,UAAU,IACvB7lB,KAAM,CACJ8lB,SAAU7kB,OAAOC,KAAKlB,GAAM+M,KAAI,SAACU,GAC/B,IAAMsY,EAAY/lB,EAAKyN,GACvB,MAAO,CACLlM,MAAOkM,EACPlE,KAAM,QACNyc,YAAa,IACbC,YAAatC,GAAQlW,GAAOkH,OAC5BD,gBAAiBiP,GAAQlW,GAAOoW,WAChC7jB,KAAM+lB,OAIZG,QAAS7B,GACN,EAAK1R,MAAMiT,aAGhB,EAAKpN,MAAQ,IAAI2N,KAAa,EAAKC,UAAUtd,QAAS8c,IAjFrC,EAoFnBxoB,QAAU,SAACkO,GACT,IAAM+a,EAAe,EAAK7N,MAAM8N,mBAAmBhb,GACnD,EAAKqH,MAAMvV,QAAQipB,IAtFF,EAyFnBR,UAAY,SAACU,GAEX,IADA,IAAM7B,EAAS,GACNziB,EAAI,EAAGA,EAAIskB,IAAUtkB,EAC5ByiB,EAAOxY,KAAKjK,GAEd,OAAOyiB,GA9FU,EAiGnBzI,YAAc,WAAO,IACXjc,EAAS,EAAK2S,MAAd3S,KACF+lB,EAAY,CAChBrB,OAAQ,EAAKmB,UAAU,IACvBC,SAAU7kB,OAAOC,KAAKlB,GAAM+M,KAAI,SAACU,GAC/B,IAAMsY,EAAY/lB,EAAKyN,GACvB,MAAO,CACLlM,MAAOkM,EACPlE,KAAM,QACNyc,YAAa,IACbC,YAAatC,GAAQlW,GAAOkH,OAC5BD,gBAAiBiP,GAAQlW,GAAOoW,WAChC7jB,KAAM+lB,OAIZ,EAAKvN,MAAMxY,KAAO+lB,EAClB,EAAKvN,MAAM0N,QAAQM,WAAY,EAC/B,EAAKhO,MAAMiO,UAnHM,EAsHnBxV,OAAS,WACH,EAAKmV,UAAUtd,SAAW,EAAK0P,OAAO,EAAKyD,cADlC,MAEa,EAAKtJ,MAAvBsC,EAFK,EAELA,MAAO2M,EAFF,EAEEA,OACf,OACE,yBAAK1kB,UAAU,mBACb,4BACE0kB,OAAQA,GAAU,GAClB3M,MAAOA,GAAS,IAChBc,IAAK,EAAKqQ,cA5HhB,EAAKA,UAAY3U,IAAMiV,YAFN,E,UADGjV,IAAMC,WC2BfiV,G,kDAnDb,aAAe,IAAD,8BACZ,gBAOFjW,qBAAuB,WACrBC,EAAMC,eAAe,uBAAwB,EAAKC,UATtC,EAYd+V,QAAU,SAACP,GACT,IAAIvZ,EAAQuZ,EAAa,IAAMA,EAAa,GAAGQ,OAE/ChoB,EAAWkS,SAAS,CAClBpK,WAAYE,IAAU1K,kBACtByK,QAASkG,KAjBC,EAqBd+D,QAAU,WACR,IAAMkV,EAAYpV,EAAMjB,mBACxB,EAAKoB,SAAS,CAAEiV,eAvBJ,EA0Bd9U,OAAS,WAAO,IACN8U,EAAc,EAAK/U,MAAnB+U,UACR,OACE,kBAACtL,GAAA,EAAD,CAAMvd,UAAU,SACd,kBAACud,GAAA,EAAKoI,KAAN,CAAW3lB,UAAU,0BACnB,kBAAC,GAAD,CACE8C,KAAM+lB,EACNnE,OAAQ,GACR3M,MAAO,GACP7X,QAAS,EAAKwpB,WAGlB,kBAACnM,GAAA,EAAKoI,KAAN,CAAW3lB,UAAU,kBACnB,kBAAC,GAAD,CACE8C,KAAM+lB,EACNnE,OAAQ,GACR3M,MAAO,GACP7X,QAAS,EAAKwpB,aAzCtB,EAAK5V,MAAQ,CACX+U,UAAWpV,EAAMjB,oBAEnBiB,EAAMa,GAAG,uBAAwB,EAAKX,SAL1B,E,UADWY,IAAMC,WCF3BiS,GAAU,CACd,CACEhP,OAAQ,OACRkP,WAAY,2BAEd,CACElP,OAAQ,OACRkP,WAAY,2BAEd,CACElP,OAAQ,OACRkP,WAAY,2BAEd,CACElP,OAAQ,OACRkP,WAAY,2BAEd,CACElP,OAAQ,OACRkP,WAAY,2BAEd,CACElP,OAAQ,OACRkP,WAAY,2BAEd,CACElP,OAAQ,OACRkP,WAAY,2BAEd,CACElP,OAAQ,OACRkP,WAAY,2BAEd,CACElP,OAAQ,OACRkP,WAAY,4BAoGDiD,G,kDA/Fb,WAAYnU,GAAQ,IAAD,8BACjB,cAAMA,IAIRmI,kBAAoB,WAClB,EAAKsJ,eANY,EASnB2C,SAAW,SAACja,GAEV,IADA,IAAIxK,GAAQ,GACJA,GACFqhB,GAAQ7W,GAAQxK,EAAQqhB,GAAQ7W,GAC/BA,GAAS6W,GAAQzhB,OAExB,OAAOI,GAfU,EAkBnB8hB,YAAc,WAAO,IACXpkB,EAAS,EAAK2S,MAAd3S,KACFgnB,EAAQ/lB,OAAOC,KAAKlB,GAiBpB4lB,EAAW,aACf/jB,KAAM,MACN6iB,OAAQsC,EACRhnB,KAAM,CACJ8lB,SAAU,CACR,CACEE,YAAa,EACbhmB,KAAMgnB,EAAMja,KAAI,SAACtJ,GAAD,OAAUzD,EAAKyD,MAC/BwiB,YAAae,EAAMja,KAAI,SAACtJ,EAAMwI,GAAP,OAAe,EAAK8a,SAAS9a,GAAK0I,UACzDD,gBAAiBsS,EAAMja,KACrB,SAACtJ,EAAMwI,GAAP,OAAe,EAAK8a,SAAS9a,GAAK4X,iBAK1CqC,QA/BmB,CACnBzB,OAAQ,CACNlH,SAAS,EACT5b,SAAU,SACV+iB,OAAQ,CACN3P,QAAS,GACT4P,SAAU,KAGdC,SAAU,CACRE,QAAQ,EACRmC,KAAM,QACNtlB,SAAU,aAoBT,EAAKgR,MAAMiT,aAGhB,EAAKpN,MAAQ,IAAI2N,KAAa,EAAKC,UAAUtd,QAAS8c,IAxDrC,EA2DnB3J,YAAc,WAAO,IACXjc,EAAS,EAAK2S,MAAd3S,KACFgnB,EAAQ/lB,OAAOC,KAAKlB,GACpB+lB,EAAY,CAChBrB,OAAQsC,EACRlB,SAAU,CACR,CACEE,YAAa,EACbhmB,KAAMgnB,EAAMja,KAAI,SAACtJ,GAAD,OAAUzD,EAAKyD,MAC/BwiB,YAAae,EAAMja,KAAI,SAACtJ,EAAMwI,GAAP,OAAe,EAAK8a,SAAS9a,GAAK0I,UACzDD,gBAAiBsS,EAAMja,KACrB,SAACtJ,EAAMwI,GAAP,OAAe,EAAK8a,SAAS9a,GAAK4X,iBAK1C,EAAKrL,MAAMxY,KAAO+lB,EAClB,EAAKvN,MAAM0N,QAAQM,WAAY,EAC/B,EAAKhO,MAAMiO,UA7EM,EAgFnBxV,OAAS,WACH,EAAKmV,UAAUtd,SAAW,EAAK0P,OAAO,EAAKyD,cADlC,MAEa,EAAKtJ,MAAvBsC,EAFK,EAELA,MAAO2M,EAFF,EAEEA,OACf,OACE,yBAAK1kB,UAAU,mBACb,4BACE0kB,OAAQA,GAAU,GAClB3M,MAAOA,GAAS,GAChBc,IAAK,EAAKqQ,cAtFhB,EAAKA,UAAY3U,IAAMiV,YAFN,E,UADEjV,IAAMC,WCPdwV,G,kDA7Bb,aAAe,IAAD,8BACZ,gBAOFxW,qBAAuB,WACrBC,EAAMC,eAAe,uBAAwB,EAAKC,UATtC,EAYdA,QAAU,WACR,IAAMkV,EAAYpV,EAAMhB,sBACxB,EAAKmB,SAAS,CAAEiV,eAdJ,EAiBd9U,OAAS,WAAO,IACN8U,EAAc,EAAK/U,MAAnB+U,UACR,OACE,kBAACtL,GAAA,EAAD,CAAMvd,UAAU,SACd,kBAACud,GAAA,EAAKoI,KAAN,KACE,kBAAC,GAAD,CAAW7iB,KAAM+lB,OApBvB,EAAK/U,MAAQ,CACX+U,UAAWpV,EAAMhB,uBAEnBgB,EAAMa,GAAG,uBAAwB,EAAKX,SAL1B,E,UADaY,IAAMC,WC6BpByV,G,4MA1BblW,OAAS,WACP,OACE,kBAACmW,GAAA,EAAD,CAAWlW,OAAK,EAAChU,UAAU,+BACzB,yBAAKA,UAAU,QACb,kBAACkX,GAAA,EAAD,CAAKoJ,WAAS,EAACtgB,UAAU,oBACvB,kBAACugB,GAAD,CACEtV,MAAM,aACN2O,SAAS,UACT5Z,UAAU,uBAGd,kBAACkX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKjB,GAAG,KAAKlW,UAAU,QACrB,kBAAC,GAAD,OAEF,kBAACmX,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,QACpB,kBAAC,GAAD,QAGJ,kBAACmqB,GAAD,S,YApBa5V,IAAMC,WCad4V,G,uKAhBH,IACA9d,EAAY+G,KAAKoC,MAAjBnJ,QACR,OACE,kBAAC,IAAD,CAAMtM,UAAU,aACd,wBAAIA,UAAU,sDACZ,2BAAIsM,EAAQC,YAEd,wBAAIvM,UAAU,gBAAgBsM,EAAQE,SACtC,wBAAIxM,UAAU,iDAAd,qB,GATkBuU,IAAMC,WC4EjB6V,G,kDAzEb,WAAY5U,GAAQ,IAAD,8BACjB,cAAMA,IA4BRsJ,YAAc,WAAO,IACXtS,EAAa,EAAKgJ,MAAlBhJ,SACF6d,EAAwD,KAA7C7d,EAASG,SAAWH,EAASE,SAAW,GACrD4d,EAAU,CACZ3B,SAAU,CACR,CACE4B,iBAAkB,OAClB1nB,KAAM,CAACwnB,EAAS,IAAMA,GACtB9S,gBAAiB,CAAC,UAAW,aAGjCgQ,OAAQ,CAAC,UAAW,YAEtB,EAAKlM,MAAMxY,KAAOynB,EAClB,EAAKjP,MAAMiO,UAxCX,EAAKL,UAAY3U,IAAMiV,YAHN,E,gEAOjBnW,KAAKiI,MAAQ,IAAImP,KAAMpX,KAAK6V,UAAUtd,QAAS,CAC7CjH,KAAM,WACN7B,KAAM,CACJ8lB,SAAU,CACR,CACE4B,iBAAkB,OAClB1nB,KAAM,CAAC,EAAG,KACV0U,gBAAiB,CAAC,UAAW,aAGjCgQ,OAAQ,CAAC,UAAW,YAEtBwB,QAAS,CACPzB,QAAQ,EACRD,YAAY,EACZoD,iBAAkB,GAClBpB,WAAW,EACX5B,UAAU,O,+BAsBN,IACAjb,EAAa4G,KAAKoC,MAAlBhJ,SAER,OADI4G,KAAKiI,OAAOjI,KAAK0L,cAEnB,kBAAC,IAAD,CAAM/e,UAAU,aACd,wBAAIA,UAAU,iDACZ,wCAEF,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,iDAAd,WAGA,wBAAIA,UAAU,QAAQyM,EAASC,iBAGjC,4BACEmM,IAAKxF,KAAK6V,UACVxU,MAAO,CAAEqD,MAAO,QAAS2M,OAAQ,SACjC1kB,UAAU,kB,GAlEKuU,IAAMC,WCA3BmW,G,kDACJ,WAAYlV,GAAQ,IAAD,8BACjB,cAAMA,IAqFRsJ,YAAc,WAAO,IACX3S,EAAY,EAAKqJ,MAAM5I,MAAvBT,QACJwe,EAAY,2BACX,EAAKtP,MAAMxY,MACX,CACD8lB,SAAU,CACR,CACEvkB,MAAO,QACPgI,KAAM,QACNyc,YAAa,IACbtR,gBAAiB,0BACjBuR,YAAa,UACbjmB,KAAMsJ,MAKVye,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQ1e,IACvB4e,EAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQ1e,IAEvBia,EAAawE,EAAWG,EAE5B,EAAK1P,MAAM0N,QAAQf,OAAOI,MAAM,GAAGD,MAAM8C,aACvCL,EAAwB,GAAbxE,EACb,EAAK/K,MAAM0N,QAAQf,OAAOI,MAAM,GAAGD,MAAMK,aACvCuC,EAAwB,GAAb3E,EACb,EAAK/K,MAAMxY,KAAO8nB,EAClB,EAAKtP,MAAMiO,UA/GX,EAAKL,UAAY3U,IAAMiV,YAFN,E,gEAKE,IACXpd,EAAYiH,KAAKoC,MAAM5I,MAAvBT,QACJye,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQ1e,IACvB4e,EAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQ1e,IAEvBia,EAAawE,EAAWG,EACtB7D,EAAY,2BACb,CACDE,qBAAqB,EACrBC,YAAY,EACZgC,WAAW,EACX/B,OAAQ,CACNlH,SAAS,GAEXqH,SAAU,CACRC,SAAS,EACTC,QAAQ,GAEVC,SAAU,CACRC,MAAO,CACLC,OAAQ,GAEVoD,KAAM,CACJC,QAAS,MAGbnD,OAAQ,CACNC,MAAO,CACL,CACEC,WAAW,EACXC,MAAO,CACL/H,SAAS,KAIfgI,MAAO,CACL,CACEF,WAAW,EACXkD,YAAY,EACZjD,MAAO,CACL/H,SAAS,EAGT6K,aAAcL,EAAwB,GAAbxE,EACzBoC,aAAcuC,EAAwB,GAAb3E,QAMhChT,KAAKoC,MAAM0R,cAGVuB,EAAW,2BACZ,CACD/jB,KAAM,OACN7B,KAAK,2BACA,CACD0kB,OAAQ,IAAI3iB,MAAMuH,EAAQpH,QAAQqH,KAAK,QAEtC,CACDuc,SAAU,CACR,CACEvkB,MAAO,QACPgI,KAAM,QACNyc,YAAa,IACbtR,gBAAiB,0BACjBuR,YAAa,UACbjmB,KAAMsJ,MAKd4c,QAAS7B,IAER9T,KAAKoC,MAAMiT,aAGhBrV,KAAKiI,MAAQ,IAAImP,KAAMpX,KAAK6V,UAAUtd,QAAS8c,K,+BAiCvC,IACA7b,EAAUwG,KAAKoC,MAAf5I,MAER,OADIwG,KAAKiI,OAAOjI,KAAK0L,cAEnB,kBAAC,IAAD,CAAM/e,UAAU,0BACd,yBAAKA,UAAU,6BACb,wBAAIA,UAAU,gEACZ,qCAEF,wBAAIA,UAAU,gBAAgB6M,EAAMjB,SACpC,wBAAI5L,UAAU,uDACX6M,EAAMC,KADT,YAIF,4BAAQ4X,OAAO,MAAM7L,IAAKxF,KAAK6V,UAAWlpB,UAAS,uB,GAnInCuU,IAAMC,WAyI9BmW,GAAUnU,aAAe,CACvBnS,MAAO,gBACP/B,MAAO,KACPgpB,WAAY,QACZC,UAAU,EACVC,UAAU,EACVC,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClD5C,UAAW,CACT,CACExkB,MAAO,QACPgI,KAAM,QACNyc,YAAa,IACbtR,gBAAiB,0BACjBuR,YAAa,UACbjmB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAKhB6nB,UC2BAe,G,kDA9Kb,WAAYjW,GAAQ,IAAD,8BACjB,cAAMA,IAORkW,mBAAqB,SAACC,GAChB,EAAKnW,MAAMoW,aAAeD,EAAUC,YAAY,EAAK9M,eATxC,EAYnBnB,kBAAoB,WAAO,IACjBkO,EAAQ,EAAKhY,MAAbgY,IACFjD,EAAY,EAAKpT,MAAMqW,GAEvB3E,EAAY,eACb,CACDmC,WAAW,EACX5B,SAAU,CACR3G,UAAW,CACT9V,MAAO,SAAU8gB,EAAajpB,GAC5B,MAAM,QAAN,OAAeipB,EAAY,GAAGC,SAEhC3nB,MAAO,SAAC0nB,EAAajpB,GAAU,IACvBgpB,EAAQ,EAAKhY,MAAbgY,IACFznB,EAAK,UAAMvB,EAAK8lB,SAASmD,EAAYE,cAAc5nB,MAA9C,aACC,UAARynB,EACI5lB,EAAY6lB,EAAYzpB,OACxBypB,EAAYzpB,OAElB,OAAO+B,GAET6nB,WAAY,SAACH,EAAajpB,GAAU,IAC5BgpB,EAAQ,EAAKhY,MAAbgY,IAIN,MADE,iBAFgB,EAAKrW,MAAMqW,GAEEC,EAAYnc,OAAOX,WAKxDgZ,OAAQ,CACNC,MAAO,CACL,CACEiE,SAAS,EACThE,WAAW,IAGfE,MAAO,CACL,CACE8D,SAAS,EACT/D,MAAO,CACLgE,aAAc,EAAKC,uBAQ/B,EAAK/Q,MAAQ,IAAImP,KAAM,EAAKvB,UAAUtd,QAAS,CAC7CjH,KAAM,MACNqkB,QAAS7B,EACTrkB,KAAM,CACJ0kB,OAAQqB,EAAUhZ,KAAI,SAACyc,GAAD,OAAOA,EAAEloB,QAC/BwkB,SAAU,CACR,CACEvkB,MAAO,WACPgI,KAAM,QACNvJ,KAAM+lB,EAAUhZ,KAAI,SAACyc,GAAD,OAAOA,EAAErc,QAC7BuH,gBAAiB,UACjBuR,YAAa,UACbwD,qBAAsB,UACtBC,0BAA2B,UAC3B1D,YAAa,KAEf,CACEzkB,MAAO,eACPgI,KAAM,QACNvJ,KAAM+lB,EAAUhZ,KAAI,SAACyc,GAAD,OAAOA,EAAEpc,YAC7BsH,gBAAiB,UACjBuR,YAAa,UACbwD,qBAAsB,UACtBC,0BAA2B,UAC3B1D,YAAa,UArFJ,EA4FnB/J,YAAc,WAAO,IACX+M,EAAQ,EAAKhY,MAAbgY,IACFjD,EAAY,EAAKpT,MAAMqW,GAC7B,EAAKxQ,MAAMxY,KAAO,CAChB0kB,OAAQqB,EAAUhZ,KAAI,SAACyc,GAAD,OAAOA,EAAEloB,QAC/BwkB,SAAU,CACR,CACEvkB,MAAM,GAAD,OAAKynB,EAAL,SACLzf,KAAM,QACNvJ,KAAM+lB,EAAUhZ,KAAI,SAACyc,GAAD,OAAOA,EAAErc,QAC7BuH,gBAAiB,UACjBuR,YAAa,UACbwD,qBAAsB,UACtBC,0BAA2B,UAC3B1D,YAAa,KAEf,CACEzkB,MAAM,GAAD,OAAKynB,EAAL,aACLzf,KAAM,QACNvJ,KAAM+lB,EAAUhZ,KAAI,SAACyc,GAAD,OAAOA,EAAEpc,YAC7BsH,gBAAiB,UACjBuR,YAAa,UACbwD,qBAAsB,UACtBC,0BAA2B,UAC3B1D,YAAa,OAInB,EAAKxN,MAAMiO,UAxHM,EA2HnB8C,iBAAmB,SAAChoB,GAElB,MAAY,UADI,EAAKyP,MAAbgY,IACoB5lB,EAAY7B,GACjCA,EAAQ,IAAR,WAAkBA,EAAQ,KAAMgC,QAAQ,GAAxC,KAAgDhC,GA9HtC,EAiInBooB,OAAS,SAACX,GACR,EAAKlY,SAAS,CAAEkY,OAAO,EAAK/M,cAhI5B,EAAKmK,UAAY3U,IAAMiV,YACvB,EAAK1V,MAAQ,CACXgY,IAAK,YAJU,E,qDAqIT,IAAD,OACCA,EAAQzY,KAAKS,MAAbgY,IACR,OACE,kBAAC,IAAD,CAAMtqB,OAAK,EAACxB,UAAU,cACpB,kBAAC,IAAD,CAAYA,UAAU,iBACpB,wBAAIA,UAAU,OAAd,iBAGF,kBAAC,IAAD,CAAUA,UAAU,QAClB,kBAAC,IAAD,CAAKA,UAAU,+BACb,kBAAC,IAAD,CAAK8W,GAAG,IAAI9W,UAAU,2BACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEM,MAAM,QACNyU,OAAgB,aAAR+W,EACR5rB,QAAS,kBAAM,EAAKusB,OAAO,cAH7B,YAOA,kBAAC,IAAD,CACEnsB,MAAM,QACNyU,OAAgB,UAAR+W,EACR5rB,QAAS,kBAAM,EAAKusB,OAAO,WAH7B,YAUN,4BACE/H,OAAO,MACP7L,IAAKxF,KAAK6V,UACVxU,MAAO,CAAEE,SAAU,mBACnB5U,UAAU,sC,GAvKKuU,IAAMC,WCR3BkY,G,kDACJ,WAAYjX,GAAQ,IAAD,8BACjB,cAAMA,IAqFRsJ,YAAc,WAAO,IACX3S,EAAY,EAAKqJ,MAAMtJ,IAAvBC,QACJwe,EAAY,2BACX,EAAKtP,MAAMxY,MACX,CACD8lB,SAAU,CACR,CACEvkB,MAAO,QACPgI,KAAM,QACNyc,YAAa,IACbtR,gBAAiB,2BACjBuR,YAAa,UACbjmB,KAAMsJ,MAKVye,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQ1e,IACvB4e,EAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQ1e,IAEvBia,EAAawE,EAAWG,EAE5B,EAAK1P,MAAM0N,QAAQf,OAAOI,MAAM,GAAGD,MAAM8C,aACvCL,EAAwB,GAAbxE,EACb,EAAK/K,MAAM0N,QAAQf,OAAOI,MAAM,GAAGD,MAAMK,aACvCuC,EAAwB,GAAb3E,EACb,EAAK/K,MAAMxY,KAAO8nB,EAClB,EAAKtP,MAAMiO,UA/GX,EAAKL,UAAY3U,IAAMiV,YAFN,E,gEAKE,IACXpd,EAAYiH,KAAKoC,MAAMtJ,IAAvBC,QACJye,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQ1e,IACvB4e,EAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQ1e,IAEvBia,EAAawE,EAAWG,EACtB7D,EAAY,2BACb,CACDE,qBAAqB,EACrBC,YAAY,EACZgC,WAAW,EACX/B,OAAQ,CACNlH,SAAS,GAEXqH,SAAU,CACRC,SAAS,EACTC,QAAQ,GAEVC,SAAU,CACRC,MAAO,CACLC,OAAQ,GAEVoD,KAAM,CACJC,QAAS,MAGbnD,OAAQ,CACNC,MAAO,CACL,CACEC,WAAW,EACXC,MAAO,CACL/H,SAAS,KAIfgI,MAAO,CACL,CACEF,WAAW,EACXkD,YAAY,EACZjD,MAAO,CACL/H,SAAS,EAGT6K,aAAcL,EAAwB,GAAbxE,EACzBoC,aAAcuC,EAAwB,GAAb3E,QAMhChT,KAAKoC,MAAM0R,cAGVuB,EAAW,2BACZ,CACD/jB,KAAM,OACN7B,KAAK,2BACA,CACD0kB,OAAQ,IAAI3iB,MAAMuH,EAAQpH,QAAQqH,KAAK,QAEtC,CACDuc,SAAU,CACR,CACEvkB,MAAO,QACPgI,KAAM,QACNyc,YAAa,IACbtR,gBAAiB,2BACjBuR,YAAa,UACbjmB,KAAMsJ,MAKd4c,QAAS7B,IAER9T,KAAKoC,MAAMiT,aAGhBrV,KAAKiI,MAAQ,IAAImP,KAAMpX,KAAK6V,UAAUtd,QAAS8c,K,+BAiCvC,IACAvc,EAAQkH,KAAKoC,MAAbtJ,IAER,OADIkH,KAAKiI,OAAOjI,KAAK0L,cAEnB,kBAAC,IAAD,CAAM/e,UAAU,0BACd,yBAAKA,UAAU,6BACb,wBAAIA,UAAU,gEACZ,mCAEF,wBAAIA,UAAU,gBAAgBmM,EAAIP,SAClC,wBAAI5L,UAAU,uDAAd,mBAIF,4BAAQ0kB,OAAO,MAAM7L,IAAKxF,KAAK6V,UAAWlpB,UAAS,uB,GAnIxBuU,IAAMC,WAyIzCkY,GAAqBlW,aAAe,CAClCnS,MAAO,gBACP/B,MAAO,KACPgpB,WAAY,QACZC,UAAU,EACVC,UAAU,EACVC,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClD5C,UAAW,CACT,CACExkB,MAAO,QACPgI,KAAM,QACNyc,YAAa,IACbtR,gBAAiB,sBACjBuR,YAAa,UACbjmB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAKhB4pB,UClGAC,G,kDApDb,aAAe,IAAD,8BACZ,gBAOFnZ,qBAAuB,WACrBC,EAAMC,eAAe,cAAe,EAAKC,UAT7B,EAWdA,QAAU,WACR,IAAMzH,EAAWuH,EAAMf,cACvB,EAAKkB,SAAS,CAAE1H,cAbJ,EAed6H,OAAS,WAAO,IACN7H,EAAa,EAAK4H,MAAlB5H,SACR,OACE,kBAACge,GAAA,EAAD,CAAWlW,OAAK,EAAChU,UAAU,+BACzB,yBAAKA,UAAU,QACb,kBAACkX,GAAA,EAAD,CAAKoJ,WAAS,EAACtgB,UAAU,oBACvB,kBAACugB,GAAD,CACEtV,MAAM,OACN2O,SAAS,UACT5Z,UAAU,uBAGd,kBAACkX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,QACpB,kBAAC,GAAD,CAAasM,QAASJ,EAASI,WAEjC,kBAAC6K,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,QACpB,kBAAC,GAAD,CAAcyM,SAAUP,EAASO,YAEnC,kBAAC0K,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,QACpB,kBAAC4sB,GAAD,CAAkBzgB,IAAKD,EAASC,OAElC,kBAACgL,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,QACpB,kBAAC,GAAD,CAAW6M,MAAOX,EAASW,UAG/B,kBAAC,GAAD,CACEI,SAAUf,EAASe,SACnBC,MAAOhB,EAASgB,MAChB2e,WAAY3f,EAASa,qBA1C7B,EAAK+G,MAAQ,CACX5H,SAAUuH,EAAMf,eAElBe,EAAMa,GAAG,cAAe,EAAKX,SALjB,E,UADOY,IAAMC,W,UCuKdqY,G,kDAjKb,aAAe,IAAD,8BACZ,gBASFrZ,qBAAuB,WACrBC,EAAMC,eAAe,kBAAmB,EAAKC,UAXjC,EAcdA,QAAU,WACR,IAAMmZ,EAAWrZ,EAAMxB,cACvB,EAAK2B,SAAS,CAAEkZ,WAAUC,QAAS,MAhBvB,EAmBdC,cAAgB,SAACC,EAAS3qB,GACxB,EAAKsR,UAAS,SAAC8H,GAAe,IACtBqR,EAAYrR,EAAZqR,QAEN,OADAA,EAAQE,GAAW3qB,EACZ,CAAEyqB,eAvBC,EA2BdpR,YAAc,WAAO,IAAD,EACY,EAAK7H,MAA3BgZ,EADU,EACVA,SAAUC,EADA,EACAA,QAEZjrB,EAAQ,2BAAQgrB,GAAaC,GAEnCprB,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUzK,cACtBwK,QAAS5H,KAlCC,EAsCdorB,aAAe,WACb,EAAKtZ,SAAS,CAAEuZ,UAAW,EAAKrZ,MAAMqZ,YAvC1B,EA0CdpZ,OAAS,WAAO,IAAD,EAC2B,EAAKD,MAArCgZ,EADK,EACLA,SAAUC,EADL,EACKA,QAASI,EADd,EACcA,SAC3B,OACE,kBAAC,IAAD,CAAM3rB,OAAK,EAACxB,UAAU,QACpB,kBAAC,IAAD,CAAYA,UAAU,iBACpB,wBAAIA,UAAU,OAAd,2BAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKotB,MAAI,GACP,kBAAC,IAAD,CAAKlX,GAAG,IAAIlW,UAAU,cACpB,uCACA,kBAAC,IAAD,CACE4Y,YAAY,UACZtW,MAAO,SAAUyqB,EAAUA,EAAQxlB,KAAOulB,EAASvlB,KACnDmO,SAAU,SAACtH,GAAD,OAAO,EAAK4e,cAAc,OAAQ5e,EAAEgJ,OAAO9U,WAGzD,kBAAC,IAAD,CAAK4T,GAAG,IAAIlW,UAAU,cACpB,uCACA,kBAAC,IAAD,CACE4Y,YAAY,OACZtW,MAAO,SAAUyqB,EAAUA,EAAQvlB,KAAOslB,EAAStlB,KACnDkO,SAAU,SAACtH,GAAD,OAAO,EAAK4e,cAAc,OAAQ5e,EAAEgJ,OAAO9U,YAI3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKwX,GAAG,KACN,4BACEuT,gBAAc,iBACdC,gBAAeH,EACfjtB,QAAS,EAAKgtB,aACdltB,UAAU,mDAJZ,WAMW,IACT,uBAAGA,UAAU,kBACVmtB,EAAW,gBAAkB,qBAIpC,kBAAC,IAAD,CAAKrT,GAAG,IAAI9Z,UAAU,cACpB,kBAAC,IAAD,CAAQE,QAAS,EAAKyb,aAAtB,kBAGJ,kBAAC4R,GAAA,EAAD,CAAUC,GAAIL,GACZ,yBAAKjpB,GAAG,kBACN,4BAAQlE,UAAU,2BAAlB,aACA,kBAAC,IAAD,CAAKotB,MAAI,GACP,kBAAC,IAAD,CAAKlX,GAAG,IAAIlW,UAAU,cACpB,sCACA,kBAAC,IAAD,CACE4Y,YAAY,cACZtW,MAAO,QAASyqB,EAAUA,EAAQtlB,IAAMqlB,EAASrlB,IACjDiO,SAAU,SAACtH,GAAD,OACR,EAAK4e,cAAc,MAAO5e,EAAEgJ,OAAO9U,WAIzC,kBAAC,IAAD,CAAK4T,GAAG,IAAIlW,UAAU,cACpB,0CACA,kBAAC,IAAD,CACE4Y,YAAY,kBACZtW,MACE,YAAayqB,EACTA,EAAQ3kB,QACR0kB,EAAS1kB,QAEfsN,SAAU,SAACtH,GAAD,OACR,EAAK4e,cAAc,UAAW5e,EAAEgJ,OAAO9U,WAI7C,kBAAC,IAAD,CAAK4T,GAAG,IAAIlW,UAAU,cACpB,uCACA,kBAAC,IAAD,CACE4Y,YAAY,aACZtW,MAAO,SAAUyqB,EAAUA,EAAQviB,KAAOsiB,EAAStiB,KACnDkL,SAAU,SAACtH,GAAD,OACR,EAAK4e,cAAc,OAAQ5e,EAAEgJ,OAAO9U,WAI1C,kBAAC,IAAD,CAAK4T,GAAG,IAAIlW,UAAU,cACpB,2CACA,kBAAC,IAAD,CACE4Y,YAAY,mBACZtW,MACE,aAAcyqB,EACVA,EAAQtiB,SACRqiB,EAASriB,SAEfiL,SAAU,SAACtH,GAAD,OACR,EAAK4e,cAAc,WAAY5e,EAAEgJ,OAAO9U,WAI9C,kBAAC,IAAD,CAAK4T,GAAG,IAAIlW,UAAU,cACpB,wCACA,kBAAC,IAAD,CACE4Y,YAAY,kBACZtW,MACE,UAAWyqB,EAAUA,EAAQriB,MAAQoiB,EAASpiB,MAEhDgL,SAAU,SAACtH,GAAD,OACR,EAAK4e,cAAc,QAAS5e,EAAEgJ,OAAO9U,kBAjJzD,EAAKwR,MAAQ,CACXgZ,SAAUrZ,EAAMxB,cAChB8a,QAAS,GACTI,UAAU,GAEZ1Z,EAAMa,GAAG,kBAAmB,EAAKX,SAPrB,E,UADWY,IAAMC,WCOlBiZ,G,4MAhBb1Z,OAAS,WACP,OACE,kBAACmW,GAAA,EAAD,CAAWlW,OAAK,EAAChU,UAAU,+BACzB,kBAACkX,GAAA,EAAD,CAAKoJ,WAAS,EAACtgB,UAAU,oBACvB,kBAACugB,GAAD,CACEtV,MAAM,WACN2O,SAAS,UACT5Z,UAAU,uBAGd,kBAAC0tB,GAAD,Q,YAXmBnZ,IAAMC,WCHlB,eAAkC,IAA/BmZ,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC7BxqB,EAAY+C,WAAW0kB,KAAKgD,MAAe,GAATH,GAAe,GAAK,IAAItnB,QAAQ,GAClE0C,EAAQglB,GAAS1qB,EAAWwqB,GAClC,OACE,0BACE7tB,UAAS,qBAAgB2tB,EAAS,WAAa,GAAtC,YACPC,EAAY,YAAc,GADnB,gBAIT,0BAAM5tB,UAAU,cAAc4tB,EAAY,cAAgB,IAC1D,0BAAM5tB,UAAU,cAAc2tB,EAAStqB,EAAY,IAClD0F,IAKDglB,GAAW,SAAC1E,EAAQwE,GACxB,IAGI9oB,EAHAgE,EAAQ,GACRilB,EAAUxoB,SAAS6jB,GACnB4E,EAAY5E,EAAS2E,EAHQ,aAM/B,IAAIpe,EAAQ7K,EACZgE,EAAMiG,KACJ,uBAAG4B,IAAK7L,EAAG/E,UAAU,iBAAiBE,QAAS,kBAAM2tB,EAAKje,KAA1D,UAHJ,IAAK7K,EAAI,EAAGA,EAAIipB,IAAWjpB,EAAI,IAQ/B,GAAIkpB,GAAa,GAAK,CACpB,IAAIre,EAAQ7K,EACZgE,EAAMiG,KACJ,uBAAG4B,IAAK7L,IAAK/E,UAAU,iBAAiBE,QAAS,kBAAM2tB,EAAKje,KAA5D,cAIG,GAAIqe,GAAa,IAAM,CAC5B,IAAIre,EAAQ7K,EACZgE,EAAMiG,KACJ,uBAAG4B,IAAK7L,IAAK/E,UAAU,iBAAiBE,QAAS,kBAAM2tB,EAAKje,KAA5D,cAKJ,IA5BiC,eA4BxBse,GACP,IAAIte,EAAQ7K,EACZgE,EAAMiG,KACJ,uBAAG4B,IAAK7L,IAAK/E,UAAU,iBAAiBE,QAAS,kBAAM2tB,EAAKje,KAA5D,kBAHKse,EAAInlB,EAAM/D,OAAQkpB,EAAI,IAAKA,EAAI,IAQxC,OAAOnlB,GCjDM,eAAgB,IAYzB4kB,EAKAQ,EAjBY5c,EAAY,EAAZA,MAEdhL,EAQEgL,EARFhL,KACArC,EAOEqN,EAPFrN,GACAkqB,EAME7c,EANF6c,SACAC,EAKE9c,EALF8c,OACAC,EAIE/c,EAJF+c,YACAC,EAGEhd,EAHFgd,WACAC,EAEEjd,EAFFid,aACAC,EACEld,EADFkd,WAaF,OATIld,EAAMgd,YAAchd,EAAMid,eAC5Bb,EAASY,EAAaC,GAKCL,EADpBM,EACIA,EAAa,EAAa,8BAAOA,EAAP,YACpB,8BAAOA,EAAP,WAFY,0BAAMzuB,UAAU,cAAhB,cAKzB,kBAAC,IAAD,CAAMA,UAAU,gBAAgBqB,GAAE,sBAAiB6C,IACjD,kBAACqZ,GAAA,EAAD,CAAMvd,UAAU,wBACd,kBAACud,GAAA,EAAKoI,KAAN,CAAW3lB,UAAU,kBACnB,kBAACkX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAK2C,GAAG,KAAK9Z,UAAU,QACrB,yBAAKA,UAAU,aACZuG,EACA6nB,GACC,0BAAMnjB,MAAM,mBAAmBjL,UAAU,eACvC,uBAAGA,UAAU,qCAAb,mBAMN,yBAAKA,UAAU,gBAAgBquB,IAEjC,kBAAClX,GAAA,EAAD,CAAKL,GAAG,KAAK9W,UAAU,kBACrB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,mBAAmBsuB,OAK1C,kBAAC/Q,GAAA,EAAKmR,OAAN,CAAa1uB,UAAU,kBACpBmuB,EACAR,GAAU,kBAACgB,GAAD,CAAYhB,OAAQA,QCiE1BiB,G,kDA1Gb,aAAe,IAAD,8BACZ,gBAWFpb,qBAAuB,WACrBC,EAAMC,eAAe,aAAc,EAAK3B,eAb5B,EAgBdA,aAAe,WACb,IAAMpH,EAAS8I,EAAM1B,eACrB,EAAK6B,SAAS,CAAEjJ,YAlBJ,EAqBdkkB,OAAS,SAACC,GACR,EAAKlb,SAAS,CAAEkb,YAAY,EAAK3S,SAtBrB,EAyBd4S,YAAc,SAAC3lB,GACb,EAAKwK,SAAS,CAAExK,YAAY,EAAK+S,SA1BrB,EA6Bd6S,aAAe,SAACxT,GACd,EAAK5H,SAAS,CAAE4H,eAAe,EAAKW,SA9BxB,EAiCdA,OAAS,WAAO,IAAD,EAC+B,EAAKrI,MAAzC1K,EADK,EACLA,SAAUoS,EADL,EACKA,YAAasT,EADlB,EACkBA,SAC/BntB,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUpK,WACtBmK,QAAS,CAAEN,WAAUC,EAAGmS,EAAalS,KAAMwlB,MArCjC,EAyCd/a,OAAS,WAAO,IAAD,EACuC,EAAKD,MAAjDnJ,EADK,EACLA,OAAQmkB,EADH,EACGA,SAAU1lB,EADb,EACaA,SAAUoS,EADvB,EACuBA,YACpC,OACE,kBAAC0O,GAAA,EAAD,CAAWlW,OAAK,EAAChU,UAAU,+BACzB,yBAAKA,UAAU,QACb,kBAACkX,GAAA,EAAD,CAAKlX,UAAU,oBACb,kBAACugB,GAAD,CACEtV,MAAM,WACN2O,SAAS,YACT5Z,UAAU,sBAEZ,kBAACmX,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,WACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiB2E,KAAK,WACpB,kBAAC,IAAD,oBAEF,kBAAC,IAAD,CACE+Q,SAAU,SAACtH,GAAD,OAAO,EAAK2gB,YAAY3gB,EAAEgJ,OAAO9U,QAC3CA,MAAO8G,GAEP,4BAAQ9G,MAAM,OAAd,kBACA,4BAAQA,MAAM,gBAAd,UACA,4BAAQA,MAAM,UAAd,qBAKN,kBAAC6U,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,WACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiB2E,KAAK,WACpB,kBAAC,IAAD,iBAEF,kBAAC,IAAD,CACE+Q,SAAU,SAACtH,GAAD,OAAO,EAAKygB,OAAOzgB,EAAEgJ,OAAO9U,QACtCA,MAAOwsB,GAEP,4BAAQxsB,MAAM,aAAd,aACA,4BAAQA,MAAM,gBAAd,iBACA,4BAAQA,MAAM,UAAd,aAKN,kBAAC6U,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,WACpB,kBAAC,IAAD,CACE4Y,YAAY,mBACZ5Y,UAAU,4BACVsC,MAAOkZ,EACP9F,SAAU,SAACtH,GAAD,OAAO,EAAK4gB,aAAa5gB,EAAEgJ,OAAO9U,YAIlD,kBAAC4U,GAAA,EAAD,KACGnT,OAAOC,KAAK2G,GAAQkF,KAAI,SAAC/G,GAAD,OACvB,kBAACqO,GAAA,EAAD,CAAKvG,IAAK9H,EAASoN,GAAG,IAAIlW,UAAU,QAClC,kBAACivB,GAAD,CAAW1d,MAAO5G,EAAO7B,aA9FrC,EAAKgL,MAAQ,CACXnJ,OAAQ8I,EAAM1B,eACd+c,SAAU,YACV1lB,SAAU,MACVoS,YAAa,IAGf/H,EAAMa,GAAG,aAAc,EAAKvC,cAThB,E,UADMwC,IAAMC,WCVb,YAACiB,GAAW,IACjByZ,EAAiBzZ,EAAMlE,MAAvB2d,aACR,OACE,kBAAC,IAAD,CAAMlvB,UAAU,yBACd,kBAAC,IAAD,CAAYA,UAAU,iCACpB,wBAAIA,UAAU,sBAAd,kBAEF,kBAAC,IAAD,CAAUA,UAAU,qBACjBkvB,GACCA,EAAarf,KAAI,SAACsf,EAAOpgB,GACvB,IAAMqgB,EAAmB,IAAIpiB,KAAKmiB,EAAMtgB,SAASC,iBAC3CugB,EAAYjpB,WAAW+oB,EAAMlZ,KAAO,KAAK5P,QAAQ,GACvD,OACE,yBAAKuK,IAAK7B,EAAK/O,UAAU,iCACvB,yBAAKA,UAAU,kCACb,uBAAGA,UAAU,kBAAb,UAEF,yBAAKA,UAAU,gCACb,0BAAMA,UAAU,cAAcovB,GAC9B,+BACID,EAAMG,GADV,IACeH,EAAMI,aADrB,KACqCF,EADrC,eCnBH,eAAgB,IAAb9d,EAAY,EAAZA,MAChB,OACE,kBAAC,IAAD,CAAMvR,UAAU,yBACd,kBAAC,IAAD,CAAYA,UAAU,iCACpB,wBAAIA,UAAU,sBAAd,kBAEF,kBAAC,IAAD,CAAUA,UAAU,aAClB,kBAAC,IAAD,CAAKA,UAAU,sBACb,kBAAC,IAAD,aACA,kBAAC,IAAD,KAAMuR,EAAMhL,OAEd,kBAAC,IAAD,CAAKvG,UAAU,sBACb,kBAAC,IAAD,gBACA,kBAAC,IAAD,KAAMuR,EAAMie,UAEd,kBAAC,IAAD,CAAKxvB,UAAU,sBACb,kBAAC,IAAD,eACA,kBAAC,IAAD,KAAMuR,EAAM8c,SAEd,kBAAC,IAAD,CAAKruB,UAAU,sBACb,kBAAC,IAAD,oBACA,kBAAC,IAAD,KAAMuR,EAAM+c,cAEd,kBAAC,IAAD,CAAKtuB,UAAU,sBACb,kBAAC,IAAD,sBACA,kBAAC,IAAD,KACE,uBACEyU,KAAMlD,EAAMke,cACZrY,OAAO,SACPC,IAAI,uBAEH9F,EAAMke,iBAIb,kBAAC,IAAD,CAAKzvB,UAAU,sBACb,kBAAC,IAAD,eACA,kBAAC,IAAD,KACE,uBAAGyU,KAAMlD,EAAMkU,OAAQrO,OAAO,SAASC,IAAI,uBACxC9F,EAAMkU,UAIb,kBAAC,IAAD,CAAKzlB,UAAU,sBACb,kBAAC,IAAD,gBACA,kBAAC,IAAD,KAAMuR,EAAMme,UAEd,kBAAC,IAAD,CAAK1vB,UAAU,sBACb,kBAAC,IAAD,eACA,kBAAC,IAAD,KAAMuR,EAAMoe,SAEd,kBAAC,IAAD,CAAK3vB,UAAU,QACb,kBAAC,IAAD,YACA,kBAAC,IAAD,KACE,uBAAGyU,KAAMlD,EAAMqe,IAAKxY,OAAO,SAASC,IAAI,uBACrC9F,EAAMqe,UCvDN,eAAgC,IAA7BC,EAA4B,EAA5BA,OAAQJ,EAAoB,EAApBA,cACxB,OACE,kBAAC,IAAD,CAAMzvB,UAAU,yBACd,kBAAC,IAAD,CAAYA,UAAU,iCACpB,wBAAIA,UAAU,sBAAd,aACA,yBAAKA,UAAU,6BACf,uBACEyU,KAAMgb,EACNrY,OAAO,SACPC,IAAI,sBACJrX,UAAU,+BAEV,uBAAGA,UAAU,kBANf,oBASF,kBAAC,IAAD,KACG6vB,EACC,yBACE7vB,UAAU,SACVkV,wBAAyB,CAAEC,OAAQ0a,KAGrC,wBAAI7vB,UAAU,+BAAd,sB,oBCpBK,YAACyV,GAAW,IACjBlE,EAAoBkE,EAApBlE,MAAOue,EAAara,EAAbqa,SACTC,EAAWxe,EAAMye,SAASze,EAAMye,SAAShrB,OAAS,GACpDirB,EAAO,CAAC,oEAAD,OAC2DF,EAD3D,+IAEyHA,EAFzH,mKAGyHA,EAHzH,6FAIgCA,EAJhC,gCAKWA,GALX,mDAMmCA,EANnC,mFAO8BA,EAP9B,yBASX,OACE,kBAAC,IAAD,CAAM/vB,UAAU,QACd,kBAAC,IAAD,CAAYA,UAAU,qCACpB,wBAAIA,UAAU,sBAAd,UAEF,kBAAC,IAAD,CAAUA,UAAU,6BAClB,uBAAGA,UAAU,QAAb,8BACA,kBAAC,KAAD,CACEkwB,SAAS,SACTxb,MAAOyb,KACPjwB,QAAS,kBAAM4vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGjwB,UAAU,aAAb,gDAGA,kBAAC,KAAD,CACEkwB,SAAS,SACTxb,MAAOyb,KACPjwB,QAAS,kBAAM4vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGjwB,UAAU,aAAb,uCACA,kBAAC,KAAD,CACEkwB,SAAS,SACTxb,MAAOyb,KACPjwB,QAAS,kBAAM4vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGjwB,UAAU,aAAb,+BACA,kBAAC,KAAD,CACEkwB,SAAS,OACTxb,MAAOyb,KACPjwB,QAAS,kBAAM4vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGjwB,UAAU,aAAb,8BACA,kBAAC,KAAD,CACEkwB,SAAS,OACTxb,MAAOyb,KACPjwB,QAAS,kBAAM4vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGjwB,UAAU,aAAb,gCACA,kBAAC,KAAD,CACEkwB,SAAS,OACTxb,MAAOyb,KACPjwB,QAAS,kBAAM4vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGjwB,UAAU,aAAb,kDAGA,kBAAC,KAAD,CACEkwB,SAAS,OACTxb,MAAOyb,KACPjwB,QAAS,kBAAM4vB,EAASG,EAAK,MAE5BA,EAAK,OC9ED,eAAiB,IAAdG,EAAa,EAAbA,OAChB,OACE,kBAAC,IAAD,CAAMpwB,UAAU,yBACd,kBAAC,IAAD,CAAYA,UAAU,iCACpB,wBAAIA,UAAU,sBAAsBowB,EAAOhvB,UAC3C,yBAAKpB,UAAU,8BAEjB,kBAAC,IAAD,CAAUA,UAAU,QAAQowB,EAAOlnB,WCN1B,eAA6B,IAA1BilB,EAAyB,EAAzBA,QAASkC,EAAgB,EAAhBA,UACzB,OACE,6BACE,yBAAKrwB,UAAU,sCACb,wBAAIA,UAAU,aAAd,WACA,6BACE,kBAAC,IAAD,CAAQE,QAASmwB,GACf,uBAAGrwB,UAAU,uBAAb,eADF,gBAKHmuB,EAAQnpB,OAAS,EAChBmpB,EAAQte,KAAI,SAACugB,EAAQrhB,GAAT,OAAiB,kBAACuhB,GAAD,CAAY1f,IAAK7B,EAAKqhB,OAAQA,OAE3D,wBAAIpwB,UAAU,+BAAd,gBCgHOuwB,G,kDArHb,aAAe,IAAD,uBACZ,gBAmBF3S,kBAAoB,WAClB,EAAKjK,UACL,EAAK6c,gBAtBO,EAyBdhd,qBAAuB,WACrBC,EAAMC,eAAe,aAAc,EAAK8c,eA1B5B,EA6BdA,aA7Bc,sBA6BC,4BAAAloB,EAAA,sEACYmL,EAAMzB,YAAY,EAAK8B,MAAMhL,SADzC,gDACsD,GADtD,OACP2nB,EADO,KAEb,EAAK7c,SAAS,CAAE6c,YAAW5lB,SAAS,IAFvB,2CA7BD,EAkCdgjB,KAAO,SAAC9kB,GAAW,IACTD,EAAY,EAAKgL,MAAjBhL,QACRnH,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUtK,YACtBqK,QAAS,CAAEZ,UAASC,YAtCV,EA0Cd+mB,SAAW,SAAC5mB,GACVjH,EAAgBiH,GAChBvH,EAAWkS,SAAS,CAClBpK,WAAYE,IAAUnK,YACtBkK,QAAS,CAAC,MAAO,8BAA+B,cA9CtC,EAkDd2mB,UAAY,WACV,IAAMvnB,EAAU,EAAKgL,MAAM2c,UAAUvsB,GAErCvC,EAAWkS,SAAS,CAClBpK,WAAYE,IAAU5K,WACtB2K,QAAS,CAAEoB,MAHC,SAGM8G,OAAQ,CAAE9I,eAvDlB,EA2DdiL,OAAS,WAAO,IAWV4Z,EAXS,EACkB,EAAK7Z,MAA5B2c,EADK,EACLA,UAAW5lB,EADN,EACMA,QAEjBtE,EAOEkqB,EAPFlqB,KACAmqB,EAMED,EANFC,WACAjB,EAKEgB,EALFhB,cACAlB,EAIEkC,EAJFlC,WACAC,EAGEiC,EAHFjC,aACAZ,EAEE6C,EAFF7C,UACAO,EACEsC,EADFtC,QAMF,OAHII,GAAcC,IAChBb,EAASY,EAAaC,GAGtB,kBAACtE,GAAA,EAAD,CAAWlW,OAAK,EAAChU,UAAU,+BACxB6K,EACC,yBAAK7K,UAAU,SACb,yBAAKA,UAAU,YAGjB,yBAAKA,UAAU,QACb,kBAACkX,GAAA,EAAD,CAAKoJ,WAAS,EAACtgB,UAAU,oBACvB,kBAACugB,GAAD,CACEtV,MAAO1E,EACPqT,SAAS,QACT5Z,UAAU,sBAEZ,kBAACmX,GAAA,EAAD,CAAKjB,GAAG,MACR,kBAACiB,GAAA,EAAD,CAAKjB,GAAG,IAAIlW,UAAU,WACpB,4BACE,kBAAC2uB,GAAD,CACEhB,OAAQC,GAAaD,EACrBE,KAAM,EAAKA,KACXD,UAAWA,OAKnB,kBAAC1W,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKjB,GAAG,KACN,kBAACya,GAAD,CAAapf,MAAOkf,EAAWX,SAAU,EAAKA,WAC9C,kBAAC,GAAD,CAASve,MAAOkf,IAChB,kBAACG,GAAD,CAAcrf,MAAOkf,KAEvB,kBAACtZ,GAAA,EAAD,CAAKjB,GAAG,KACN,kBAAC2a,GAAD,CAAQhB,OAAQa,EAAYjB,cAAeA,IAC3C,kBAACqB,GAAD,CAAc3C,QAASA,EAASkC,UAAW,EAAKA,iBAzG5D,IAAIU,EAAalgB,OAAOC,SAASC,KAC3BigB,EAAeD,EAAWle,UAC9Bke,EAAWhhB,QAAQ,KACnBghB,EAAW/rB,QAGP8D,EADS,IAAImoB,gBAAgBD,GACZzoB,IAAI,MARf,OASZ,EAAKuL,MAAQ,CACXhL,UACA+B,SAAS,EACT4lB,UAAW,CACTtC,QAAS,GACT6B,SAAU,KAGdvc,EAAMa,GAAG,aAAc,EAAKkc,cAjBhB,E,UADUjc,IAAMC,WCL1B0c,G,4MACJtT,kBAAoB,WAClB,IAAI7M,EAAOF,OAAOC,SAAS2D,KAC3B,GAAI1D,EAAKhB,QAAQ,QAAU,EAAG,CAC5B,IAAIkgB,EAAOlf,EAAK8B,UAAU9B,EAAKhB,QAAQ,QAAU,EAAGgB,EAAK/L,QACzD6L,OAAOC,SAAP,UAAqB/Q,SAArB,sCAAyDkwB,K,EAG7Dlc,OAAS,WACP,OACE,kBAAC,IAAD,CAAWC,OAAK,EAAChU,UAAU,+BACzB,kBAAC,IAAD,CAAKsgB,WAAS,EAACtgB,UAAU,SACvB,kBAAC,IAAD,CAAKgW,GAAG,IAAIE,GAAG,IAAIlW,UAAU,qBAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBACEA,UAAU,uCACVgB,IAAI,kBACJ0T,MAAO,CAAEE,SAAU,SACnBzT,IAAI,SAEN,wBAAInB,UAAU,qCAAd,UACA,uBACEyU,KAAI,UAAK1U,SAAL,gBACJmE,GAAG,gBACHlE,UAAU,uCAEV,uBAAGA,UAAU,kBALf,8B,YAtBIuU,IAAMC,WCJX,eAA4C,IAAzCvJ,EAAwC,EAAxCA,MAAO/B,EAAiC,EAAjCA,QAASioB,EAAwB,EAAxBA,KAAM7wB,EAAkB,EAAlBA,MAAO6E,EAAW,EAAXA,KAC7C,OACE,uBAAGnF,UAAU,gBAAgByU,KAAMtP,GACjC,kBAACoY,GAAA,EAAD,CAAMvd,UAAU,SACd,kBAACud,GAAA,EAAKoI,KAAN,CAAW3lB,UAAU,QACnB,kBAACkX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAK2C,GAAG,IAAI9Z,UAAU,QACpB,4BAAKiL,GACJ/B,GAEH,kBAACiO,GAAA,EAAD,CAAK2C,GAAG,IAAI9Z,UAAU,QACpB,wBAAIA,UAAU,aACZ,0BAAMA,UAAS,UAAKmxB,EAAL,gBAAiB7wB,YCiDjC8wB,GA3DA,kBACb,kBAAC,IAAD,CAAWpd,OAAK,EAAChU,UAAU,+BACzB,kBAAC,IAAD,CAAKsgB,WAAS,EAACtgB,UAAU,oBACvB,kBAACugB,GAAD,CACEtV,MAAM,YACN2O,SAAS,UACT5Z,UAAU,uBAGd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKkW,GAAG,IAAIlW,UAAU,QACpB,kBAACqxB,GAAD,CACEpmB,MAAM,WACN/B,QAAQ,uDACR/D,KAAK,sBACLgsB,KAAK,aACL7wB,MAAM,aAGV,kBAAC,IAAD,CAAK4V,GAAG,IAAIlW,UAAU,QACpB,kBAACqxB,GAAD,CACEpmB,MAAM,sBACN/B,QAAQ,uCACR/D,KAAK,uBACLgsB,KAAK,cACL7wB,MAAM,aAGV,kBAAC,IAAD,CAAK4V,GAAG,IAAIlW,UAAU,QACpB,kBAACqxB,GAAD,CACEpmB,MAAM,qBACN/B,QAAQ,0DACR/D,KAAK,oDACLgsB,KAAK,sBACL7wB,MAAM,WAGV,kBAAC,IAAD,CAAK4V,GAAG,IAAIlW,UAAU,QACpB,kBAACqxB,GAAD,CACEpmB,MAAM,sBACN/B,QAAQ,sDACR/D,KAAK,6BACLgsB,KAAK,gBACL7wB,MAAM,UAGV,kBAAC,IAAD,CAAK4V,GAAG,IAAIlW,UAAU,QACpB,kBAACqxB,GAAD,CACEpmB,MAAM,iBACN/B,QAAQ,uDACR/D,KAAK,gDACLgsB,KAAK,kBACL7wB,MAAM,iBCxCD,IACb,CACEsS,KAAM,IACN0e,OAAO,EACPC,OAAQC,GACRC,UAAW,kBAAM,kBAAC,IAAD,CAAUpwB,GAAG,YAEhC,CACEuR,KAAM,QACN2e,OAAQG,GACRD,UAAWxH,IAEb,CACErX,KAAM,QACN2e,OAAQG,GACRD,UAAW9T,IAEb,CACE/K,KAAM,QACN2e,OAAQG,GACRD,UAAW9E,IAEb,CACE/Z,KAAM,YACN2e,OAAQG,GACRD,UAAW/D,IAEb,CACE9a,KAAM,QACN2e,OAAQG,GACRD,UAAWE,IAEb,CACE/e,KAAM,QACN2e,OAAQG,GACRD,UAAWE,IAEb,CACE/e,KAAM,OACN2e,OAAQG,GACRD,UAAW7C,IAEb,CACEhc,KAAM,WACN2e,OAAQG,GACRD,UAAWlB,IAEb,CACE3d,KAAM,SACN2e,OAAQG,GACRD,UHtBWP,K,UI1CfU,KAAgBC,WAAW5iB,mHAAY6iB,gBAAkB,kBAEzD,IA0CeC,GA1CK,SAACC,GAAoC,IAAlBhJ,EAAiB,uDAAP,GACzCiJ,EAAY,SAACC,GAKjBN,KAAgBO,IAAhB,aACED,QACGlJ,IAEL4I,KAAgBQ,SAASF,IAGrBG,EAAWpjB,mHAAYqjB,oBAAsB,GAG7CC,EAAG,kLAGL,IAAML,EAAO7e,KAAKoC,MAAM3E,SAASgS,SAAWzP,KAAKoC,MAAM3E,SAASqL,OAChE8V,EAAU,GAAD,OAAII,GAAJ,OAAeH,MAJnB,yCAOYtG,GACjB,IAAM4G,EACJ5G,EAAU9a,SAASgS,SAAW8I,EAAU9a,SAASqL,OAC7CsW,EACJpf,KAAKoC,MAAM3E,SAASgS,SAAWzP,KAAKoC,MAAM3E,SAASqL,OAEjDqW,IAAgBC,GAClBR,EAAU,GAAD,OAAII,GAAJ,OAAeI,MAdrB,+BAmBL,OAAO,kBAACT,EAAqB3e,KAAKoC,WAnB7B,GAAiBjB,aAuB1B,OAAO+d,GClCM,I,qBAAA,kBACb,kBAAC,IAAD,CAAQG,SAAU,KAChB,6BACGC,GAAO9iB,KAAI,SAAC+iB,EAAOhjB,GAClB,OACE,kBAAC,IAAD,CACEgB,IAAKhB,EACLgD,KAAMggB,EAAMhgB,KACZ0e,MAAOsB,EAAMtB,MACbG,UAAWM,IAAY,SAACtc,GACtB,OACE,kBAACmd,EAAMrB,OAAW9b,EAChB,kBAACmd,EAAMnB,UAAchc,gBCVnBod,QACW,cAA7BhiB,OAAOC,SAASgiB,UAEe,UAA7BjiB,OAAOC,SAASgiB,UAEhBjiB,OAAOC,SAASgiB,SAAS9d,MACvB,2DCbN+d,IAAShf,OAAO,kBAAC,GAAD,MAAS3R,SAASuc,eAAe,SD8H3C,kBAAmBqU,WACrBA,UAAUC,cAAcvoB,MACrB+T,MAAK,SAACyU,GACLA,EAAaC,gBAEdC,OAAM,SAACpwB,GACNkF,QAAQlF,MAAMA,EAAM2L,c","file":"static/js/main.93d44432.chunk.js","sourcesContent":["module.exports = {\n  pokedex: `!Flow\n  with:\n    read_only: true\n    rest_api: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        chunk_seg:\n          x: 250\n          y: 268\n        tf_encode:\n          x: 250\n          y: 420\n        chunk_idx:\n          x: 250\n          y: 600\n        ranker:\n          x: 250\n          y: 836\n        doc_idx:\n          x: 249\n          y: 985\n  pods:\n    gateway: {}\n    chunk_seg:\n      uses: pods/craft.yml\n      parallel: $PARALLEL\n      needs: gateway\n    tf_encode:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 600000\n      needs: chunk_seg\n    chunk_idx:\n      uses: pods/chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      timeout_ready: 100000\n      needs: tf_encode\n    ranker:\n      uses: BiMatchRanker\n      needs: chunk_idx\n    doc_idx:\n      uses: pods/doc.yml\n      needs: ranker\n  \n  `,\n  flower: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        loader:\n          x: 250\n          y: 257\n        flipper:\n          x: 252\n          y: 407\n        normalizer:\n          x: 239\n          y: 563\n        encoder:\n          x: 252\n          y: 712\n        chunk_indexer:\n          x: 250\n          y: 872\n        ranker:\n          x: 252\n          y: 1066\n        doc_indexer:\n          x: 253\n          y: 1199\n  pods:\n    gateway: {}\n    loader:\n      uses: yaml/craft-load.yml\n      read_only: true\n      needs: gateway\n    flipper:\n      uses: yaml/craft-flip.yml\n      read_only: true\n      needs: loader\n    normalizer:\n      uses: yaml/craft-normalize.yml\n      read_only: true\n      needs: flipper\n    encoder:\n      uses: $ENCODER\n      timeout_ready: 600000\n      read_only: true\n      needs: normalizer\n    chunk_indexer:\n      uses: yaml/index-chunk.yml\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: yaml/index-doc.yml\n      needs: ranker  \n  `,\n  southpark: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 254\n          y: 147\n        splittor:\n          x: 254\n          y: 270\n        encoder:\n          x: 254\n          y: 448\n        chunk_indexer:\n          x: 251\n          y: 645\n        ranker:\n          x: 255\n          y: 862\n        doc_indexer:\n          x: 256\n          y: 1002\n  pods:\n    gateway: {}\n    splittor:\n      uses: pods/craft-split.yml\n      parallel: $PARALLEL\n      read_only: true\n      needs: gateway\n    encoder:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 60000\n      read_only: true\n      needs: splittor\n    chunk_indexer:\n      uses: pods/index-chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      reducing_uses: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: pods/index-doc.yml\n      needs: ranker\n  `,\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_EXAMPLE: \"LOAD_EXAMPLE\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","module.exports = {\n  timeout: 15000,\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n);\n","import React from \"react\";\n\nexport default ({ toggleSidebar }) => (\n  <nav className=\"nav cursor-pointer\">\n    <span\n      onClick={toggleSidebar}\n      className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n    >\n      <i className=\"material-icons\">&#xE5D2;</i>\n    </span>\n  </nav>\n);\n","import React from \"react\";\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\nexport default ({ connected, reconnect }) => {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n} from \"shards-react\";\n\nexport default ({ user, logOut, userActionsVisible, toggleUserActions }) => {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/podProperties.json\");\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\n\nexport function formatAsYAML(chart) {\n  let output = {\n    with: chart.with || {},\n    pods: {},\n  };\n  output.with.board = { canvas: {} };\n\n  Object.keys(chart.nodes).forEach((id) => {\n    let node = chart.nodes[id];\n    node.label = node.label || node.properties.name;\n    if (node.properties.name) delete node.properties.name;\n  });\n\n  Object.keys(chart.nodes).forEach((id) => {\n    const node = chart.nodes[id];\n\n    if (!node.label) return;\n\n    output.pods[node.label] = {};\n\n    Object.keys(node.properties).forEach((propId) => {\n      let type = propertyTypes[propId];\n      if (type === \"bool\") {\n        output.pods[node.label][propId] =\n          String(node.properties[propId]) === \"true\";\n      } else if (type === \"int\")\n        output.pods[node.label][propId] = parseInt(node.properties[propId]);\n      else output.pods[node.label][propId] = node.properties[propId];\n    });\n    output.with.board.canvas[node.label] = {\n      x: node.position.x,\n      y: node.position.y,\n    };\n  });\n  Object.keys(chart.links).forEach((id) => {\n    const link = chart.links[id];\n    const nodeFrom = chart.nodes[link.from.nodeId].label;\n    const nodeTo = chart.nodes[link.to.nodeId].label;\n    if (!nodeFrom || !nodeTo) return;\n    if (output.pods[nodeTo].needs) {\n      if (!Array.isArray(output.pods[nodeTo].needs))\n        output.pods[nodeTo].needs = [output.pods[nodeTo].needs];\n      output.pods[nodeTo].needs.push(nodeFrom);\n    } else output.pods[nodeTo].needs = nodeFrom;\n  });\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n","import axios from \"axios\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  connect: (settings, connectionUpdate, logUpdate, taskUpdate) => {\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      console.error(\"log error: \", data);\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      console.error(\"task error:\", data);\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (connectionString) => {\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleYAML from \"../data/yaml\";\n\nlet _store;\n\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst NUM_CHART_ELEMENTS = 60;\nconst CHART_UPDATE_INTERVAL = 1000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected: {},\n      hovered: {},\n      scale: 1,\n      nodes: {\n        gateway: {\n          id: \"gateway\",\n          label: \"gateway\",\n          ports: {\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          },\n          properties: {},\n          position: { x: 629, y: 72 },\n        },\n      },\n      links: {},\n      offset: { x: 0, y: 0 },\n    },\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    occurences: {\n      current: {},\n      previous: {},\n      lastLog: [],\n    },\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: null,\n    currentTab: \"logStream\",\n  };\n}\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    window.peakLogs = this.getLogs;\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_EXAMPLE:\n        this.loadExample(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async (yamlSTRING) => {\n    let flow;\n    const { settings } = _store;\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n\n    if (yamlSTRING) {\n      flow = parseYAML(yamlSTRING);\n    } else {\n      try {\n        let str = await api.getYAML(connectionString);\n        flow = parseYAML(str);\n      } catch (e) {\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status, message) => {\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n      return this.showBanner(message, \"error\");\n    }\n  };\n\n  handleNewLog = (message) => {\n    const { data } = message;\n\n    const log = data;\n\n    log.formattedTimestamp = new Date(log.created * 1000).toLocaleString();\n    log.idx = _store.logs.length;\n\n    _store.logs.push(log);\n    _store.processes[log.process] = log.name;\n    _store.logSources[log.name] = true;\n    _store.logLevels[log.levelname] = true;\n\n    if (CHART_LEVELS.includes(log.levelname)) {\n      _store.occurences.current[log.levelname]++;\n    }\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = () => {\n    for (let i = 0; i < CHART_LEVELS.length; ++i) {\n      let level = CHART_LEVELS[i];\n      _store.occurences.current[level] = 0;\n      _store.occurences.previous[level] = 0;\n      _store.summaryCharts[level] = new Array(NUM_CHART_ELEMENTS).fill(0);\n    }\n    _store.occurences.lastLog = new Array(NUM_CHART_ELEMENTS).fill({});\n    this.updateChartInterval = setInterval(\n      this.updateSummaryCharts,\n      CHART_UPDATE_INTERVAL\n    );\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    const { current, previous } = _store.occurences;\n    for (let i = 0; i < CHART_LEVELS.length; ++i) {\n      let level = CHART_LEVELS[i];\n      const numLogs = current[level];\n      const prevNum = previous[level];\n      _store.summaryCharts[level].push(numLogs - prevNum);\n      _store.summaryCharts[level].shift();\n      _store.occurences.previous[level] = numLogs;\n    }\n    _store.occurences.lastLog.push(_store.logs.length - 1);\n    _store.occurences.lastLog.shift();\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (index) => {\n    let logIndex = _store.occurences.lastLog[index];\n    if (!logIndex) return;\n    _store.logIndex = _store.occurences.lastLog[index];\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    let x = 0;\n    let y = 0;\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n        x = value.position.x * -1 + 40;\n        y = value.position.y * -1 + 100;\n      }\n    }\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadExample = (exampleName) => {\n    const flow = exampleYAML[exampleName];\n    this.initFlowChart(flow);\n    this.emit(\"update-flowchart\");\n  };\n\n  saveSettings = (settings) => {\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, params } = data;\n    _store.modal = modal;\n    _store.modalParams = params;\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = \"\";\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getOccurencesByName = () => {\n    return _store.occurences.current;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarToggle from \"./NavbarToggle\";\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainNavbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userActionsVisible: false,\n      connected: Store.getConnectionStatus(),\n      user: Store.getUser(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getData);\n  };\n\n  getData = () => {\n    const connected = Store.getConnectionStatus();\n    const user = Store.getUser();\n    this.setState({ connected, user });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  toggleUserActions = () => {\n    this.setState({\n      userActionsVisible: !this.state.userActionsVisible,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n  render = () => {\n    const { connected, user, userActionsVisible } = this.state;\n    return (\n      <div className=\"main-navbar bg-white sticky-top\">\n        <Container fluid className=\"p-0\">\n          <Navbar\n            type=\"light\"\n            className=\"align-items-stretch flex-md-nowrap p-0\"\n          >\n            <NavbarSpacer />\n            <Nav navbar className=\"border-left flex-row\">\n              <Notifications reconnect={this.reconnect} connected={connected} />\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={this.toggleUserActions}\n                logOut={this.logOut}\n              />\n            </Nav>\n            <NavbarToggle toggleSidebar={this.toggleSidebar} />\n          </Navbar>\n        </Container>\n      </div>\n    );\n  };\n}\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({ menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DashboardLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default ({ show, acceptCookies }) => {\n  return (\n    <div className={`cookies-banner ${show ? \"\" : \"hidden\"}`}>\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ data }) => {\n  return data ? (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nexport default ({ loading, connected, reconnect }) => {\n  return loading || connected ? (\n    \"\"\n  ) : (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (this.inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(this.inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (this.inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(this.inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport CookiesBanner from \"../components/Common/CookiesBanner\";\nimport InfoBanner from \"../components/Common/InfoBanner\";\nimport ConnectionBanner from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      modal: Store.getModal(),\n      loading: Store.isLoading(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    this.setState({ modal, loading, banner, connected });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ accepted: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const params = Store.getModalParams();\n    const { imageId } = params;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  render = () => {\n    const { modal, acceptedCookies, banner, connected, loading } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar />\n            <InfoBanner data={banner} />\n            <ConnectionBanner\n              loading={loading}\n              connected={connected}\n              reconnect={this.reconnect}\n            />\n            {children}\n            <CookiesBanner\n              show={!acceptedCookies}\n              acceptCookies={this.acceptCookies}\n            />\n            <MainFooter />\n          </Col>\n        </Row>\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nexport default ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n};\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default (props) => {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default (props) => {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport lunr from \"lunr\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  constructor(props) {\n    super();\n    let node = {};\n    if (props.chart.selected.id) {\n      const selectedNode = props.chart.nodes[props.chart.selected.id];\n      node = this.getInitialNodeState(selectedNode);\n    }\n\n    this.state = {\n      availableProperties: Store.getAvailableProperties(),\n      node,\n      searchResults: [],\n      searchQuery: \"\",\n    };\n  }\n\n  getInitialNodeState = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).forEach((key) => {\n      properties[key] = node.properties[key];\n    });\n\n    return { label, id: node.id, properties, newProperties };\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id) return;\n\n    this.setState({ searchResults: [], searchQuery: \"\" });\n\n    if (!id) return;\n\n    if (type === \"node\" && id !== this.state.node.id) {\n      const node = nodes[id];\n      this.setState({ node: this.getInitialNodeState(node) });\n    }\n  };\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.searchProperties);\n  };\n\n  searchProperties = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ searchResults: false });\n    this.indexProperties();\n    let searchResults = this.index.search(`${query} ${query}*`);\n    this.setState({ searchResults });\n  };\n\n  indexProperties = () => {\n    const { availableProperties } = this.state;\n    this.index = lunr(function () {\n      this.field(\"name\");\n\n      availableProperties.forEach((prop, idx) => {\n        prop.id = parseInt(idx);\n        this.add(prop);\n      });\n    });\n  };\n\n  renderEditNode = () => {\n    const {\n      availableProperties,\n      node,\n      searchQuery,\n      searchResults,\n    } = this.state;\n    let label =\n      typeof node.label === \"undefined\"\n        ? node.properties.name\n        : node.label || \"\";\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>Pod Name</b>\n          </p>\n          <FormControl\n            spellCheck={false}\n            value={label}\n            onChange={(e) => this.updateLabel(e.target.value)}\n            className=\"pod-name-input\"\n          />\n        </div>\n        <p className=\"mb-0 px-2\">\n          <b>Properties</b>\n        </p>\n        <div className=\"m-2\">\n          <FormControl\n            spellCheck={false}\n            placeholder=\"search properties...\"\n            value={searchQuery}\n            onChange={this.updateSearchQuery}\n          />\n        </div>\n        <div className=\"property-table flex-fill mx-2\">\n          {searchQuery && searchResults ? (\n            searchResults.map((result) => {\n              const property = availableProperties[result.ref];\n              const { name, type } = property;\n              const value = node.properties[name];\n\n              if (typeof value == \"undefined\")\n                return (\n                  <div key={name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={type}\n                      value={node.newProperties[name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                );\n              return (\n                <div key={name} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{name}</p>\n                  <FormControl\n                    spellCheck={false}\n                    value={value || \"\"}\n                    onChange={(e) =>\n                      this.updateExistingValue(name, e.target.value)\n                    }\n                    className=\"property-value-input\"\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              {Object.keys(node.properties).map((prop) => {\n                const value = node.properties[prop];\n                if (prop === \"name\") return \"\";\n                return (\n                  <div key={prop} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{prop}</p>\n                    <FormControl\n                      spellCheck={false}\n                      value={value || \"\"}\n                      onChange={(e) =>\n                        this.updateExistingValue(prop, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    />\n                  </div>\n                );\n              })}\n              {availableProperties.map((property) =>\n                typeof node.properties[property.name] == \"undefined\" ? (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={property.type}\n                      value={node.newProperties[property.name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(property.name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Pod\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId];\n    const nodeTo = nodes[link.to.nodeId];\n\n    let choices = Object.keys(nodes).map((id) => {\n      return { label: nodes[id].label || nodes[id].properties.name, id };\n    });\n\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Edit Connection</b>\n        </h5>\n        <div className=\"flex-fill px-2\">\n          <div className=\"p-2 mb-1\">\n            <p className=\"mb-1\">\n              <b>From</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, e.target.value, nodeTo.id)\n              }\n              value={nodeFrom.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n            <p className=\"mb-1\">\n              <b>To</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, nodeFrom.id, e.target.value)\n              }\n              value={nodeTo.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Connection\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderPodMenu = () => {\n    return (\n      <div className=\"d-flex flex-column h-100\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Add Pods</b>\n        </h5>\n        <div className=\"p-3 scrollable flex-fill\">\n          <SidebarItem\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={{}}\n          />\n          {defaultPods.map((pod, idx) => (\n            <SidebarItem\n              key={idx}\n              ports={{\n                inPort: {\n                  id: \"inPort\",\n                  type: \"input\",\n                },\n                outPort: {\n                  id: \"outPort\",\n                  type: \"output\",\n                },\n              }}\n              properties={pod}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {hasSelected\n          ? selected.type === \"link\"\n            ? this.renderEditLink(links[selected.id], nodes)\n            : this.renderEditNode(nodes[selected.id])\n          : this.renderPodMenu()}\n      </Card>\n    );\n  };\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"example-selection\">\n      <DropdownButton\n        as={ButtonGroup}\n        title=\"Load Example\"\n        id=\"bg-nested-dropdown\"\n      >\n        <Dropdown.Item onClick={() => props.loadExample(\"pokedex\")}>\n          Pokedex Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"southpark\")}>\n          South Park Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"flower\")}>\n          Flower Search Query\n        </Dropdown.Item>\n      </DropdownButton>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport ExampleSelection from \"../components/FlowChart/ExampleSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart();\n    this.state = { chart, showOverlay: false };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateChart({ ...chart, ...newChart });\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateChart = (chart) => {\n    this.setState({ chart });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId, chart }) => {\n    if (fromPortId !== \"outPort\" || toPortId !== \"inPort\") return false;\n    if (fromNodeId === toNodeId) return false;\n    return true;\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadExample = (example) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_EXAMPLE,\n      payload: example,\n    });\n  };\n\n  render = () => {\n    const { chart, showOverlay } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <ExampleSelection loadExample={this.loadExample} />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nexport default ({ data, showPodInFlow }) => {\n  const { name, msg, levelname, process, formattedTimestamp, idx } = data;\n  let logName = String(name);\n  logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n  let levelInitial = String(levelname)[0];\n  return (\n    <div\n      className={`log log-${String(\n        levelname\n      ).toLowerCase()} px-4 border-bottom py-1`}\n    >\n      <Row>\n        <Col\n          lg=\"2\"\n          md=\"3\"\n          className=\"log-prefix text-muted px-0 d-flex flex-row\"\n        >\n          <div className=\"text-bold mr-2\">{idx}</div>\n          <div className=\"ml-auto\">{formattedTimestamp}</div>\n        </Col>\n        <Col\n          lg=\"3\"\n          md=\"4\"\n          className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n          onClick={() => showPodInFlow(logName)}\n        >\n          {logName}@{process}[{levelInitial}]:\n        </Col>\n        <Col sm=\"12\" md=\"5\" lg=\"7\" className=\"px-0\">\n          {msg}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  FormControl,\n  Row,\n  Col,\n  ButtonGroup,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport LogItem from \"./LogItem\";\nimport lunr from \"lunr\";\nimport { saveAs } from \"file-saver\";\nimport { Store } from \"../../flux\";\n\nimport List from \"react-virtualized/dist/commonjs/List\";\nimport AutoSizer from \"react-virtualized/dist/commonjs/AutoSizer\";\nimport CellMeasurer, {\n  CellMeasurerCache,\n} from \"react-virtualized/dist/commonjs/CellMeasurer\";\n\nimport { Dispatcher, Constants } from \"../../flux\";\n\nclass StreamContainer extends React.Component {\n  _cache = new CellMeasurerCache({ defaultHeight: 10, fixedWidth: true });\n  _resultsCache = new CellMeasurerCache({\n    defaultHeight: 10,\n    fixedWidth: true,\n  });\n\n  _mostRecentWidth = 0;\n  _mostRecentHeight = 0;\n  _resizeAllFlag = false;\n  _startIndex = 0;\n  _scrollIndex = 0;\n  _scrollTop = 0;\n  _scrolledToBottom = true;\n\n  constructor() {\n    super();\n\n    this.state = {\n      allLogs: Store.getLogs(),\n      logs: Store.getLogs(),\n      sources: Store.getLogSources(),\n      levels: Store.getLogLevels(),\n      searchQuery: \"\",\n      prevQuery: \"\",\n      results: [],\n      showHelper: false,\n      selectedSource: false,\n      selectedLevel: false,\n    };\n\n    Store.on(\"update-logs\", this.getData);\n    Store.on(\"show-log\", this.getIndexedLog);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-logs\", this.getData);\n    Store.removeListener(\"show-log\", this.getIndexedLog);\n  };\n\n  downloadLogs = (format) => {\n    let logs = this.state.allLogs;\n    let content = \"\";\n    if (format === \"json\") content = \"[\\n\";\n    else if (format === \"csv\")\n      content =\n        \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n\n    for (let i = 0; i < logs.length; ++i) {\n      let log = logs[i];\n      if (format === \"json\")\n        content +=\n          JSON.stringify(logs[i]) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n      else if (format === \"csv\")\n        content += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n      else\n        content += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    }\n    if (format === \"json\") content += \"]\";\n\n    let filename = `jina-logs-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  };\n\n  componentDidMount = () => {\n    setTimeout(() => {\n      if (this._list) {\n        this._resizeAll();\n        this.backToBottom();\n      }\n    }, 1);\n  };\n\n  getData = () => {\n    const allLogs = Store.getLogs();\n    const sources = Store.getLogSources();\n    const levels = Store.getLogLevels();\n    this.setState({ sources, levels, allLogs }, this.filterLogs);\n    if (this._scrolledToBottom && this._list) this.scrollToBottom();\n  };\n\n  getIndexedLog = () => {\n    const index = Store.getIndexedLog();\n    const selectedSource = false;\n    const selectedLevel = false;\n    const logs = this.state.allLogs;\n    this.setState({ selectedSource, selectedLevel, logs });\n    this.scrollToLog(index);\n  };\n\n  filterLogs = () => {\n    let { allLogs, selectedSource, selectedLevel } = this.state;\n    if (selectedSource === \"false\") selectedSource = false;\n    if (selectedLevel === \"false\") selectedLevel = false;\n\n    if (!selectedSource && !selectedLevel)\n      return this.setState({ logs: allLogs });\n    let logs = allLogs.filter((log) => {\n      if (selectedSource && selectedLevel)\n        return log.levelname === selectedLevel && log.name === selectedSource;\n      else if (selectedSource) return log.name === selectedSource;\n      else if (selectedLevel) return log.levelname === selectedLevel;\n      return false;\n    });\n\n    this.setState({ logs }, this._resizeAll);\n  };\n\n  setSelectedSource = (selectedSource) => {\n    this.setState({ selectedSource }, this.filterLogs);\n  };\n\n  setSelectedLevel = (selectedLevel) => {\n    this.setState({ selectedLevel }, this.filterLogs);\n  };\n\n  search = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ results: false }, this._resizeAll);\n    this.indexLogs();\n    let results = this.index.search(`${query}*`);\n    this.setState({ results }, this._resizeSearchResults);\n  };\n\n  listenForEnter = (key) => {\n    if (parseInt(key.charCode) === 13) {\n      this.search();\n    }\n  };\n\n  indexLogs = () => {\n    const { logs } = this.state;\n    this.index = lunr(function () {\n      this.field(\"filename\");\n      this.field(\"funcName\");\n      this.field(\"msg\");\n      this.field(\"name\");\n      this.field(\"module\");\n      this.field(\"pathname\");\n\n      logs.forEach((log, idx) => {\n        log.id = parseInt(idx);\n        this.add(log);\n      });\n    });\n  };\n\n  scrollToLog = (index) => {\n    this._list.scrollToRow(index);\n  };\n\n  scrollToBottom = () => {\n    this._list.scrollToRow(this.state.logs.length);\n    this._scrolledToBottom = true;\n  };\n\n  scrollToBottomResults = () => {\n    this._resultsList.scrollToRow(this.state.results.length);\n    this._scrolledToBottom = true;\n  };\n\n  backToBottom = () => {\n    this.scrollToBottom();\n    setTimeout(this.scrollToBottom, 1);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.search);\n  };\n\n  clearSearchResults = () => {\n    this.setState({\n      results: false,\n      searchQuery: \"\",\n    });\n  };\n\n  showPodInFlow = (podLabel) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_POD_IN_FLOW,\n      payload: podLabel,\n    });\n  };\n\n  renderSearchResults = () => {\n    const { results } = this.state;\n    return (\n      <AutoSizer>\n        {({ height, width }) => {\n          if (this._mostRecentWidth !== width) {\n            this._mostRecentWidth = width;\n            setTimeout(this._resizeSearchResults, 0);\n          }\n          if (this._mostRecentHeight !== height) {\n            this._mostRecentHeight = height;\n            setTimeout(this._resizeSearchResults, 0);\n          }\n          return (\n            <List\n              width={width}\n              height={height}\n              ref={(ref) => (this._resultsList = ref)}\n              deferredMeasurementCache={this._resultsCache}\n              rowHeight={this._resultsCache.rowHeight}\n              rowCount={results.length}\n              rowRenderer={this.renderSearchResultRow}\n            />\n          );\n        }}\n      </AutoSizer>\n    );\n  };\n\n  renderLogRow = ({ index, isScrolling, key, parent, style }) => {\n    const log = this.state.logs[index];\n    return (\n      <CellMeasurer\n        cache={this._cache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <div\n          style={{\n            ...style,\n            wordBreak: \"break-word\",\n          }}\n        >\n          <LogItem\n            showPodInFlow={this.showPodInFlow}\n            index={index}\n            data={log}\n          />\n        </div>\n      </CellMeasurer>\n    );\n  };\n\n  renderSearchResultRow = ({ index, isScrolling, key, parent, style }) => {\n    const result = this.state.results[index];\n    const log = this.state.logs[result.ref];\n    return (\n      <CellMeasurer\n        cache={this._resultsCache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <div\n          style={{\n            ...style,\n            wordBreak: \"break-word\",\n          }}\n        >\n          <LogItem showPodInFlow={this.showPodInFlow} data={log} />\n        </div>\n      </CellMeasurer>\n    );\n  };\n\n  render = () => {\n    const {\n      results,\n      searchQuery,\n      logs,\n      showHelper,\n      sources,\n      levels,\n    } = this.state;\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header className=\"p-3\">\n          <Row>\n            <Col md=\"8\" xs=\"6\">\n              <FormControl\n                as=\"select\"\n                onChange={(e) => this.setSelectedSource(e.target.value)}\n                className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              >\n                <option value={false}>All Logs</option>\n                {Object.keys(sources).map((source) => (\n                  <option key={source} value={source}>\n                    {source}\n                  </option>\n                ))}\n              </FormControl>\n              <FormControl\n                as=\"select\"\n                onChange={(e) => this.setSelectedLevel(e.target.value)}\n                className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              >\n                <option value={false}>All Levels</option>\n                {Object.keys(levels).map((level) => (\n                  <option key={level} value={level}>\n                    {level}\n                  </option>\n                ))}\n              </FormControl>\n              <DropdownButton\n                as={ButtonGroup}\n                title=\"Download Logs\"\n                id=\"bg-nested-dropdown\"\n              >\n                <Dropdown.Item onClick={() => this.downloadLogs(\"csv\")}>\n                  Download as CSV\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => this.downloadLogs(\"json\")}>\n                  Download as JSON\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => this.downloadLogs(\"txt\")}>\n                  Download as TXT\n                </Dropdown.Item>\n              </DropdownButton>\n            </Col>\n            <Col md=\"4\" xs=\"6\">\n              <FormControl\n                placeholder=\"search logs...\"\n                onKeyPress={this.listenForEnter}\n                onChange={this.updateSearchQuery}\n                value={searchQuery}\n              />\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body\n          className=\"log-stream-container p-1 border-top\"\n          id=\"log-stream-container\"\n        >\n          {searchQuery && results ? (\n            \"\"\n          ) : (\n            <div\n              onClick={this.backToBottom}\n              className={`back-to-bottom ${showHelper && \"active\"}`}\n            >\n              <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n            </div>\n          )}\n          {searchQuery && results ? (\n            this.renderSearchResults()\n          ) : (\n            <AutoSizer>\n              {({ height, width }) => {\n                if (this._mostRecentWidth !== width) {\n                  this._mostRecentWidth = width;\n                  setTimeout(this._resizeAll, 0);\n                  setTimeout(this.backToBottom, 1);\n                }\n                if (this._mostRecentHeight !== height) {\n                  this._mostRecentHeight = height;\n                  setTimeout(this._resizeAll, 0);\n                  setTimeout(this.backToBottom, 1);\n                }\n                return (\n                  <List\n                    width={width}\n                    height={height}\n                    ref={(ref) => (this._list = ref)}\n                    deferredMeasurementCache={this._cache}\n                    rowHeight={this._cache.rowHeight}\n                    rowCount={logs.length}\n                    rowRenderer={this.renderLogRow}\n                    onScroll={this._onScroll}\n                    scrollToAlignment=\"center\"\n                  />\n                );\n              }}\n            </AutoSizer>\n          )}\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  _onRowsRendered = (data, cb) => {\n    const { startIndex } = data;\n    this._startIndex = startIndex;\n  };\n\n  _onScroll = (data) => {\n    const { scrollTop, scrollHeight, clientHeight } = data;\n    this._scrollTop = scrollTop;\n    let difference = scrollHeight - (scrollTop + clientHeight);\n\n    if (difference < 10) this._scrolledToBottom = true;\n    else {\n      this._scrolledToBottom = false;\n    }\n\n    if (difference > 75 && !this.state.showHelper)\n      this.setState({ showHelper: true });\n    else if (difference <= 75 && this.state.showHelper)\n      this.setState({ showHelper: false });\n  };\n\n  _resizeAll = () => {\n    this._resizeAllFlag = false;\n    this._cache.clearAll();\n    if (this._list) {\n      this._list.recomputeRowHeights();\n    }\n  };\n\n  _resizeSearchResults = () => {\n    this._resizeAllFlag = false;\n    this._resultsCache.clearAll();\n    if (this._resultsList) {\n      this._resultsList.recomputeRowHeights();\n    }\n  };\n}\n\nexport default StreamContainer;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = {\n  INFO: {\n    border: \"#009999\",\n    background: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    border: \"#32c8cd\",\n    background: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    border: \"#ffcc66\",\n    background: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    border: \"#ff6666\",\n    background: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    border: \"#ff4540\",\n    background: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    border: \"#6E7278\",\n    background: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass ChartBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"bottom\",\n        labels: {\n          padding: 10,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: false,\n            color: \"red\",\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: Object.keys(data).map((level) => {\n          const chartData = data[level];\n          return {\n            label: level,\n            fill: \"start\",\n            borderWidth: 1.5,\n            borderColor: _colors[level].border,\n            backgroundColor: _colors[level].background,\n            data: chartData,\n          };\n        }),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: Object.keys(data).map((level) => {\n        const chartData = data[level];\n        return {\n          label: level,\n          fill: \"start\",\n          borderWidth: 1.5,\n          borderColor: _colors[level].border,\n          backgroundColor: _colors[level].background,\n          data: chartData,\n        };\n      }),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass SummaryChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getSummaryCharts(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    let index = activePoints[0] && activePoints[0]._index;\n    if (index && typeof index !== \"undefined\");\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_LOG_AT_INDEX,\n      payload: index,\n    });\n  };\n\n  getData = () => {\n    const chartData = Store.getSummaryCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Body className=\"d-none d-md-block pb-2\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default SummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport ChartBase from \"./PieChart\";\n\nclass OccurenceChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getOccurencesByName(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getOccurencesByName();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Body>\n          <ChartBase data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default OccurenceChart;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport LogStream from \"../components/LogStream/LogStream\";\nimport SummaryChart from \"../components/LogStream/SummaryChart\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport OccurenceChart from \"../components/LogStream/OccurenceChart\";\n\nclass LogsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Log Stream\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"10\" className=\"mb-4\">\n              <SummaryChart />\n            </Col>\n            <Col md=\"2\" className=\"mb-4\">\n              <OccurenceChart />\n            </Col>\n          </Row>\n          <LogStream />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default LogsView;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nclass ElapsedCard extends React.Component {\n  render() {\n    const { elapsed } = this.props;\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n          <b>{elapsed.task_name}</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          Elapsed Time\n        </h6>\n      </Card>\n    );\n  }\n}\n\nexport default ElapsedCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Form,\n  FormInput,\n  Button,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\n\nclass SettingsCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      original: Store.getSettings(),\n      updates: {},\n      expanded: false,\n    };\n    Store.on(\"update-settings\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-settings\", this.getData);\n  };\n\n  getData = () => {\n    const original = Store.getSettings();\n    this.setState({ original, updates: {} });\n  };\n\n  updateSetting = (setting, value) => {\n    this.setState((prevState) => {\n      let { updates } = prevState;\n      updates[setting] = value;\n      return { updates };\n    });\n  };\n\n  saveChanges = () => {\n    const { original, updates } = this.state;\n\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  };\n\n  toggleExpand = () => {\n    this.setState({ expanded: !this.state.expanded });\n  };\n\n  render = () => {\n    const { original, updates, expanded } = this.state;\n    return (\n      <Card small className=\"mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Connection Preferences</h6>\n        </CardHeader>\n        <CardBody>\n          <Form>\n            <Row form>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Host</label>\n                <FormInput\n                  placeholder=\"0.0.0.0\"\n                  value={\"host\" in updates ? updates.host : original.host}\n                  onChange={(e) => this.updateSetting(\"host\", e.target.value)}\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Port</label>\n                <FormInput\n                  placeholder=\"5000\"\n                  value={\"port\" in updates ? updates.port : original.port}\n                  onChange={(e) => this.updateSetting(\"port\", e.target.value)}\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col xs=\"6\">\n                <strong\n                  aria-controls=\"collapsed-form\"\n                  aria-expanded={expanded}\n                  onClick={this.toggleExpand}\n                  className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n                >\n                  Advanced{\" \"}\n                  <i className=\"material-icons\">\n                    {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                  </i>\n                </strong>\n              </Col>\n              <Col xs=\"6\" className=\"text-right\">\n                <Button onClick={this.saveChanges}>Save Changes</Button>\n              </Col>\n            </Row>\n            <Collapse in={expanded}>\n              <div id=\"collapsed-form\">\n                <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n                <Row form>\n                  <Col md=\"6\" className=\"form-group\">\n                    <label>Log</label>\n                    <FormInput\n                      placeholder=\"/stream/log\"\n                      value={\"log\" in updates ? updates.log : original.log}\n                      onChange={(e) =>\n                        this.updateSetting(\"log\", e.target.value)\n                      }\n                    />\n                  </Col>\n                  <Col md=\"6\" className=\"form-group\">\n                    <label>Profile</label>\n                    <FormInput\n                      placeholder=\"/stream/profile\"\n                      value={\n                        \"profile\" in updates\n                          ? updates.profile\n                          : original.profile\n                      }\n                      onChange={(e) =>\n                        this.updateSetting(\"profile\", e.target.value)\n                      }\n                    />\n                  </Col>\n                  <Col md=\"6\" className=\"form-group\">\n                    <label>YAML</label>\n                    <FormInput\n                      placeholder=\"/data/yaml\"\n                      value={\"yaml\" in updates ? updates.yaml : original.yaml}\n                      onChange={(e) =>\n                        this.updateSetting(\"yaml\", e.target.value)\n                      }\n                    />\n                  </Col>\n                  <Col md=\"6\" className=\"form-group\">\n                    <label>Shutdown</label>\n                    <FormInput\n                      placeholder=\"/action/shutdown\"\n                      value={\n                        \"shutdown\" in updates\n                          ? updates.shutdown\n                          : original.shutdown\n                      }\n                      onChange={(e) =>\n                        this.updateSetting(\"shutdown\", e.target.value)\n                      }\n                    />\n                  </Col>\n                  <Col md=\"6\" className=\"form-group\">\n                    <label>Ready</label>\n                    <FormInput\n                      placeholder=\"/status/isready\"\n                      value={\n                        \"ready\" in updates ? updates.ready : original.ready\n                      }\n                      onChange={(e) =>\n                        this.updateSetting(\"ready\", e.target.value)\n                      }\n                    />\n                  </Col>\n                </Row>\n              </div>\n            </Collapse>\n          </Form>\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\nexport default ({ rating, userRated, rate }) => {\n  const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n  const stars = getStars(formatted, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n};\n\nconst getStars = (amount, rate) => {\n  let stars = [];\n  let integer = parseInt(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default ({ image }) => {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default (props) => {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default ({ image }) => {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default ({ readme, documentation }) => {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default (props) => {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default ({ review }) => {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default ({ reviews, newReview }) => {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getData();\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"hub\", \"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, params: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nexport default ({ title, content, icon, theme, link }) => {\n  return (\n    <a className=\"unstyled-link\" href={link}>\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from \"../components/Common/HelpCard\";\nimport PageTitle from \"../components/Common/PageTitle\";\n\nconst Errors = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Errors;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout, IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport LogsView from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n  },\n];\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nexport default () => (\n  <Router basename={\"/\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker((props) => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}