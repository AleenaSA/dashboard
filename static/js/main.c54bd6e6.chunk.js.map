{"version":3,"sources":["data/yaml.js","flux/constants.js","settings.js","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/Notifications.js","components/Layout/MainNavbar/UserActions.js","flux/dispatcher.js","helpers.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Default.jsx","components/Common/CookiesBanner.jsx","components/Common/InfoBanner.jsx","components/Common/ConnectionBanner.jsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/NodePort.jsx","components/FlowChart/ExampleSelection.jsx","views/FlowView.jsx","components/LogStream/ChartBase.jsx","components/LogStream/LogLevelSummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/LogLevelPieChart.jsx","components/Common/MultiFilterSelect.tsx","components/LogStream/useFilters.ts","components/LogStream/LogItem.tsx","components/LogStream/LogsTable.tsx","components/LogStream/usePrevious.ts","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/options.js","components/Settings/FormItem.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","views/PackageView.jsx","views/LogIn.jsx","withTracker.js","App.js","serviceWorker.js","index.js","flux/config.js"],"names":["module","exports","pokedex","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_EXAMPLE","SHOW_POD_IN_FLOW","nodeOffset","x","y","NavbarSpacer","className","NavbarToggle","toggleSidebar","onClick","Notifications","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","Dispatcher","YAML","require","settings","propertyList","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","type","parents","Array","isArray","i","length","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","formatBytes","numBytes","parseFloat","toFixed","prop","name","logStream","taskStream","_store","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","log","startsWith","close","EventSource","onopen","onmessage","m","JSON","onerror","console","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","content","searchHub","category","q","sort","CHART_LEVELS","getInitialLevelOccurences","occurences","lastLog","levels","level","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadExample","showPodByLabel","init","clearIntervals","localStorage","getItem","yaml","shutdown","ready","images","banner","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","flowchart","outPort","logs","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","taskData","qps","current","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","Date","messages","bytes","selectedNode","modalParams","currentTab","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","updateChartInterval","clearInterval","updateTaskInterval","yamlSTRING","flow","api","with","board","e","parsed","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","setInterval","status","message","nanoid","unixTime","created","timestamp","formattedTimestamp","toLocaleString","idx","process","levelname","push","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","map","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","updateSummaryCharts","entries","key","window","location","hash","customYAML","exampleName","exampleYAML","setItem","setTimeout","String","includes","showError","image","reload","bannerTimeout","clearTimeout","hideBanner","params","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getLogLevelCharts","emptyItem","chartData","now","getLogLevelOccurences","getTaskData","getActivePanel","path","substring","getConnectionStatus","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","register","peakLogs","peakStore","this","EventEmitter","MainNavbar","componentWillUnmount","Store","removeListener","getData","setState","dispatch","state","render","fluid","navbar","on","React","Component","href","style","lineHeight","maxWidth","item","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","top","subItem","nav","SidebarNavItem","MainSidebar","props","onChange","getMenuState","sidebarNavItems","getSidebarItems","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","defaultProps","contained","DashboardLayout","children","noNavbar","noFooter","sm","CookiesBanner","show","acceptCookies","Button","InfoBanner","ConnectionBanner","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","inputRef","as","rows","submitReview","IconSidebarLayout","acceptedCookies","yamlString","hideLogoText","PasteYAML","WriteReview","PageTitle","subtitle","attrs","xs","ChartNode","ButtonGroup","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","stringify","FlowChartSidebar","getInitialNodeState","newProperties","componentWillReceiveProps","nextProps","chart","searchResults","searchQuery","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","updateSearchQuery","searchProperties","query","indexProperties","search","availableProperties","lunr","field","add","renderEditNode","FormControl","spellCheck","property","deleteSelection","renderEditLink","nodeTo","choices","updateLink","choice","renderPodMenu","inPort","defaultPods","hasSelected","Card","NodePort","data-html2canvas-ignore","ExampleSelection","DropdownButton","Item","FlowView","componentDidMount","querySelector","addEventListener","preventDefault","extension","classList","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","updateChart","callback","newChart","cloneDeep","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","copyChartAsYAML","output","propId","formatAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","example","display","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","reduce","action","newChartTransformer","_levels","INFO","borderColor","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","ChartBase","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","ticks","maxRotation","getXAxisLabel","yAxes","scaleLabel","labelString","gridLines","borderDash","zeroLineColor","drawBorder","suggestedMin","autoSkip","maxTicksLimit","Number","isInteger","chartConfig","getLabels","datasets","getParsedDatasets","options","ChartElement","canvasRef","animation","update","activePoints","getElementsAtEvent","amount","values","levelData","tick","borderWidth","height","createRef","LogLevelSummaryChart","showLog","_index","Header","Body","_colors","background","PieChart","getColor","names","mode","LogLevelPieChart","customStyles","container","provided","selectProps","MultiFilterSelect","onFilterChange","rest","val","isMulti","styles","LogItem","memo","columns","msg","logName","levelInitial","firstCol","secondCol","thirdCol","toLowerCase","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","miniSearchOptions","fields","itemKey","toOption","arrayLike","LogsTable","downloadLogs","useState","scrolledToBottom","setScrolledToBottom","windowListRef","useRef","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","searchString","setSearchString","useMiniSearch","addAllAsync","previousLength","useEffect","usePrevious","resultData","filter","filters","acc","curr","sources","Set","scrollToItem","onScroll","scrollOffset","itemCount","itemSize","itemData","LogsView","format","filename","lineno","funcname","pathname","blob","Blob","saveAs","Container","ElapsedCard","ProgressCard","percent","newData","hoverBorderColor","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","difference","suggestedMax","line","tension","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","QueriesPerSecond","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","original","setOriginal","updates","setUpdates","expanded","setExpanded","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","StarRating","rating","userRated","rate","round","getStars","integer","remainder","j","ImageCard","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","HubView","sortBy","sortType","setCategory","updateSearch","BuildHistory","buildHistory","build","formattedCreated","buildSize","os","architecture","ImageDetails","version","documentation","source","license","vendor","url","ReadMe","readme","CopyCommand","copyCode","imageVar","repoTags","code","language","atomOneLight","ReviewCard","review","ImageReviews","newReview","HelpCard","icon","NotFound","exact","layout","DefaultLayout","component","IconSidebar","getImageData","imageData","readmeHTML","windowHash","windowParams","URLSearchParams","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","basename","routes","route","Boolean","hostname","ReactDOM","navigator","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.c54bd6e6.chunk.js","sourcesContent":["module.exports = {\n  pokedex: `!Flow\n  with:\n    read_only: true\n    rest_api: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        chunk_seg:\n          x: 250\n          y: 268\n        tf_encode:\n          x: 250\n          y: 420\n        chunk_idx:\n          x: 250\n          y: 600\n        ranker:\n          x: 250\n          y: 836\n        doc_idx:\n          x: 249\n          y: 985\n  pods:\n    gateway: {}\n    chunk_seg:\n      uses: pods/craft.yml\n      parallel: $PARALLEL\n      needs: gateway\n    tf_encode:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 600000\n      needs: chunk_seg\n    chunk_idx:\n      uses: pods/chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      timeout_ready: 100000\n      needs: tf_encode\n    ranker:\n      uses: BiMatchRanker\n      needs: chunk_idx\n    doc_idx:\n      uses: pods/doc.yml\n      needs: ranker\n  \n  `,\n  flower: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        loader:\n          x: 250\n          y: 257\n        flipper:\n          x: 252\n          y: 407\n        normalizer:\n          x: 239\n          y: 563\n        encoder:\n          x: 252\n          y: 712\n        chunk_indexer:\n          x: 250\n          y: 872\n        ranker:\n          x: 252\n          y: 1066\n        doc_indexer:\n          x: 253\n          y: 1199\n  pods:\n    gateway: {}\n    loader:\n      uses: yaml/craft-load.yml\n      read_only: true\n      needs: gateway\n    flipper:\n      uses: yaml/craft-flip.yml\n      read_only: true\n      needs: loader\n    normalizer:\n      uses: yaml/craft-normalize.yml\n      read_only: true\n      needs: flipper\n    encoder:\n      uses: $ENCODER\n      timeout_ready: 600000\n      read_only: true\n      needs: normalizer\n    chunk_indexer:\n      uses: yaml/index-chunk.yml\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: yaml/index-doc.yml\n      needs: ranker  \n  `,\n  southpark: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 254\n          y: 147\n        splittor:\n          x: 254\n          y: 270\n        encoder:\n          x: 254\n          y: 448\n        chunk_indexer:\n          x: 251\n          y: 645\n        ranker:\n          x: 255\n          y: 862\n        doc_indexer:\n          x: 256\n          y: 1002\n  pods:\n    gateway: {}\n    splittor:\n      uses: pods/craft-split.yml\n      parallel: $PARALLEL\n      read_only: true\n      needs: gateway\n    encoder:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 60000\n      read_only: true\n      needs: splittor\n    chunk_indexer:\n      uses: pods/index-chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      reducing_uses: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: pods/index-doc.yml\n      needs: ranker\n  `,\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_EXAMPLE: \"LOAD_EXAMPLE\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","import React from \"react\";\n\nexport default function NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n","import React from \"react\";\n\nexport default function NavbarToggle({ toggleSidebar }) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\nexport default function Notifications({ connected, reconnect }) {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n} from \"shards-react\";\n\nexport default function UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/podProperties.json\");\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\n\nexport function formatAsYAML(chart) {\n  let output = {\n    with: chart.with || {},\n    pods: {},\n  };\n  output.with.board = { canvas: {} };\n\n  Object.keys(chart.nodes).forEach((id) => {\n    let node = chart.nodes[id];\n    node.label = node.label || node.properties.name;\n    if (node.properties.name) delete node.properties.name;\n  });\n\n  Object.keys(chart.nodes).forEach((id) => {\n    const node = chart.nodes[id];\n\n    if (!node.label) return;\n\n    output.pods[node.label] = {};\n\n    Object.keys(node.properties).forEach((propId) => {\n      let type = propertyTypes[propId];\n      if (type === \"bool\") {\n        output.pods[node.label][propId] =\n          String(node.properties[propId]) === \"true\";\n      } else if (type === \"int\")\n        output.pods[node.label][propId] = parseInt(node.properties[propId]);\n      else output.pods[node.label][propId] = node.properties[propId];\n    });\n    output.with.board.canvas[node.label] = {\n      x: node.position.x,\n      y: node.position.y,\n    };\n  });\n  Object.keys(chart.links).forEach((id) => {\n    const link = chart.links[id];\n    const nodeFrom = chart.nodes[link.from.nodeId].label;\n    const nodeTo = chart.nodes[link.to.nodeId].label;\n    if (!nodeFrom || !nodeTo) return;\n    if (output.pods[nodeTo].needs) {\n      if (!Array.isArray(output.pods[nodeTo].needs))\n        output.pods[nodeTo].needs = [output.pods[nodeTo].needs];\n      output.pods[nodeTo].needs.push(nodeFrom);\n    } else output.pods[nodeTo].needs = nodeFrom;\n  });\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n","import axios from \"axios\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  connect: (settings, connectionUpdate, logUpdate, taskUpdate) => {\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      console.error(\"log error: \", data);\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      console.error(\"task error:\", data);\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (connectionString) => {\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport { nanoid } from \"nanoid\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleYAML from \"../data/yaml\";\n\nlet _store;\n\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getInitialLevelOccurences() {\n  let occurences = {\n    lastLog: 0,\n    levels: {},\n  };\n  CHART_LEVELS.forEach((level) => {\n    occurences.levels[level] = 0;\n  });\n  return occurences;\n}\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected: {},\n      hovered: {},\n      scale: 1,\n      nodes: {\n        gateway: {\n          id: \"gateway\",\n          label: \"gateway\",\n          ports: {\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          },\n          properties: {},\n          position: { x: 629, y: 72 },\n        },\n      },\n      links: {},\n      offset: { x: 0, y: 0 },\n    },\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: null,\n    currentTab: \"logStream\",\n  };\n}\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    window.peakLogs = this.getLogs;\n    window.peakStore = () => console.log(_store);\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_EXAMPLE:\n        this.loadExample(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async (yamlSTRING) => {\n    let flow;\n    const { settings } = _store;\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n\n    if (yamlSTRING) {\n      flow = parseYAML(yamlSTRING);\n    } else {\n      try {\n        let str = await api.getYAML(connectionString);\n        flow = parseYAML(str);\n      } catch (e) {\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status, message) => {\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n      return this.showBanner(message, \"error\");\n    }\n  };\n\n  handleNewLog = (message) => {\n    const { data: log } = message;\n    const id = nanoid();\n\n    log.unixTime = parseInt(log.created);\n    log.timestamp = new Date(log.unixTime * 1000);\n    log.formattedTimestamp = log.timestamp.toLocaleString();\n    log.idx = _store.logs.length;\n    log.id = id;\n\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = async () => {\n    this.updateChartInterval = setInterval(this.updateSummaryCharts, 1000);\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    let x = 0;\n    let y = 0;\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n        x = value.position.x * -1 + 40;\n        y = value.position.y * -1 + 100;\n      }\n    }\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadExample = (exampleName) => {\n    const flow = exampleYAML[exampleName];\n    this.initFlowChart(flow);\n    this.emit(\"update-flowchart\");\n  };\n\n  saveSettings = (settings) => {\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, params } = data;\n    _store.modal = modal;\n    _store.modalParams = params;\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = \"\";\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    let chartData = [];\n    let now = parseInt(new Date() / 1000);\n    for (let i = now - numSeconds; i < now; i++) {\n      chartData.push(\n        _store.logLevelOccurences[i] ? _store.logLevelOccurences[i] : emptyItem\n      );\n    }\n    return chartData;\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarToggle from \"./NavbarToggle\";\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainNavbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userActionsVisible: false,\n      connected: Store.getConnectionStatus(),\n      user: Store.getUser(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getData);\n  };\n\n  getData = () => {\n    const connected = Store.getConnectionStatus();\n    const user = Store.getUser();\n    this.setState({ connected, user });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  toggleUserActions = () => {\n    this.setState({\n      userActionsVisible: !this.state.userActionsVisible,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n  render = () => {\n    const { connected, user, userActionsVisible } = this.state;\n    return (\n      <div className=\"main-navbar bg-white sticky-top\">\n        <Container fluid className=\"p-0\">\n          <Navbar\n            type=\"light\"\n            className=\"align-items-stretch flex-md-nowrap p-0\"\n          >\n            <NavbarSpacer />\n            <Nav navbar className=\"border-left flex-row\">\n              <Notifications reconnect={this.reconnect} connected={connected} />\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={this.toggleUserActions}\n                logOut={this.logOut}\n              />\n            </Nav>\n            <NavbarToggle toggleSidebar={this.toggleSidebar} />\n          </Navbar>\n        </Container>\n      </div>\n    );\n  };\n}\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({ menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DashboardLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function CookiesBanner({ show, acceptCookies }) {\n  return (\n    <div className={`cookies-banner ${show ? \"\" : \"hidden\"}`}>\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function InfoBanner({ data }) {\n  return data ? (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nexport default function ConnectionBanner({ loading, connected, reconnect }) {\n  return loading || connected ? (\n    \"\"\n  ) : (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (this.inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(this.inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (this.inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(this.inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport CookiesBanner from \"../components/Common/CookiesBanner\";\nimport InfoBanner from \"../components/Common/InfoBanner\";\nimport ConnectionBanner from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      modal: Store.getModal(),\n      loading: Store.isLoading(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    this.setState({ modal, loading, banner, connected });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const params = Store.getModalParams();\n    const { imageId } = params;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  render = () => {\n    const { modal, acceptedCookies, banner, connected, loading } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar />\n            <InfoBanner data={banner} />\n            <ConnectionBanner\n              loading={loading}\n              connected={connected}\n              reconnect={this.reconnect}\n            />\n            {children}\n            <CookiesBanner\n              show={!acceptedCookies}\n              acceptCookies={this.acceptCookies}\n            />\n            <MainFooter />\n          </Col>\n        </Row>\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nexport default function PageTitle({ title, subtitle, className, ...attrs }) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default function SidebarItem(props) {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport lunr from \"lunr\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  constructor(props) {\n    super();\n    let node = {};\n    if (props.chart.selected.id) {\n      const selectedNode = props.chart.nodes[props.chart.selected.id];\n      node = this.getInitialNodeState(selectedNode);\n    }\n\n    this.state = {\n      availableProperties: Store.getAvailableProperties(),\n      node,\n      searchResults: [],\n      searchQuery: \"\",\n    };\n  }\n\n  getInitialNodeState = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).forEach((key) => {\n      properties[key] = node.properties[key];\n    });\n\n    return { label, id: node.id, properties, newProperties };\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id) return;\n\n    this.setState({ searchResults: [], searchQuery: \"\" });\n\n    if (!id) return;\n\n    if (type === \"node\" && id !== this.state.node.id) {\n      const node = nodes[id];\n      this.setState({ node: this.getInitialNodeState(node) });\n    }\n  };\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.searchProperties);\n  };\n\n  searchProperties = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ searchResults: false });\n    this.indexProperties();\n    let searchResults = this.index.search(`${query} ${query}*`);\n    this.setState({ searchResults });\n  };\n\n  indexProperties = () => {\n    const { availableProperties } = this.state;\n    this.index = lunr(function () {\n      this.field(\"name\");\n\n      availableProperties.forEach((prop, idx) => {\n        prop.id = parseInt(idx);\n        this.add(prop);\n      });\n    });\n  };\n\n  renderEditNode = () => {\n    const {\n      availableProperties,\n      node,\n      searchQuery,\n      searchResults,\n    } = this.state;\n    let label =\n      typeof node.label === \"undefined\"\n        ? node.properties.name\n        : node.label || \"\";\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>Pod Name</b>\n          </p>\n          <FormControl\n            spellCheck={false}\n            value={label}\n            onChange={(e) => this.updateLabel(e.target.value)}\n            className=\"pod-name-input\"\n          />\n        </div>\n        <p className=\"mb-0 px-2\">\n          <b>Properties</b>\n        </p>\n        <div className=\"m-2\">\n          <FormControl\n            spellCheck={false}\n            placeholder=\"search properties...\"\n            value={searchQuery}\n            onChange={this.updateSearchQuery}\n          />\n        </div>\n        <div className=\"property-table flex-fill mx-2\">\n          {searchQuery && searchResults ? (\n            searchResults.map((result) => {\n              const property = availableProperties[result.ref];\n              const { name, type } = property;\n              const value = node.properties[name];\n\n              if (typeof value == \"undefined\")\n                return (\n                  <div key={name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={type}\n                      value={node.newProperties[name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                );\n              return (\n                <div key={name} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{name}</p>\n                  <FormControl\n                    spellCheck={false}\n                    value={value || \"\"}\n                    onChange={(e) =>\n                      this.updateExistingValue(name, e.target.value)\n                    }\n                    className=\"property-value-input\"\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              {Object.keys(node.properties).map((prop) => {\n                const value = node.properties[prop];\n                if (prop === \"name\") return \"\";\n                return (\n                  <div key={prop} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{prop}</p>\n                    <FormControl\n                      spellCheck={false}\n                      value={value || \"\"}\n                      onChange={(e) =>\n                        this.updateExistingValue(prop, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    />\n                  </div>\n                );\n              })}\n              {availableProperties.map((property) =>\n                typeof node.properties[property.name] == \"undefined\" ? (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={property.type}\n                      value={node.newProperties[property.name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(property.name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Pod\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId];\n    const nodeTo = nodes[link.to.nodeId];\n\n    let choices = Object.keys(nodes).map((id) => {\n      return { label: nodes[id].label || nodes[id].properties.name, id };\n    });\n\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Edit Connection</b>\n        </h5>\n        <div className=\"flex-fill px-2\">\n          <div className=\"p-2 mb-1\">\n            <p className=\"mb-1\">\n              <b>From</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, e.target.value, nodeTo.id)\n              }\n              value={nodeFrom.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n            <p className=\"mb-1\">\n              <b>To</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, nodeFrom.id, e.target.value)\n              }\n              value={nodeTo.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Connection\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderPodMenu = () => {\n    return (\n      <div className=\"d-flex flex-column h-100\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Add Pods</b>\n        </h5>\n        <div className=\"p-3 scrollable flex-fill\">\n          <SidebarItem\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={{}}\n          />\n          {defaultPods.map((pod, idx) => (\n            <SidebarItem\n              key={idx}\n              ports={{\n                inPort: {\n                  id: \"inPort\",\n                  type: \"input\",\n                },\n                outPort: {\n                  id: \"outPort\",\n                  type: \"output\",\n                },\n              }}\n              properties={pod}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {hasSelected\n          ? selected.type === \"link\"\n            ? this.renderEditLink(links[selected.id], nodes)\n            : this.renderEditNode(nodes[selected.id])\n          : this.renderPodMenu()}\n      </Card>\n    );\n  };\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\n\nexport default function ExampleSelection(props) {\n  return (\n    <div className=\"example-selection\">\n      <DropdownButton\n        as={ButtonGroup}\n        title=\"Load Example\"\n        id=\"bg-nested-dropdown\"\n      >\n        <Dropdown.Item onClick={() => props.loadExample(\"pokedex\")}>\n          Pokedex Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"southpark\")}>\n          South Park Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"flower\")}>\n          Flower Search Query\n        </Dropdown.Item>\n      </DropdownButton>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport ExampleSelection from \"../components/FlowChart/ExampleSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart();\n    this.state = { chart, showOverlay: false };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateChart({ ...chart, ...newChart });\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateChart = (chart) => {\n    this.setState({ chart });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId, chart }) => {\n    if (fromPortId !== \"outPort\" || toPortId !== \"inPort\") return false;\n    if (fromNodeId === toNodeId) return false;\n    return true;\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadExample = (example) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_EXAMPLE,\n      payload: example,\n    });\n  };\n\n  render = () => {\n    const { chart, showOverlay } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <ExampleSelection loadExample={this.loadExample} />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _levels = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass ChartBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"top\",\n        labels: {\n          padding: 10,\n          boxWidth: 15,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              callback: this.getXAxisLabel,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Occurences\",\n            },\n            gridLines: {\n              labelString: \"hello\",\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: function (value) {\n                if (Number.isInteger(value)) {\n                  return value;\n                }\n              },\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: this.getParsedDatasets(),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: this.getParsedDatasets(),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  getXAxisLabel = (value, index, values) => {\n    if (index === 0) return values.length + \"s ago\";\n    else if (index === parseInt(values.length / 2)) return index + \"s ago\";\n    return;\n  };\n\n  getParsedDatasets = () => {\n    const { data } = this.props;\n    const datasets = Object.keys(_levels).map((level) => {\n      const levelData = data.map((tick) => tick.levels[level]);\n      return {\n        label: level,\n        fill: \"start\",\n        borderWidth: 1.5,\n        borderColor: _levels[level].borderColor,\n        backgroundColor: _levels[level].backgroundColor,\n        data: levelData,\n      };\n    });\n    return datasets;\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass LogLevelSummaryChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelCharts(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    const { chartData } = this.state;\n    let index = activePoints[0] && activePoints[0]._index;\n    console.log(\"index:\", index);\n\n    if (index && typeof index !== \"undefined\")\n      Dispatcher.dispatch({\n        actionType: Constants.SHOW_LOG_AT_INDEX,\n        payload: chartData[index].lastLog,\n      });\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header>Log Occurences by Level</Card.Header>\n        <Card.Body className=\"d-none d-md-block pb-2 pt-0\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelSummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport PieChart from \"./PieChart\";\n\nclass LogLevelPieChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelOccurences(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelOccurences();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header className=\"text-center\">Log Levels</Card.Header>\n        <Card.Body className=\"pt-0\">\n          <PieChart data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelPieChart;\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: string };\n\nconst customStyles = {\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n} & SelectProps;\n\nfunction MultiFilterSelect({ onFilterChange, options, ...rest }: Props) {\n  return (\n    <Select\n      onChange={(val) =>\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val])\n      }\n      isMulti\n      options={options}\n      styles={customStyles}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","const applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\nexport { applyFilters };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: any[];\n  };\n};\n\nconst LogItem = memo(({ index, style, data: { columns, items } }: Props) => {\n  const { name, msg, levelname, process, formattedTimestamp, idx } = items[\n    index\n  ];\n  let logName = String(name);\n  logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n  let levelInitial = String(levelname)[0];\n  const { firstCol, secondCol, thirdCol } = columns;\n  return (\n    <div\n      className={`log log-${String(\n        levelname\n      ).toLowerCase()} px-4 border-bottom py-1`}\n      css={{ maxHeight: 84 }}\n      style={style}\n    >\n      <Row>\n        <Col\n          className=\"log-prefix text-muted px-0 d-flex flex-row\"\n          css={{ maxWidth: firstCol }}\n        >\n          <div className=\"text-bold mr-2\">{idx}</div>\n          <div className=\"ml-auto\">{formattedTimestamp}</div>\n        </Col>\n        <Col\n          className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n          css={{ maxWidth: secondCol }}\n        >\n          {logName}@{process}[{levelInitial}]:\n        </Col>\n        <Col\n          className=\"px-0\"\n          css={{\n            maxHeight: 84,\n            display: \"block\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            width: thirdCol,\n            whiteSpace: \"nowrap\",\n            paddingRight: 0,\n            marginRight: 0,\n          }}\n        >\n          {msg}\n        </Col>\n      </Row>\n    </div>\n  );\n}, areEqual);\n\nexport { LogItem };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useMiniSearch } from \"react-minisearch\";\nimport { usePrevious } from \"./usePrevious\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { applyFilters } from \"./useFilters\";\nimport { LogItem } from \"./LogItem\";\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\ntype RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n  id: string;\n};\n\nconst ROW_SIZE = 30;\n\nconst fields = [\"filename\", \"funcName\", \"msg\", \"name\", \"module\", \"pathname\"];\nconst miniSearchOptions = { fields };\n\ntype Format = \"json\" | \"csv\" | \"tsv\" | \"txt\";\n\ntype Props = {\n  data: RawLog[];\n  downloadLogs: (format: Format) => void;\n};\n\nconst itemKey = (index: number, data: { items: RawLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsTable({ data, downloadLogs }: Props) {\n  const [scrolledToBottom, setScrolledToBottom] = React.useState(true);\n  const windowListRef = useRef<any>();\n  const [selectedSources, setSelectedSources] = React.useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = React.useState<any[]>([]);\n  const [searchString, setSearchString] = React.useState(\"\");\n  const { search, searchResults, addAllAsync } = useMiniSearch(\n    data,\n    miniSearchOptions\n  );\n  const previousLength = usePrevious(data.length);\n  useEffect(() => {\n    if (previousLength && previousLength! > 0) {\n      addAllAsync([data[previousLength! - 1]]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousLength]);\n\n  const unfiltered = searchString ? searchResults : data;\n\n  const resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n  useEffect(() => {\n    if (windowListRef.current && scrolledToBottom) {\n      windowListRef.current.scrollToItem(resultData.length);\n    }\n  }, [resultData.length, scrolledToBottom]);\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-3\">\n        <Row>\n          <Col md=\"8\">\n            <MultiFilterSelect\n              options={toOption(sources)}\n              onFilterChange={setSelectedSources}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Logsources\"\n            />\n            <MultiFilterSelect\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Levels\"\n            />\n            <DropdownButton\n              as={ButtonGroup}\n              title=\"Download Logs\"\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item onClick={() => downloadLogs(\"csv\")}>\n                Download as CSV\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => downloadLogs(\"json\")}>\n                Download as JSON\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => downloadLogs(\"txt\")}>\n                Download as TXT\n              </Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col md=\"4\">\n            <Form.Control\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={(e) => {\n                search(e.target.value as string);\n                setSearchString(e.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body\n        className=\"log-stream-container p-1 border-top\"\n        id=\"log-stream-container\"\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() =>\n              windowListRef.current.scrollToItem(resultData.length)\n            }\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        <AutoSizer>\n          {({ height, width }) => {\n            const firstCol = 200;\n            const secondCol = 200;\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - resultData.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={resultData.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: resultData,\n                  columns: { firstCol, secondCol, thirdCol },\n                }}\n                ref={windowListRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import React from \"react\";\nfunction usePrevious(value: any) {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\nexport { usePrevious };\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport LogLevelSummaryChart from \"../components/LogStream/LogLevelSummaryChart\";\nimport LogLevelPieChart from \"../components/LogStream/LogLevelPieChart\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store } from \"../flux\";\nimport { saveAs } from \"file-saver\";\n\nclass LogsView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      banner: Store.getBanner(\"logs\"),\n      logs: Store.getLogs(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-logs\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.on(\"update-logs\", this.getData);\n  };\n  getData = () => {\n    const banner = Store.getBanner(\"logs\");\n    const logs = Store.getLogs();\n    this.setState({ banner, logs });\n  };\n  downloadLogs = (format) => {\n    let logs = this.state.logs;\n    let content = \"\";\n    if (format === \"json\") content = \"[\\n\";\n    else if (format === \"csv\")\n      content =\n        \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n\n    for (let i = 0; i < logs.length; ++i) {\n      let log = logs[i];\n      if (format === \"json\")\n        content +=\n          JSON.stringify(logs[i]) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n      else if (format === \"csv\")\n        content += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n      else\n        content += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    }\n    if (format === \"json\") content += \"]\";\n\n    let filename = `jina-logs-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Log Stream\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"10\" className=\"mb-4\">\n              <LogLevelSummaryChart />\n            </Col>\n            <Col md=\"2\" className=\"mb-4\">\n              <LogLevelPieChart />\n            </Col>\n          </Row>\n          <LogsTable downloadLogs={this.downloadLogs} data={this.state.logs} />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default LogsView;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nexport default function ElapsedCard({ elapsed }) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState(Store.getSettings());\n  const [updates, setUpdates] = useState({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting, value) {\n    const newUpdates = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\nexport default function StarRating({ rating, userRated, rate }) {\n  const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n  const stars = getStars(formatted, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n}\n\nconst getStars = (amount, rate) => {\n  let stars = [];\n  let integer = parseInt(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default function ImageCard({ image }) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function BuildHistory(props) {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default function ImageDetails({ image }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReadMe({ readme, documentation }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default function CopyCommand(props) {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReviewCard({ review }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default function ImageReviews({ reviews, newReview }) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nexport default function HelpCard({ title, content, icon, theme, link }) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from \"../components/Common/HelpCard\";\nimport PageTitle from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout, IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport LogsView from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n  },\n];\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getData();\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"hub\", \"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, params: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nexport default () => (\n  <Router basename={\"/\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker((props) => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  timeout: 15000,\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}