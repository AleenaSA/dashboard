{"version":3,"sources":["images/jina-light.svg","settings.js","flux/api.js","flux/dispatcher.js","helpers.js","flux/store.js","data/sidebar-nav-items.js","modals/PasteYAML.jsx","layouts/Default.jsx","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarNav/Notifications.js","components/Layout/MainNavbar/NavbarNav/NavbarNav.js","components/Layout/MainNavbar/NavbarNav/UserActions.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Dashboard.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/NodePort.jsx","views/FlowView.jsx","components/LogStream/LogItem.jsx","components/LogStream/LogStream.jsx","components/LogStream/ChartBase.jsx","components/LogStream/SummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/OccurenceChart.jsx","views/LogsView.jsx","components/Settings/Settings.jsx","views/NotFound.jsx","routes.js","views/Settings.jsx","withTracker.js","App.js","serviceWorker.js","index.js","flux/constants.js"],"names":["module","exports","nodeOffset","x","y","stream","Dispatcher","YAML","require","settings","propertyList","propertyTypes","parseYAML","yamlSTR","replace","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","prevNode","Object","keys","map","id","pod","node","label","ports","needs","send_to","position","properties","type","parents","Array","isArray","i","length","nodeFrom","linkId","link","color","from","nodeId","portId","to","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","prop","name","callback","hadPreviousStream","close","connectionString","host","port","log","startsWith","console","EventSource","onopen","onmessage","m","JSON","onerror","Promise","resolve","reject","xhr","XMLHttpRequest","yaml","open","timeout","onload","this","status","response","statusText","send","_store","getInitialStore","CHART_LEVELS","localStorage","getItem","profile","shutdown","ready","banner","connected","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","flowchart","logs","all","logSources","occurences","current","previous","lastLog","logIndex","summaryCharts","selectedNode","modalParams","currentTab","registerActions","actionType","payload","Constants","TOGGLE_SIDEBAR","toggleSidebar","SHOW_MODAL","showModal","IMPORT_CUSTOM_YAML","importCustomYAML","CLOSE_MODAL","closeModal","SHOW_LOG_AT_INDEX","showLogAtIndex","SAVE_SETTINGS","saveSettings","RECONNECT","reconnect","init","a","updateChartInterval","clearInterval","initFlowChart","initLogStream","initCharts","emit","yamlSTRING","flow","api","str","with","board","e","parsed","message","showBanner","formattedTimestamp","Date","created","toLocaleString","idx","push","source","includes","levelname","level","fill","setInterval","updateSummaryCharts","indeces","numLogs","prevNum","shift","index","customYAML","key","setItem","setTimeout","theme","String","hideBanner","showError","params","getCurrentTab","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getSummaryCharts","getTotalOccurences","isConnected","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","register","EventEmitter","PasteYAML","state","style","overlay","backgroundColor","content","border","bottom","maxHeight","left","padding","right","top","transform","width","maxWidth","overflow","listenForEnter","charCode","importYAML","yamlString","inputRef","value","dispatch","render","props","ariaHideApp","isOpen","contentLabel","className","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","onClick","Form","Group","Label","Control","placeholder","ref","as","rows","Button","Component","React","Notifications","Store","componentWillMount","on","getData","componentWillUnmount","removeListener","setState","toggleNotifications","pill","navbar","NavbarToggle","handleClick","bind","href","MainNavbar","layout","stickyTop","classes","classNames","fluid","NavbarSpacer","NavbarNav","SidebarMainNavbar","handleToggleSidebar","hideLogoText","lineHeight","src","alt","SidebarNavItem","toggleDropdown","item","TOGGLE_SIDEBAR_DROPDOWN","hasSubItems","tag","RouteNavLink","dangerouslySetInnerHTML","__html","DropdownMenu","small","subItem","SidebarNavItems","getSidebarItems","onChange","nav","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainFooter","contained","menuItems","copyright","Link","defaultProps","DefaultLayout","children","noNavbar","noFooter","sm","IconSidebarLayout","PageTitle","subtitle","attrs","xs","SidebarItem","draggable","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","stringify","FlowChartSidebar","availableProperties","componentWillReceiveProps","nextProps","chart","setInitialNode","newProperties","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","renderEditNode","FormControl","spellCheck","target","property","variant","deleteSelection","renderEditLink","nodeTo","renderInstructions","inPort","outPort","hasSelected","Card","ChartNode","getPropertiesString","propId","concat","propSTR","Badge","replicas","FlowTab","updateChart","newChart","cloneDeep","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","SELECT_NODE","copyChartAsYAML","temp","document","createElement","body","appendChild","select","execCommand","removeChild","copyToClipboard","output","formatAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","reduce","obj","action","newChartTransformer","LogItem","msg","process","logName","substring","levelInitial","toLowerCase","Row","Col","StreamContainer","_cache","CellMeasurerCache","defaultHeight","fixedWidth","_resultsCache","_mostRecentWidth","_mostRecentHeight","_resizeAllFlag","_startIndex","_scrollIndex","_scrollTop","_scrolledToBottom","logData","sources","searchQuery","prevQuery","searchResults","showHelper","selectedSource","componentDidMount","_list","_resizeAll","scrollToBottom","scrollToLog","setSelectedSource","search","query","indexLogs","results","_resizeSearchResults","lunr","field","add","scrollToRow","backToBottom","updateSearchQuery","clearSearchResults","renderSearchResults","height","_resultsList","deferredMeasurementCache","rowHeight","rowCount","rowRenderer","renderSearchResultRow","renderLogRow","isScrolling","cache","columnIndex","rowIndex","wordBreak","result","Header","onKeyPress","Body","onScroll","_onScroll","scrollToAlignment","_onRowsRendered","cb","startIndex","scrollTop","scrollHeight","clientHeight","difference","clearAll","recomputeRowHeights","_colors","INFO","background","SUCCESS","ERROR","CRITICAL","DEBUG","Chart","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","gridLines","ticks","display","yAxes","borderDash","zeroLineColor","drawBorder","suggestedMin","chartConfig","getLabels","datasets","chartData","borderWidth","borderColor","options","ChartElement","canvasRef","activePoints","getElementsAtEvent","amount","animation","update","createRef","SummaryChart","showLog","_index","ChartBase","_logLevels","mode","OccurenceChart","LogsView","Container","LogStream","SettingsCard","original","updates","updateSetting","setting","form","class","Errors","path","exact","DashboardLayout","component","IconSidebar","FlowView","Settings","NotFound","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","location","pathname","prevProps","currentPage","nextPage","basename","routes","route","Boolean","window","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch","SET_CURRENT_TAB"],"mappings":"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","file":"static/js/main.cc1363e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jina-light.07aba578.svg\";","module.exports = {\n\tnodeOffset:{\n\t\tx:250,\n\t\ty:150\n\t}\n}","let stream;\nexport default {\n\tconnect: (settings, callback) => {\n\t\tlet hadPreviousStream = false;\n\t\tif (stream){\n\t\t\thadPreviousStream = true;\n\t\t\tstream.close();\n\t\t}\n\t\t\t\n\t\tconst connectionString = `${settings.host}:${settings.port}${settings.log.startsWith('/') ? settings.log : '/' + settings.log}`;\n\t\tconsole.log('logs connectionString: ', connectionString)\n\t\tstream = new EventSource(connectionString);\n\t\tstream.onopen = () => {\n\t\t\tcallback({ type: 'connect', data: `Connection ${hadPreviousStream?'re-':''}established at ${settings.host}:${settings.port}` })\n\t\t}\n\t\tstream.onmessage = (m) => {\n\t\t\tcallback({ type: 'log', data: JSON.parse(m.data) });\n\t\t}\n\t\tstream.onerror = (data) => {\n\t\t\tcallback({ type: 'error', data: `Could not get log data from ${connectionString}` });\n\t\t\tstream.close()\n\t\t}\n\t},\n\tgetYAML: (settings) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst xhr = new XMLHttpRequest();\n\t\t\tconst connectionString = `${settings.host}:${settings.port}${settings.yaml.startsWith('/') ? settings.yaml : '/' + settings.yaml}`;\n\t\t\tconsole.log('YAML connectionString: ', connectionString)\n\t\t\txhr.open('GET', connectionString);\n\t\t\txhr.timeout = 5000;\n\t\t\txhr.onload = function () {\n\t\t\t\tif (this.status >= 200 && this.status < 300) {\n\t\t\t\t\tresolve(xhr.response);\n\t\t\t\t} else {\n\t\t\t\t\treject({\n\t\t\t\t\t\tstatus: this.status,\n\t\t\t\t\t\tstatusText: xhr.statusText\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\txhr.onerror = function () {\n\t\t\t\treject({\n\t\t\t\t\tstatus: this.status,\n\t\t\t\t\tstatusText: xhr.statusText\n\t\t\t\t});\n\t\t\t};\n\t\t\txhr.send();\n\t\t});\n\t}\n}","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();","const YAML = require('yaml');\nconst settings = require('./settings');\nconst propertyList = require('./data/properties.json');\n\nconst propertyTypes = {};\npropertyList.map(prop => propertyTypes[prop.name] = prop.type);\n\nexport function copyToClipboard(str) {\n\tconst temp = document.createElement('textarea');\n\ttemp.value = str;\n\tdocument.body.appendChild(temp);\n\ttemp.select();\n\tdocument.execCommand('copy');\n\tdocument.body.removeChild(temp);\n\treturn;\n}\nexport function parseYAML(yamlSTR) {\n\ttry {\n\t\tyamlSTR = yamlSTR.replace(\"!Flow\", \"\")\n\t\tconst data = YAML.parse(yamlSTR);\n\t\treturn { data };\n\t}\n\tcatch (error) {\n\t\talert('Error Parsing YAML:\\n' + error);\n\t\treturn { error };\n\t}\n}\nexport function formatForFlowchart(pods, canvas) {\n\tconst formatted = {\n\t\toffset: {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t},\n\t\tnodes: {},\n\t\tlinks: {},\n\t\tselected: {},\n\t\thovered: {},\n\t}\n\n\tlet nodes = {};\n\tlet links = {};\n\n\tlet prevNode = false;\n\n\tObject.keys(pods).map(id => {\n\t\tconst pod = pods[id] || {};\n\t\tlet node = {\n\t\t\tid,\n\t\t\tlabel: id,\n\t\t\tports: {},\n\t\t\tneeds: {},\n\t\t\tsend_to: {},\n\t\t\tposition: {},\n\t\t\tproperties: { ...pod }\n\t\t}\n\n\t\tif (node.properties.needs)\n\t\t\tdelete node.properties.needs\n\n\t\tnode.ports['inPort'] = { id: 'inPort', type: 'input', }\n\t\tnode.ports['outPort'] = { id: 'outPort', type: 'output', }\n\n\t\tif (prevNode && !pod.needs)\n\t\t\tpod.needs = prevNode;\n\n\t\tif (pod.needs) {\n\t\t\tlet parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n\t\t\tfor (let i = 0; i < parents.length; ++i) {\n\t\t\t\tlet nodeFrom = parents[i];\n\t\t\t\tnode.needs[nodeFrom] = true;\n\n\t\t\t\tlet linkId = `${nodeFrom}-to-${id}`;\n\t\t\t\tlet link = {\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tid: linkId,\n\t\t\t\t\tfrom: { nodeId: nodeFrom, portId: 'outPort' },\n\t\t\t\t\tto: { nodeId: id, portId: 'inPort' }\n\t\t\t\t}\n\t\t\t\tlinks[linkId] = link;\n\t\t\t}\n\t\t}\n\n\t\tif (canvas && canvas[id]) {\n\t\t\tconst { x, y } = canvas[id];\n\t\t\tnode.position = { x: parseInt(x), y: parseInt(y) };\n\t\t}\n\n\t\tnodes[id] = node;\n\t\tprevNode = id;\n\t});\n\n\tconst depthPopulation = {}; //how many nodes at each depth\n\tconst offsetX = settings.nodeOffset.x;\n\tconst offsetY = settings.nodeOffset.y;\n\n\t//fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n\tObject.keys(nodes).map(id => {\n\t\tlet depth = getNodeDepth(nodes, id, 0);\n\t\tnodes[id].depth = depth;\n\n\t\tif (depthPopulation[depth] >= 0)\n\t\t\tdepthPopulation[depth]++;\n\t\telse\n\t\t\tdepthPopulation[depth] = 0;\n\n\t\tif (!nodes[id].position.x)\n\t\t\tnodes[id].position = { y: (depth * offsetY) + offsetY, x: (depthPopulation[depth] * offsetX) + offsetX };\n\t});\n\n\tformatted.nodes = nodes;\n\tformatted.links = links;\n\n\treturn formatted;\n}\n\nexport function formatAsYAML(chart) {\n\tconsole.log('formatAsYAML input: ', chart)\n\tlet output = {\n\t\twith: chart.with || {},\n\t\tpods: {}\n\t}\n\toutput.with.board = { canvas: {} };\n\tObject.keys(chart.nodes).map(id => {\n\t\tconst node = chart.nodes[id];\n\n\t\tif (!node.label)\n\t\t\treturn;\n\n\t\toutput.pods[node.label] = {};\n\n\t\tObject.keys(node.properties).map(propId => {\n\t\t\tlet type = propertyTypes[propId];\n\t\t\tif (type === 'bool') {\n\t\t\t\toutput.pods[node.label][propId] = node.properties[propId] == 'true';\n\t\t\t}\n\t\t\telse if (type === 'int')\n\t\t\t\toutput.pods[node.label][propId] = parseInt(node.properties[propId]);\n\t\t\telse\n\t\t\t\toutput.pods[node.label][propId] = node.properties[propId];\n\t\t})\n\t\toutput.with.board.canvas[node.label] = {\n\t\t\tx: node.position.x,\n\t\t\ty: node.position.y\n\t\t}\n\t});\n\tObject.keys(chart.links).map(id => {\n\t\tconst link = chart.links[id];\n\t\tconst nodeFrom = chart.nodes[link.from.nodeId].label;\n\t\tconst nodeTo = chart.nodes[link.to.nodeId].label;\n\t\tif (!nodeFrom || !nodeTo)\n\t\t\treturn;\n\t\tif (output.pods[nodeTo].needs) {\n\t\t\tif (!Array.isArray(output.pods[nodeTo].needs))\n\t\t\t\toutput.pods[nodeTo].needs = [output.pods[nodeTo].needs]\n\t\t\toutput.pods[nodeTo].needs.push(nodeFrom)\n\t\t}\n\t\telse\n\t\t\toutput.pods[nodeTo].needs = nodeFrom;\n\t});\n\treturn `!Flow\\n${YAML.stringify(output)}`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n\tlet parents = Object.keys(nodes[currentId].needs);\n\tlet longestDepth = 0;\n\n\tfor (let i = 0; i < parents.length; ++i) {\n\t\tlet parent = parents[i];\n\t\tlet depth;\n\t\tif (nodes[parent].depth)\n\t\t\tdepth = nodes[parent].depth + 1;\n\t\telse\n\t\t\tdepth = getNodeDepth(nodes, parent, 1);\n\t\tif (depth > longestDepth)\n\t\t\tlongestDepth = depth;\n\t}\n\n\treturn currentDepth + longestDepth;\n}","import { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart } from \"../helpers\";\nimport api from \"./api\";\nimport propertyList from '../data/properties.json';\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nconst HIDE_BANNER_TIMEOUT = 5000;\n\nlet _store = getInitialStore();\n\nconst NUM_CHART_ELEMENTS = 60;\nconst CHART_UPDATE_INTERVAL = 1000;\nconst CHART_LEVELS = ['INFO', 'SUCCESS', 'ERROR', 'CRITICAL','DEBUG']\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem('preferences-host') || 'http://localhost',\n      port: localStorage.getItem('preferences-port') || 5000,\n      log: localStorage.getItem('preferences-log') || '/log/stream',\n      profile: localStorage.getItem('preferences-profile') || '/stream/profile',\n      yaml: localStorage.getItem('preferences-yaml') || '/data/yaml',\n      shutdown: localStorage.getItem('preferences-shutdown') || '/action/shutdown',\n      ready: localStorage.getItem('preferences-ready') || '/status/ready',\n    },\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected:{},\n      hovered:{},\n      nodes:{},\n      links:{},\n      offset:{x:0,y:0},\n    },\n    logs: {\n      all: [],\n    },\n    logSources: {},\n    occurences: {\n      current: {},\n      previous: {},\n      lastLog: [],\n    },\n    logIndex: false,\n    summaryCharts: {},\n    selectedNode: null,\n    modalParams: null,\n    currentTab: 'logStream',\n  }\n}\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init()\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      default:\n    }\n  }\n\n  init = async () => {\n    if (this.updateChartInterval)\n      clearInterval(this.updateChartInterval)\n    _store = getInitialStore();\n    console.log('store settings: ',_store.settings);\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    _store.loading = false;\n    this.emit('update-ui');\n    this.emit('update-settings');\n  }\n\n  initFlowChart = async (yamlSTRING) => {\n    let flow;\n    if (yamlSTRING)\n      flow = parseYAML(yamlSTRING);\n    else {\n      try{\n        let str = await api.getYAML(_store.settings);\n        flow = parseYAML(str);\n      }\n      catch(e){\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    }\n    catch (e) {\n      console.log('could not find canvas');\n      canvas = {};\n    }\n    console.log('pods: ', flow.data.pods)\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    console.log('parsed: ', parsed);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit('update-ui');\n    this.emit('update-flowchart')\n  }\n\n  initLogStream = () => {\n    api.connect(_store.settings, (message) => {\n      const { type, data } = message;\n\n      if (type === 'connect') {\n        _store.connected = true;\n        return this.showBanner(data, 'success')\n      }\n\n      if (type === 'error') {\n        _store.connected = false;\n        return this.showBanner(data, 'danger')\n      }\n\n      const log = data;\n\n      log.formattedTimestamp = (new Date(log.created *1000)).toLocaleString()\n\n      log.idx = _store.logs.all.length;\n      _store.logs.all.push(log);\n\n      const source = log.name;\n\n      if (_store.logs[source])\n        _store.logs[source].push(log);\n      else\n        _store.logs[source] = [log];\n\n      _store.logSources[source] = true;\n\n      if (CHART_LEVELS.includes(log.levelname)) {\n        _store.occurences.current[log.levelname]++;\n      }\n      // console.log('occurences: ',_store.occurences)\n      this.emit('update-logs');\n    })\n  }\n\n  initCharts = () => {\n    CHART_LEVELS.map(level => {\n      _store.occurences.current[level] = 0;\n      _store.occurences.previous[level] = 0;\n      _store.summaryCharts[level] = (new Array(NUM_CHART_ELEMENTS)).fill(0);\n    });\n    _store.occurences.lastLog = (new Array(NUM_CHART_ELEMENTS)).fill({});\n    console.log('initial Occurences: ', _store.occurences);\n    console.log('initial summary charts: ', _store.summaryCharts);\n    this.updateChartInterval = setInterval(this.updateSummaryCharts, CHART_UPDATE_INTERVAL);\n  }\n\n  updateSummaryCharts = () => {\n    const { current, previous, indeces } = _store.occurences;\n    CHART_LEVELS.map(level => {\n      const numLogs = current[level];\n      const prevNum = previous[level];\n      _store.summaryCharts[level].push(numLogs - prevNum);\n      _store.summaryCharts[level].shift();\n      _store.occurences.previous[level] = numLogs;\n    });\n    _store.occurences.lastLog.push(_store.logs.all.length - 1);\n    _store.occurences.lastLog.shift();\n    // console.log('summaryCharts:', _store.summaryCharts);\n    this.emit('update-summary-chart');\n  }\n\n  reconnect(){\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit('update-ui');\n  }\n\n  showLogAtIndex = (index) => {\n    console.log('index: ', index);\n    let logIndex = _store.occurences.lastLog[index];\n    console.log('logIndex: ', logIndex);\n    if (!logIndex)\n      return;\n    _store.logIndex = _store.occurences.lastLog[index];\n    this.emit('show-log');\n  }\n\n  importCustomYAML = (customYAML) => {\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit('update-flowchart')\n  }\n\n  saveSettings = (settings) => {\n    Object.keys(settings).map(key => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init,100);\n  }\n\n  showBanner = (message, theme) => {\n    _store.banner = { message: String(message), theme };\n    setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit('update-ui');\n  }\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit('update-ui');\n  }\n\n  showError = (error) => {\n    alert(error);\n  }\n\n  showModal = (data) => {\n    const { modal, params } = data;\n    _store.modal = modal;\n    _store.modalParams = params;\n    this.emit('update-ui');\n  }\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = '';\n    this.emit('update-ui');\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  }\n\n  getSettings = () => {\n    return _store.settings;\n  }\n\n  getBanner = () => {\n    return _store.banner;\n  }\n\n  getModal = () => {\n    return _store.modal;\n  }\n\n  getModalParams = () => {\n    return _store.modalParams;\n  }\n\n  getLogs = () => {\n    return _store.logs;\n  }\n\n  getLogSources = () => {\n    return _store.logSources;\n  }\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  }\n\n  getTotalOccurences = () =>{\n    return _store.occurences.current;\n  }\n\n  isConnected = () => {\n    return _store.connected;\n  }\n\n  isLoading = () => {\n    return _store.loading;\n  }\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  }\n\n  getAvailableProperties = () => {\n    return propertyList;\n  }\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  }\n}\n\nexport default new Store();","export default function () {\n  return [{\n    title: 'Navigation',\n    items: [{\n      title: 'Home',\n      to: '/home',\n      htmlBefore: '<i class=\"material-icons\">home</i>',\n      htmlAfter: '',\n    },\n    {\n      title: 'Log Stream',\n      to: '/logs',\n      htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n      htmlAfter: '',\n    },\n    {\n      title: 'Flow Design',\n      to: '/flow',\n      htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n      htmlAfter: '',\n    },\n    {\n      title: 'Hub',\n      to: '/hub',\n      htmlBefore: '<i class=\"material-icons\">store</i>',\n      htmlAfter: '',\n    },\n    {\n      title: 'Settings',\n      to: '/settings',\n      htmlBefore: '<i class=\"material-icons\">settings</i>',\n      htmlAfter: '',\n    },\n    {\n      title: 'Help',\n      to: '/help',\n      htmlBefore: '<i class=\"material-icons\">help</i>',\n      htmlAfter: '',\n    }\n    ],\n  }];\n}\n","import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\nimport ReactModal from 'react-modal';\nimport { Dispatcher, Constants,Store } from \"../flux\";\n\nclass PasteYAML extends Component {\n\tstate={}\n  style = {\n    overlay: {\n      backgroundColor: 'rgba(38, 50, 56, 0.5)'\n    },\n    content: {\n      border: 'none',\n      bottom: 'auto',\n      maxHeight: '80%',  // set height\n      left: '50%',\n      padding: '2rem',\n      position: 'fixed',\n      right: 'auto',\n      top: '50%', // start from center\n      transform: 'translate(-50%,-50%)', // adjust top \"up\" based on height\n      width: '90%',\n      maxWidth: '800px',\n\t\t\toverflow: 'hidden',\n    }\n  };\n\n  listenForEnter= (key) => {\n    if (key.charCode==13) {\n      this.importYAML()\n    }\n\t}\n\t\n\timportYAML = () =>{\n\t\tconst yamlString = this.inputRef.value;\n\t\tDispatcher.dispatch({\n\t\t\tactionType:Constants.IMPORT_CUSTOM_YAML,\n\t\t\tpayload: yamlString\n\t\t})\n  }\n  \n  close = () =>{\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL\n    })\n  }\n\n  render = () => {\n    const { open } = this.props;\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={open}\n        contentLabel=\"Action Modal\"\n        className='modal-content tiny-modal px-4 pt-3 pb-4'\n        shouldCloseOnOverlayClick={true}\n        style={this.style}\n        onRequestClose={this.close}\n        closeTimeoutMS={100}\n      >\n        <div className=\"modal-header p-0\">\n          <h4><b>Import YAML</b></h4>\n          <h4><span className=\"float-right close-icon\"><i className=\"material-icons\" onClick={this.close}>close</i></span></h4>\n        </div>\n        <div className=\"modal-body px-0 pb-0\">\n          <Form.Group>\n            <Form.Label>Custom YAML:</Form.Label>\n            <Form.Control placeholder=\"Paste Here\" ref={ref=>this.inputRef = ref} as=\"textarea\" rows=\"10\" />\n          </Form.Group>\n        </div>\n        <Button className=\"btn-primary\" onClick={this.importYAML}>Continue</Button>\n      </ReactModal>\n    )\n  }\n}\n\nexport default PasteYAML;\n","import React from \"react\";\nimport { Container, Alert,Col,Row,} from \"react-bootstrap\";\n\n// import Navbar from '../components/Layout/Navbar';\n// import Footer from '../components/Layout/Footer';\nimport PasteYAML from '../modals/PasteYAML';\n\n\nimport { Store, Constants } from '../flux';\n\nclass DefaultLayout extends React.Component {\n  state = {\n    modal: Store.getModal(),\n    loading: Store.isLoading(),\n  }\n\n  componentWillMount = () => {\n    Store.on('update-ui',this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-ui',this.getData);\n  }\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    this.setState({ modal,loading });\n  }\n\n  render = () => {\n    const { banner, loading, modal } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid>\n        <Row>\n          {/* <Sidebar /> */}\n          <Col\n            className=\"main-content p-0\"\n            sm=\"12\"\n            tag=\"main\"\n          >\n            {/* <Navbar /> */}\n            {\n              banner &&\n              <Alert theme={banner.variant} className=\"alert-bar py-1\">{banner.text}</Alert>\n            }\n            {\n              loading ?\n                <Container fluid className=\"main-content-container px-4\">\n                  <div className=\"error\">\n                    <div className=\"loader\"></div>\n                  </div>\n                </Container>\n                :\n                children\n            }\n            {/* <Footer /> */}\n          </Col>\n        </Row>\n        <PasteYAML open={modal==='import'}/>\n      </Container>\n    )\n  }\n}\n\nexport default DefaultLayout;\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\n\n  </div>\n);\n","import React from \"react\";\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\nimport { Store, Constants,Dispatcher } from '../../../../flux';\n\nexport default class Notifications extends React.Component {\n  state = {\n    connected: Store.isConnected()\n  }\n\n  componentWillMount = () => {\n    Store.on('update-ui',this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-ui',this.getData);\n  }\n\n  getData = () =>{\n    const connected = Store.isConnected();\n    this.setState({connected});\n  }\n\n  reconnect = () =>{\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT\n    })\n  }\n\n  render() {\n    const { connected } = this.state;\n    return (\n      <NavItem className=\"border-right dropdown notifications\" onClick={this.reconnect}>\n        <NavLink\n          className=\"nav-link-icon text-center\"\n          onClick={this.toggleNotifications}\n        >\n          <div className=\"nav-link-icon__wrapper\">\n            <i className=\"material-icons\">language</i>\n            {\n              connected ?\n                <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n                  <i className=\"material-icons\">done</i>\n                </Badge>\n                :\n                <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n                  <i className=\"material-icons\">close</i>\n                </Badge>\n            }\n\n          </div>\n        </NavLink>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nexport default () => (\n  <Nav navbar className=\"border-left flex-row\">\n    <Notifications />\n    {/* <UserActions /> */}\n  </Nav>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink\n} from \"shards-react\";\n\nexport default class UserActions extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false\n    };\n\n    this.toggleUserActions = this.toggleUserActions.bind(this);\n  }\n\n  toggleUserActions() {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  render() {\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <span className=\"d-none d-md-inline-block\">Public User</span>\n        </DropdownToggle>\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem tag={Link} to=\"user-profile\">\n            <i className=\"material-icons\">&#xE7FD;</i> Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"edit-user-profile\">\n            <i className=\"material-icons\">&#xE8B8;</i> Edit Profile\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"file-manager-list\">\n            <i className=\"material-icons\">&#xE2C7;</i> Files\n          </DropdownItem>\n          <DropdownItem tag={Link} to=\"transaction-history\">\n            <i className=\"material-icons\">&#xE896;</i> Transactions\n          </DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem tag={Link} to=\"/\" className=\"text-danger\">\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Container, Navbar, NavbarBrand } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const isHeaderNav = false;\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container fluid={!isHeaderNav || null} className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          {isHeaderNav && (\n            <NavbarBrand href=\"#\" style={{ lineHeight: \"25px\" }}>\n              <div className=\"d-table m-auto\">\n                <img\n                  id=\"main-logo\"\n                  className=\"d-inline-block align-top mr-1 ml-3\"\n                  style={{ maxWidth: \"25px\" }}\n                  src={require('../../../images/jina-light.svg')}\n                  alt=\"Jina.ai\"\n                />\n                <span className=\"d-none d-md-inline ml-1\">\n                  Dashboard\n                </span>\n              </div>\n            </NavbarBrand>\n          )}\n          <NavbarSpacer />\n          <NavbarNav />\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top\"\n                style={{ maxWidth: \"50px\" }}\n                src={require('../../../images/jina-light.svg')}\n                alt=\"Jina Dashboard\"\n              />\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse\n} from \"shards-react\";\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarNavItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n  }\n\n  toggleDropdown(item) {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR_DROPDOWN,\n      payload: item\n    });\n  }\n\n  render() {\n    const { item } = this.props;\n    const hasSubItems = item.items && item.items.length;\n\n    return (\n      <NavItem style={{ position: \"relative\" }}>\n        <NavLink\n          className={hasSubItems && \"dropdown-toggle\"}\n          tag={hasSubItems ? \"a\" : RouteNavLink}\n          to={hasSubItems ? \"#\" : item.to}\n          onClick={() => this.toggleDropdown(item)}\n        >\n          {item.htmlBefore && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n            />\n          )}\n          {item.title && <span>{item.title}</span>}\n          {item.htmlAfter && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n            />\n          )}\n        </NavLink>\n        {hasSubItems && (\n          <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n            {item.items.map((subItem, idx) => (\n              <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n                {subItem.title}\n              </DropdownItem>\n            ))}\n          </Collapse>\n        )}\n      </NavItem>\n    );\n  }\n}\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { Store } from \"../../../flux\";\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      navItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.on('update-ui', this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener('update-ui', this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        {items.map((nav, idx) => (\n          <div key={idx}>\n            <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n            {typeof nav.items !== \"undefined\" && nav.items.length && (\n              <Nav className=\"nav--no-borders flex-column\">\n                {nav.items.map((item, idx) => (\n                  <SidebarNavItem key={idx} item={item} />\n                ))}\n              </Nav>\n            )}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: false,\n      sidebarNavItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.on('update-ui',this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener('update-ui',this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        {/* <SidebarSearch /> */}\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\n\nconst MainFooter = ({ contained, menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <NavItem key={idx}>\n              <NavLink tag={Link} to={item.to}>\n                {item.title}\n              </NavLink>\n            </NavItem>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"#\"\n    },\n    {\n      title: \"Products\",\n      to: \"#\"\n    },\n    {\n      title: \"Learn\",\n      to: \"#\"\n    },\n    {\n      title: \"Community\",\n      to: \"#\"\n    },\n    {\n      title: \"Blog\",\n      to: \"#\"\n    },\n    {\n      title: \"Jobs\",\n      to: \"#\"\n    }\n  ]\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport { Container, Row, Col, Alert } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nimport PasteYAML from '../modals/PasteYAML';\n\nimport { Store } from '../flux';\n\nclass IconSidebarLayout extends React.Component {\n  state = {\n    banner: Store.getBanner(),\n    modal: Store.getModal(),\n    loading: Store.isLoading(),\n  }\n\n  componentWillMount = () => {\n    Store.on('update-ui', this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-ui', this.getData);\n  }\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    this.setState({ modal, loading, banner });\n  }\n\n  render = () => {\n    const { modal, loading, banner } = this.state;\n    const { noNavbar, children, noFooter } = this.props;\n    return (<Container fluid className=\"icon-sidebar-nav\">\n      <Row>\n        <MainSidebar hideLogoText />\n        <Col className=\"main-content col\" tag=\"main\">\n          {!noNavbar && <MainNavbar />}\n          {\n            banner &&\n            <Alert theme={banner.theme||'info'} className=\"mb-0 banner\">\n              {banner.message}\n          </Alert>\n          }\n          {children}\n          {!noFooter && <MainFooter />}\n        </Col>\n      </Row>\n      <PasteYAML open={modal==='import'}/>\n    </Container>)\n  }\n}\n\nIconSidebarLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nexport default PageTitle;\n","\nimport * as React from 'react'\nimport { REACT_FLOW_CHART } from '@mrblenny/react-flow-chart'\n\nclass SidebarItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n  render = () => {\n    const { label, type, ports, properties } = this.props;\n    return (\n      <div\n        ref={this.ref}\n        className=\"draggable-item\"\n        draggable={true}\n        onDragStart={(event) => {\n          event.dataTransfer.setData(REACT_FLOW_CHART, JSON.stringify({ label,type, ports, properties, }))\n        }}\n      >\n        {type}\n        \n      </div>\n    )\n  }\n}\n\nexport default SidebarItem;","import React from \"react\";\nimport SidebarItem from './SidebarItem';\nimport { Button, FormControl,Card} from 'react-bootstrap';\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  state = {\n    availableProperties: Store.getAvailableProperties(),\n    node: {},\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id)\n      return;\n\n    if (!id)\n      return;\n\n    if (type === 'node' && id != this.state.node.id) {\n      const node = nodes[id];\n      this.setInitialNode(node);\n    }\n  }\n\n  setInitialNode = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).map(key => {\n      properties[key] = node.properties[key];\n    });\n\n    this.setState({ node: { label, id: node.id, properties, newProperties } });\n  }\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    },this.saveChanges);\n  }\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    },this.saveChanges);\n  }\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    },this.saveChanges);\n  }\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  }\n\n  renderEditNode = () => {\n    const { availableProperties, node } = this.state;\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\"><b>Pod Name</b></p>\n          <FormControl spellCheck={false} value={node.label || \"\"} onChange={(e) => this.updateLabel(e.target.value)} className=\"pod-name-input\" />\n        </div>\n        <p className=\"mb-1 px-2\"><b>Properties</b></p>\n        <div className=\"property-table flex-fill mx-2\">\n          {\n            Object.keys(node.properties).map(prop => {\n              const value = node.properties[prop];\n              return (\n                <div key={prop} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{prop}</p>\n                  <FormControl spellCheck={false} value={value || \"\"} onChange={(e) => this.updateExistingValue(prop, e.target.value)} className=\"property-value-input\" />\n                </div>\n\n              )\n            })\n          }\n          {\n            availableProperties.map(property => {\n              if (typeof node.properties[property.name] == 'undefined')\n                return (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl spellCheck={false} placeholder={property.type} value={node.newProperties[property.name] || ''} onChange={(e) => this.updateNewValue(property.name, e.target.value)} className=\"property-value-input\"></FormControl>\n                  </div>\n                )\n            })\n          }\n        </div>\n        <div className=\"p-2\">\n          <Button variant=\"danger\" className=\"w-100\" onClick={this.props.deleteSelection}>Delete Pod</Button>\n        </div>\n      </div>\n    )\n  }\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId].label;\n    const nodeTo = nodes[link.to.nodeId].label;\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"flex-fill\">\n          <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\"><b>Type</b></p>\n            <h5>Connection</h5>\n            <p className=\"mb-1\"><b>From</b></p>\n            <h5>{nodeFrom}</h5>\n            <p className=\"mb-1\"><b>To</b></p>\n            <h5>{nodeTo}</h5>\n          </div>\n        </div>\n        <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={this.props.deleteSelection}>Delete Connection</Button>\n        </div>\n      </div>\n    )\n  }\n\n  renderInstructions = () => {\n    return (\n      <div className=\"sidebar-instructions text-muted\">\n        <h4>Select a pod to edit properties</h4>\n        <p>or</p>\n        <h4 className=\"mb-4\">Drag a new pod:</h4>\n        <SidebarItem\n          type=\"New Pod\"\n          ports={{\n            inPort: {\n              id: 'inPort',\n              type: 'input',\n            },\n            outPort: {\n              id: 'outPort',\n              type: 'output',\n            },\n          }}\n          label=\"tests\"\n          properties={{}}\n        />\n\n      </div>\n    )\n  }\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {\n          hasSelected ?\n            selected.type === 'link' ?\n              this.renderEditLink(links[selected.id], nodes)\n              :\n              this.renderEditNode(nodes[selected.id])\n            :\n            this.renderInstructions()\n        }\n      </Card>\n    )\n  }\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\nimport {Badge} from \"react-bootstrap\";\n\nclass ChartNode extends React.Component {\n  getPropertiesString = () =>{\n    const properties = this.props.node.properties || {};\n    let str = ''\n    Object.keys(properties).map(propId=>{\n      str = str.concat(`pod-${propId}-${properties[propId]} `);\n    })\n    return str;\n  }\n  render = () => {\n    const {label,type,properties} = this.props.node;\n    const propSTR = this.getPropertiesString();\n    return (\n      <div className={`chart-node ${propSTR}`}>\n        <p className=\"m-1\"><b>{label||<span className=\"text-warning\">Unnamed Pod</span>}</b><Badge variant=\"primary\" className=\"ml-2 mt-1\">{properties.replicas}</Badge></p>\n      </div>\n    )\n  }\n}\n\nexport default ChartNode;\n","import React from \"react\";\nimport {Badge} from \"react-bootstrap\";\n\nclass ChartNode extends React.Component {\n  render = () => {\n    return (\n      <div className=\"node-port\">\n        <i className=\"fa fa-chevron-down\"></i>\n      </div>\n    )\n  }\n}\n\nexport default ChartNode;\n","import React from \"react\";\nimport { cloneDeep } from 'lodash';\nimport { FlowChart } from '@mrblenny/react-flow-chart';\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, ButtonGroup, Button, Card, Col, NavLink } from 'shards-react';\nimport { Dispatcher, Constants, Store } from '../flux';\nimport PageTitle from '../components/Common/PageTitle';\n\nimport Sidebar from '../components/FlowChart/Sidebar';\nimport CustomNode from '../components/FlowChart/ChartNode';\nimport CustomPort from '../components/FlowChart/NodePort';\nimport { formatAsYAML, copyToClipboard } from '../helpers';\n\nclass FlowTab extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart()\n    this.state = { chart }\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n  }\n\n  componentWillMount = () => {\n    Store.on('update-flowchart', this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-flowchart', this.getData);\n  }\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  }\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    console.log('newChart: ', newChart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties\n    }\n\n    Object.keys(props).map(id => {\n      if (props[id] == \"\" || typeof props[id] == 'undefined') {\n        delete props[id]\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  }\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({})\n  }\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  }\n\n  updateChart = (chart) => {\n    this.setState({ chart })\n  }\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId\n    })\n  }\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert('Chart copied to clipboard as YAML')\n  }\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId, chart }) => {\n    if (fromPortId != 'outPort' || toPortId != 'inPort')\n      return false;\n    if (fromNodeId == toNodeId)\n      return false;\n    return true;\n  }\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: 'import' }\n    })\n  }\n\n\n  render = () => {\n    const { chart } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-4 flowchart-page\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle title=\"Flow Design\" subtitle=\"Local Network\" className=\"text-sm-left mb-3\" />\n          <Col className=\"col d-flex align-items-right\">\n            <div className=\"d-none d-md-block flex-fill\"/>\n            <ButtonGroup className=\"d-inline-flex mb-3 mb-sm-0 mx-auto py-0\">\n              <Button theme=\"white\" to=\"/analytics\" onClick={this.showImportModal}>Import YAML</Button>\n              <Button theme=\"white\" to=\"/ecommerce\" onClick={this.copyChartAsYAML}>Copy YAML</Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n        <div className=\"flow-container d-flex flex-column flex-md-row\">\n          <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n            <div className=\"chart-container\">\n              <FlowChart\n                chart={chart}\n                Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                callbacks={this.stateActionCallbacks}\n                config={{\n                  validateLink: this.validateLink\n                }} />\n            </div>\n          </Card>\n          <Sidebar chart={chart} cancelChanges={this.cancelChanges} deleteSelection={this.deleteSelection} updateNode={this.updateNode} />\n        </div >\n      </Container>\n    )\n  }\n}\n\nexport default FlowTab;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nclass LogItem extends React.Component {\n\trender = () => {\n\t\tconst { data } = this.props;\n\t\tconst { name, msg, levelname, process, formattedTimestamp, idx } = data;\n\t\tlet logName = String(name)\n\t\tlogName = logName.length > 20 ? logName.substring(0, 20) : logName;\n\t\tlet levelInitial = String(levelname)[0];\n\t\treturn (\n\t\t\t<div className={`log log-${String(levelname).toLowerCase()} px-4 border-bottom py-1`}>\n\t\t\t\t<Row >\n\t\t\t\t\t<Col lg=\"2\" md=\"3\" className=\"log-prefix text-muted px-0 d-flex flex-row\">\n\t\t\t\t\t\t<div className=\"text-bold mr-2\">{idx}</div>\n\t\t\t\t\t\t<div className=\"ml-auto\">{formattedTimestamp}</div>\n\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg=\"3\" md=\"3\" className=\"log-prefix px-0 text-left text-md-right text-bold\">\n\t\t\t\t\t\t{logName}@{process}[{levelInitial}]:\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"px-0\">\n\t\t\t\t\t\t{msg}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LogItem;\n","import React from \"react\";\nimport { Card, FormControl, Row, Col } from 'react-bootstrap';\nimport LogItem from './LogItem';\nimport lunr from 'lunr';\nimport { Store } from '../../flux';\n\nimport List from 'react-virtualized/dist/commonjs/List';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport CellMeasurer, {\n\tCellMeasurerCache,\n} from 'react-virtualized/dist/commonjs/CellMeasurer';\n\nclass StreamContainer extends React.Component {\n\t_cache = new CellMeasurerCache({ defaultHeight: 10, fixedWidth: true });\n\t_resultsCache = new CellMeasurerCache({ defaultHeight: 10, fixedWidth: true });\n\n\t_mostRecentWidth = 0;\n\t_mostRecentHeight = 0;\n\t_resizeAllFlag = false;\n\t_startIndex = 0;\n\t_scrollIndex = 0;\n\t_scrollTop = 0;\n\t_scrolledToBottom = true;\n\n\tstate = {\n\t\tlogData: Store.getLogs(),\n\t\tlogs: Store.getLogs().all,\n\t\tsources: Store.getLogSources(),\n\t\tsearchQuery: \"\",\n\t\tprevQuery: \"\",\n\t\tsearchResults: false,\n\t\tshowHelper: false,\n\t\tselectedSource: 'all',\n\t}\n\n\tcomponentWillMount = () => {\n\t\tStore.on('update-logs', this.getData);\n\t\tStore.on('show-log', this.getIndexedLog);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-logs', this.getData);\n\t\tStore.removeListener('show-log', this.getIndexedLog);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tsetTimeout(() => {\n\t\t\tif (this._list)\n\t\t\t\tthis._resizeAll();\n\t\t\tthis.scrollToBottom()\n\t\t}, 1)\n\n\t}\n\n\tgetData = () => {\n\t\tconst logData = Store.getLogs();\n\t\tconst sources = Store.getLogSources();\n\t\tconst logs = logData[this.state.selectedSource];\n\t\tthis.setState({ logs, sources, logData });\n\t\tif (this._scrolledToBottom && this._list)\n\t\t\tthis.scrollToBottom();\n\t}\n\n\tgetIndexedLog = () => {\n\t\tconst index = Store.getIndexedLog();\n\t\tconst selectedSource = 'all';\n\t\tconst logs = this.state.logData[selectedSource];\n\t\tthis.setState({ selectedSource,logs });\n\t\tconsole.log('scrolling to index: ', index);\n\t\tthis.scrollToLog(index);\n\t}\n\n\tsetSelectedSource = (selectedSource) => {\n\t\tconst { logData } = this.state;\n\t\tconst logs = logData[selectedSource];\n\t\tthis.setState({ logs, selectedSource }, () => {\n\t\t\tthis._resizeAll();\n\t\t\tthis.scrollToBottom();\n\t\t})\n\t}\n\n\tsearch = () => {\n\t\tconst query = this.state.searchQuery;\n\t\tconsole.log('search query: ', query)\n\t\tthis.indexLogs();\n\t\tlet results = this.index.search(`${query}*`)\n\t\tthis.setState({ results }, this._resizeSearchResults);\n\t\tconsole.log('search results: ', results)\n\t}\n\n\tlistenForEnter = (key) => {\n\t\tif (key.charCode == 13) {\n\t\t\tthis.search()\n\t\t}\n\t}\n\n\tindexLogs = () => {\n\t\tconst { logs } = this.state;\n\t\tconsole.log('indexing', logs.length, 'logs for search')\n\t\tthis.index = lunr(function () {\n\t\t\tthis.field('filename');\n\t\t\tthis.field('funcName');\n\t\t\tthis.field('msg');\n\t\t\tthis.field('name');\n\t\t\tthis.field('module');\n\t\t\tthis.field('pathname');\n\n\t\t\tlogs.map((log, idx) => {\n\t\t\t\tlog.id = parseInt(idx);\n\t\t\t\tthis.add(log);\n\t\t\t});\n\t\t})\n\t}\n\n\tscrollToLog = (index) => {\n\t\tthis._list.scrollToRow(index);\n\t}\n\n\tscrollToBottom = () => {\n\t\tthis._list.scrollToRow(this.state.logs.length);\n\t\tthis._scrolledToBottom = true;\n\t}\n\n\tbackToBottom = () => {\n\t\tthis.scrollToBottom();\n\t\tsetTimeout(this.scrollToBottom, 1);\n\t}\n\n\tupdateSearchQuery = (e) => {\n\t\tthis.setState({ searchQuery: e.target.value }, this.search);\n\t}\n\n\tclearSearchResults = () => {\n\t\tthis.setState({\n\t\t\tsearchResults: false,\n\t\t\tsearchQuery: \"\"\n\t\t})\n\t}\n\n\trenderSearchResults = () => {\n\t\tconst { results } = this.state;\n\t\treturn (\n\t\t\t<AutoSizer>\n\t\t\t\t{({ height, width }) => {\n\t\t\t\t\tif (this._mostRecentWidth !== width) {\n\t\t\t\t\t\tthis._mostRecentWidth = width;\n\t\t\t\t\t\tsetTimeout(this._resizeSearchResults, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._mostRecentHeight !== height) {\n\t\t\t\t\t\tthis._mostRecentHeight = height;\n\t\t\t\t\t\tsetTimeout(this._resizeSearchResults, 0);\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<List\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\tref={ref => this._resultsList = ref}\n\t\t\t\t\t\t\tdeferredMeasurementCache={this._resultsCache}\n\t\t\t\t\t\t\trowHeight={this._resultsCache.rowHeight}\n\t\t\t\t\t\t\trowCount={results.length}\n\t\t\t\t\t\t\trowRenderer={this.renderSearchResultRow}\n\t\t\t\t\t\t/>)\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t</AutoSizer>\n\t\t)\n\t}\n\n\trenderLogRow = ({ index, isScrolling, key, parent, style }) => {\n\t\tconst log = this.state.logs[index];\n\t\treturn (\n\t\t\t<CellMeasurer\n\t\t\t\tcache={this._cache}\n\t\t\t\tcolumnIndex={0}\n\t\t\t\tkey={key}\n\t\t\t\tparent={parent}\n\t\t\t\trowIndex={index}\n\t\t\t>\n\t\t\t\t<div style={{\n\t\t\t\t\t...style,\n\t\t\t\t\twordBreak: 'break-word',\n\t\t\t\t}}>\n\t\t\t\t\t<LogItem index={index} data={log} />\n\t\t\t\t</div>\n\t\t\t</CellMeasurer>\n\t\t)\n\t};\n\n\trenderSearchResultRow = ({ index, isScrolling, key, parent, style }) => {\n\t\tconst result = this.state.results[index];\n\t\tconst log = this.state.logs[result.ref];\n\t\treturn (\n\t\t\t<CellMeasurer\n\t\t\t\tcache={this._resultsCache}\n\t\t\t\tcolumnIndex={0}\n\t\t\t\tkey={key}\n\t\t\t\tparent={parent}\n\t\t\t\trowIndex={index}\n\t\t\t>\n\t\t\t\t<div style={{\n\t\t\t\t\t...style,\n\t\t\t\t\twordBreak: 'break-word',\n\t\t\t\t}}>\n\t\t\t\t\t<LogItem data={log} />\n\t\t\t\t</div>\n\t\t\t</CellMeasurer>\n\t\t)\n\t};\n\n\trender = () => {\n\t\tconst { results, searchQuery, logs, showHelper, sources } = this.state;\n\t\treturn (\n\t\t\t<Card className=\"mb-4\">\n\t\t\t\t<Card.Header className=\"p-3\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"4\" xs=\"6\">\n\t\t\t\t\t\t\t<FormControl as=\"select\" onChange={(e) => this.setSelectedSource(e.target.value)}>\n\t\t\t\t\t\t\t\t<option value=\"all\">All Logs</option>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tObject.keys(sources).map(source =>\n\t\t\t\t\t\t\t\t\t\t<option value={source}>{source}</option>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"4\" className=\"d-none d-md-inline-block\" />\n\t\t\t\t\t\t<Col md=\"4\" xs=\"6\">\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tplaceholder=\"search logs...\"\n\t\t\t\t\t\t\t\tonKeyPress={this.listenForEnter}\n\t\t\t\t\t\t\t\tonChange={this.updateSearchQuery}\n\t\t\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body className=\"log-stream-container p-1 border-top\" id=\"log-stream-container\">\n\t\t\t\t\t{\n\t\t\t\t\t\tsearchQuery && results ?\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div onClick={this.backToBottom} className={`back-to-bottom ${showHelper && 'active'}`}><i className=\"material-icons\">arrow_downward</i> Back to Bottom</div>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tsearchQuery && results ?\n\t\t\t\t\t\t\tthis.renderSearchResults()\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ height, width }) => {\n\t\t\t\t\t\t\t\t\tif (this._mostRecentWidth !== width) {\n\t\t\t\t\t\t\t\t\t\tthis._mostRecentWidth = width;\n\t\t\t\t\t\t\t\t\t\tsetTimeout(this._resizeAll, 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (this._mostRecentHeight !== height) {\n\t\t\t\t\t\t\t\t\t\tthis._mostRecentHeight = height;\n\t\t\t\t\t\t\t\t\t\tsetTimeout(this.scrollToBottom, 0);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\t\tref={ref => this._list = ref}\n\t\t\t\t\t\t\t\t\t\t\tdeferredMeasurementCache={this._cache}\n\t\t\t\t\t\t\t\t\t\t\trowHeight={this._cache.rowHeight}\n\t\t\t\t\t\t\t\t\t\t\trowCount={logs.length}\n\t\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderLogRow}\n\t\t\t\t\t\t\t\t\t\t\tonScroll={this._onScroll}\n\t\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"center\"\n\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t}\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t)\n\t}\n\n\t_onRowsRendered = (data, cb) => {\n\t\tconst { startIndex } = data;\n\t\tthis._startIndex = startIndex;\n\t}\n\n\t_onScroll = (data) => {\n\t\tconst { scrollTop, scrollHeight, clientHeight } = data;\n\t\tthis._scrollTop = scrollTop;\n\t\tlet difference = scrollHeight - (scrollTop + clientHeight);\n\n\t\tif (difference === 0)\n\t\t\tthis._scrolledToBottom = true;\n\t\telse {\n\t\t\tthis._scrolledToBottom = false;\n\t\t}\n\n\t\tif (difference > 75 && !this.state.showHelper)\n\t\t\tthis.setState({ showHelper: true })\n\t\telse if (difference <= 75 && this.state.showHelper)\n\t\t\tthis.setState({ showHelper: false });\n\t}\n\n\t_resizeAll = () => {\n\t\tthis._resizeAllFlag = false;\n\t\tthis._cache.clearAll();\n\t\tif (this._list) {\n\t\t\tthis._list.recomputeRowHeights();\n\t\t}\n\t};\n\n\t_resizeSearchResults = () => {\n\t\tthis._resizeAllFlag = false;\n\t\tthis._resultsCache.clearAll();\n\t\tif (this._resultsList) {\n\t\t\tthis._resultsList.recomputeRowHeights();\n\t\t}\n\t};\n}\n\nexport default StreamContainer;\n","import React from \"react\";\nimport ChartElement from 'chart.js';\n\nconst _colors = {\n  INFO: {\n    border: '#007bff',\n    background: 'rgba(0, 123, 255, 0.15)'\n  },\n  SUCCESS: {\n    border: '#4caf50',\n    background: 'rgba(76, 175, 79, 0.15)'\n  },\n  ERROR: {\n    border: '#fb8c00',\n    background: 'rgba(251, 138, 0, 0.25)'\n  },\n  CRITICAL: {\n    border: '#f44336',\n    background: 'rgba(244, 67, 54, 0.25)'\n  },\n  DEBUG: {\n    border: '#9c27b0',\n    background: 'rgba(155, 39, 176, 0.25)'\n  }\n}\n\nclass Chart extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  }\n\n  renderChart = () => {\n    const { data } = this.props;\n    const chartOptions = {\n      events: ['click'],\n      onClick:this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n\t\t\t\tposition: \"bottom\",\n\t\t\t\tlabels: {\n\t\t\t\t\tpadding: 10,\n\t\t\t\t\tboxWidth: 20\n\t\t\t\t}\n\t\t\t},\n      tooltips: {\n        enabled: false,\n        custom: false\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius:10,\n        }\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: false,\n            color: 'red',\n            ticks: {\n              display: false,\n            }\n          }\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              borderDash: [2.5, 5],\n              // zeroLineBorderDash: [5,5],\n              zeroLineColor: '#6c757d',\n              drawBorder: false,\n              color: '#6c757d'\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n            }\n          }\n        ]\n      }\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: Object.keys(data).map(level => {\n          const chartData = data[level];\n          return {\n            label: level,\n            fill: \"start\",\n            borderWidth: 1.5,\n            borderColor: _colors[level].border,\n            backgroundColor: _colors[level].background,\n            data: chartData\n          }\n        })\n      },\n      options: chartOptions,\n      ...this.props.chartConfig\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  }\n\n  onClick = (e) =>{\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  }\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  }\n\n  updateChart = () => {\n    const { data } = this.props;\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: Object.keys(data).map(level => {\n        const chartData = data[level];\n        return {\n          label: level,\n          fill: \"start\",\n          borderWidth: 1.5,\n          borderColor: _colors[level].border,\n          backgroundColor: _colors[level].background,\n          data: chartData\n        }\n      })\n    }\n    this.chart.data = chartData;\n    this.chart.options.animation = false\n    this.chart.update();\n  }\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chart;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from './ChartBase';\n\nclass SummaryChart extends React.Component {\n\tstate = {\n\t\tchartData: Store.getSummaryCharts(),\n\t}\n\tcomponentWillMount = () => {\n\t\tStore.on('update-summary-chart', this.getData);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-summary-chart', this.getData);\n\t}\n\n\tshowLog = (activePoints) => {\n\t\tlet index = activePoints[0] && activePoints[0]._index;\n\t\tif (index && typeof index !== 'undefined');\n\t\tDispatcher.dispatch({\n\t\t\tactionType: Constants.SHOW_LOG_AT_INDEX,\n\t\t\tpayload: index\n\t\t})\n\t}\n\n\tgetData = () => {\n\t\tconst chartData = Store.getSummaryCharts();\n\t\tthis.setState({ chartData });\n\t}\n\n\trender = () => {\n\t\tconst { chartData } = this.state;\n\t\treturn (\n\t\t\t<Card className=\"h-100\">\n\t\t\t\t<Card.Body className=\"d-none d-md-block pb-2\">\n\t\t\t\t\t<ChartBase data={chartData} height={10} width={70} onClick={this.showLog} />\n\t\t\t\t</Card.Body>\n\t\t\t\t<Card.Body className=\"d-md-none pb-2\">\n\t\t\t\t\t<ChartBase data={chartData} height={20} width={50} onClick={this.showLog} />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default SummaryChart;\n","import React from \"react\";\nimport ChartElement from 'chart.js';\n\nconst _colors = {\n\tINFO: {\n\t\tborder: '#007bff',\n\t\tbackground: 'rgba(0, 123, 255, 0.15)'\n\t},\n\tSUCCESS: {\n\t\tborder: '#4caf50',\n\t\tbackground: 'rgba(76, 175, 79, 0.15)'\n\t},\n\tERROR: {\n\t\tborder: '#fb8c00',\n\t\tbackground: 'rgba(251, 138, 0, 0.25)'\n\t},\n\tCRITICAL: {\n\t\tborder: '#f44336',\n\t\tbackground: 'rgba(244, 67, 54, 0.25)'\n\t},\n\tDEBUG: {\n\t\tborder: '#9c27b0',\n\t\tbackground: 'rgba(155, 39, 176, 0.25)'\n\t}\n}\n\nconst _logLevels = ['INFO', 'ERROR', 'CRITICAL', 'DEBUG','SUCCESS',];\n\nclass Chart extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.canvasRef = React.createRef();\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.renderChart();\n\t}\n\n\trenderChart = () => {\n\t\tconst { data } = this.props;\n\t\tconst chartOptions = {\n\t\t\tlegend: {\n\t\t\t\tdisplay: false,\n\t\t\t\tposition: \"bottom\",\n\t\t\t\tlabels: {\n\t\t\t\t\tpadding: 25,\n\t\t\t\t\tboxWidth: 20\n\t\t\t\t}\n\t\t\t},\n\t\t\ttooltips: {\n\t\t\t\tcustom: false,\n\t\t\t\tmode: \"index\",\n\t\t\t\tposition: \"nearest\"\n\t\t\t},\n\t\t};\n\n\t\tconst chartConfig = {\n\t\t\ttype: \"pie\",\n\t\t\tlabels: _logLevels,\n\t\t\tdata: {\n\t\t\t\tdatasets: [{\n\t\t\t\t\tborderWidth: 1.5,\n\t\t\t\t\tdata: _logLevels.map(level => data[level]),\n\t\t\t\t\tborderColor: _logLevels.map(level => _colors[level].border),\n\t\t\t\t\tbackgroundColor: _logLevels.map(level => _colors[level].background),\n\t\t\t\t}]\n\t\t\t},\n\t\t\toptions: chartOptions,\n\t\t\t...this.props.chartConfig\n\t\t};\n\n\t\tthis.chart = new ChartElement(this.canvasRef.current, chartConfig);\n\t}\n\n\tupdateChart = () => {\n\t\tconst { data } = this.props;\n\t\tconst chartData = {\n\t\t\tlabels: _logLevels,\n\t\t\tdatasets: [{\n\t\t\t\tborderWidth: 1.5,\n\t\t\t\tdata: _logLevels.map(level => data[level]),\n\t\t\t\tborderColor: _logLevels.map(level => _colors[level].border),\n\t\t\t\tbackgroundColor: _logLevels.map(level => _colors[level].background),\n\t\t\t}]\n\t\t}\n\t\tthis.chart.data = chartData;\n\t\tthis.chart.options.animation = false\n\t\tthis.chart.update();\n\t}\n\n\trender = () => {\n\t\tif (this.canvasRef.current && this.chart) this.updateChart();\n\t\tconst { width, height } = this.props;\n\t\treturn (\n\t\t\t<div className=\"graph-container\">\n\t\t\t\t<canvas\n\t\t\t\t\theight={height || 50}\n\t\t\t\t\twidth={width || 50}\n\t\t\t\t\tref={this.canvasRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Chart;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from './PieChart';\n\nclass OccurenceChart extends React.Component {\n\tstate = {\n\t\tchartData: Store.getTotalOccurences(),\n\t}\n\tcomponentWillMount = () => {\n\t\tStore.on('update-summary-chart', this.getData);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-summary-chart', this.getData);\n\t}\n\n\tgetData = () => {\n\t\tconst chartData = Store.getTotalOccurences();\n\t\tthis.setState({ chartData });\n\t}\n\n\trender = () => {\n\t\tconst { chartData } = this.state;\n\t\tconsole.log('chartData:',chartData)\n\t\treturn (\n\t\t\t<Card className=\"h-100\">\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<ChartBase data={chartData} />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default OccurenceChart;\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Dispatcher, Constants, Store } from '../flux';\nimport LogStream from '../components/LogStream/LogStream';\nimport SummaryChart from '../components/LogStream/SummaryChart';\nimport PageTitle from '../components/Common/PageTitle';\nimport OccurenceChart from \"../components/LogStream/OccurenceChart\";\n\nclass LogsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle title=\"Log Stream\" subtitle=\"Local Network\" className=\"text-sm-left mb-3\" />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\"><SummaryChart /></Col>\n          <Col md=\"2\" className=\"mb-4\"><OccurenceChart /></Col>\n        </Row>\n        <LogStream />\n      </Container>\n    )\n  }\n}\n\nexport default LogsView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n\tCard,\n\tCardHeader,\n\tCardBody,\n\tRow,\n\tCol,\n\tForm,\n\tFormInput,\n\tButton\n} from \"shards-react\";\n\nimport { Store, Dispatcher, Constants } from '../../flux';\n\nclass SettingsCard extends React.Component {\n\tstate = {\n\t\toriginal: Store.getSettings(),\n\t\tupdates: {}\n\t}\n\n\tcomponentWillMount = () => {\n\t\tStore.on('update-settings', this.getData);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-settings', this.getData);\n\t}\n\n\tgetData = () => {\n\t\tconst original = Store.getSettings();\n\t\tthis.setState({ original, updates: {} });\n\t}\n\n\tupdateSetting = (setting, value) => {\n\t\tthis.setState((prevState) => {\n\t\t\tlet { updates } = prevState;\n\t\t\tupdates[setting] = value;\n\t\t\treturn { updates }\n\t\t})\n\t\tconsole.log('updates: ', this.state.updates)\n\t}\n\n\tsaveChanges = () => {\n\t\tconst { original, updates } = this.state;\n\n\t\tconst settings = { ...original, ...updates }\n\n\t\tDispatcher.dispatch({\n\t\t\tactionType: Constants.SAVE_SETTINGS,\n\t\t\tpayload: settings\n\t\t})\n\t}\n\n\trender = () => {\n\t\tconst { original, updates } = this.state;\n\t\treturn (<Card small className=\"mb-4\">\n\t\t\t<CardHeader className=\"border-bottom\">\n\t\t\t\t<h6 className=\"m-0\">Connection Preferences</h6>\n\t\t\t</CardHeader>\n\t\t\t<CardBody>\n\t\t\t\t<Form>\n\t\t\t\t\t<Row form>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Host</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"0.0.0.0\"\n\t\t\t\t\t\t\t\tvalue={'host' in updates ? updates.host : original.host}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('host', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Port</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"5000\"\n\t\t\t\t\t\t\t\tvalue={'port' in updates ? updates.port : original.port}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('port', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<strong class=\"text-muted d-block mb-3\">Endpoints</strong>\n\t\t\t\t\t<Row form>\n\t\t\t\t\t\t{/* Email */}\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Log</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/stream/log\"\n\t\t\t\t\t\t\t\tvalue={'log' in updates ? updates.log : original.log}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('log', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t{/* Password */}\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Profile</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/stream/profile\"\n\t\t\t\t\t\t\t\tvalue={'profile' in updates ? updates.profile : original.profile}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('profile', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>YAML</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/data/yaml\"\n\t\t\t\t\t\t\t\tvalue={'yaml' in updates ? updates.yaml : original.yaml}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('yaml', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Shutdown</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/action/shutdown\"\n\t\t\t\t\t\t\t\tvalue={'shutdown' in updates ? updates.shutdown : original.shutdown}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('shutdown', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Ready</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/status/isready\"\n\t\t\t\t\t\t\t\tvalue={'ready' in updates ? updates.ready : original.ready}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('ready', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Form>\n\t\t\t\t<Button theme=\"primary\" onClick={this.saveChanges}>Save Settings</Button>\n\t\t\t</CardBody>\n\t\t</Card>)\n\t}\n}\n\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Button } from \"shards-react\";\n\nconst Errors = () => (\n  <Container fluid className=\"main-content-container px-4 pb-4\">\n    <div className=\"error\">\n      <div className=\"error__content\">\n        <h2>404</h2>\n        <h3>This page does not exist yet!</h3>\n        <p>Try turning your clock forward.</p>\n        <Button pill>&larr; Go Back</Button>\n      </div>\n    </div>\n  </Container>\n);\n\nexport default Errors;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DashboardLayout,IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport LogsView from \"./views/LogsView\";\nimport Settings from \"./views/Settings\";\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DashboardLayout,\n    component: () => <Redirect to=\"/logs\" />\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: NotFound\n  },\n];\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Dispatcher, Constants, Store } from '../flux';\nimport PageTitle from '../components/Common/PageTitle';\nimport SettingsCard from '../components/Settings/Settings';\n\nclass LogsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle title=\"Settings\" subtitle=\"Local Network\" className=\"text-sm-left mb-3\" />\n        </Row>\n\t\t\t\t<SettingsCard/>\n      </Container>\n    )\n  }\n}\n\nexport default LogsView;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-2\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = page => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nexport default () => (\n  <Router basename={\"/\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker(props => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS:\"SAVE_SETTINGS\",\n  RECONNECT:\"RECONNECT\"\n}"],"sourceRoot":""}