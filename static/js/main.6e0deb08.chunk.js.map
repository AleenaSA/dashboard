{"version":3,"sources":["data/exampleFlows.js","flux/constants.js","settings.js","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/Notifications.js","components/Layout/MainNavbar/UserActions.js","flux/dispatcher.js","helpers.js","logger.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","flux/tranformLog.ts","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Default.jsx","components/Common/CookiesBanner.jsx","components/Common/InfoBanner.jsx","components/Common/ConnectionBanner.jsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","modals/LogDetails.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/NodePort.jsx","components/FlowChart/FlowSelection.jsx","views/FlowView.jsx","components/LogStream/ChartBase.jsx","components/LogStream/LogLevelSummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/LogLevelPieChart.jsx","components/Common/MultiFilterSelect.tsx","components/LogStream/useFilters.ts","components/LogStream/LogItem.tsx","hooks/useTimeoutFn.ts","components/LogStream/LogsTable.tsx","components/LogStream/usePrevious.ts","hooks/useDebounce.ts","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/options.js","components/Settings/FormItem.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","views/PackageView.jsx","views/LogIn.jsx","withTracker.js","FallbackPage.tsx","App.js","theme.ts","index.js","flux/config.js"],"names":["module","exports","pokedex","name","type","yaml","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_FLOW","SHOW_POD_IN_FLOW","CREATE_NEW_FLOW","UPDATE_FLOW","DUPLICATE_FLOW","DELETE_FLOW","nodeOffset","x","y","NavbarSpacer","className","NavbarToggle","toggleSidebar","onClick","Notifications","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","Dispatcher","YAML","require","settings","propertyList","toBlob","content","Blob","serializeLogsToJSONBlob","logs","fileContent","reduce","acc","log","i","JSON","stringify","length","serializeLogsToJSON","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","parents","Array","isArray","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","prop","formatAsYAML","chart","console","chartWith","with","needsByPodLabel","values","curr","nodeLabelsByPortId","getNodeLabelsByPortId","outPort","neededBy","inPort","push","arr","podProperties","entries","key","propValue","propName","decodePropValue","output","board","formatBytes","numBytes","parseFloat","toFixed","handleErrorMessage","msg","url","line","logger","logStream","taskStream","_store","window","logsEnabled","args","arguments","isEnabled","enable","_navigator","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","filename","Date","blob","saveAs","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","startsWith","close","EventSource","onopen","onmessage","m","onerror","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","searchHub","category","q","sort","CHART_LEVELS","getExampleFlows","flows","exampleFlows","flow","parsed","e","getUserFlows","userFlows","localStorage","getItem","_","isEmpty","_userFlow","getInitialLevelOccurences","occurences","lastLog","levels","level","location","hostname","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadFlow","showPodByLabel","createNewFlow","updateFlow","deleteFlow","init","clearIntervals","shutdown","ready","images","banner","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","selectedFlow","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","taskData","qps","current","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","messages","bytes","selectedNode","modalParams","currentTab","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","updateChartInterval","clearInterval","updateTaskInterval","api","connectedFlow","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","setInterval","status","message","created","createdDate","fromUnixTime","nanoid","transformLog","unixTime","timestamp","formattedTimestamp","toLocaleString","idx","process","levelname","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","map","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","updateSummaryCharts","flowchart","hash","customYAML","flowId","newFlow","saveFlowsToStorage","flowNumbers","filter","f","substring","largestNumber","omit","nonExampleFlows","toSave","setItem","setTimeout","String","includes","showError","image","reload","bannerTimeout","clearTimeout","hideBanner","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getLogLevelCharts","emptyItem","chartData","now","getLogLevelOccurences","getTaskData","getActivePanel","path","getConnectionStatus","isLoading","getFlowchart","getFlows","getSelectedFlowId","getAvailableProperties","getIndexedLog","getStoreCopy","cloneDeep","register","peakLogs","peakStore","this","EventEmitter","MainNavbar","componentWillUnmount","Store","removeListener","getData","setState","dispatch","state","render","fluid","navbar","on","React","Component","href","style","lineHeight","maxWidth","item","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","top","subItem","nav","SidebarNavItem","MainSidebar","props","onChange","getMenuState","sidebarNavItems","getSidebarItems","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","DashboardLayout","children","noNavbar","noFooter","sm","CookiesBanner","show","acceptCookies","Button","InfoBanner","ConnectionBanner","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","inputRef","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","as","rows","submitReview","hiddenKeys","xs","IconSidebarLayout","acceptedCookies","yamlString","storeCopy","hideLogoText","LogDetails","PasteYAML","WriteReview","PageTitle","subtitle","attrs","ChartNode","ButtonGroup","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","FlowChartSidebar","getInitialNodeState","newProperties","componentWillReceiveProps","nextProps","searchResults","searchQuery","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","updateSearchQuery","searchProperties","query","indexProperties","search","availableProperties","lunr","field","add","renderEditNode","FormControl","spellCheck","property","deleteSelection","renderEditLink","nodeTo","choices","updateLink","choice","renderPodMenu","defaultPods","renderReadOnly","duplicateFlow","readonly","hasSelected","Card","NodePort","data-html2canvas-ignore","SelectionIndicator","ConnectionIndicator","TitleConnectionIndicator","DeleteFlowButton","EditFlowsButton","isEditing","FlowSelection","selectedFlowId","useState","setIsEditing","currentFlow","Toggle","Menu","Item","Header","currentIsEditing","itemId","selectedId","syncEvents","FlowView","componentDidMount","querySelector","preventDefault","extension","classList","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","flowType","callback","newChart","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","syncFlow","selectNode","copyChartAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","stopPropagation","display","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","action","newChartTransformer","_levels","INFO","borderColor","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","ChartBase","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","ticks","maxRotation","getXAxisLabel","yAxes","scaleLabel","labelString","gridLines","borderDash","zeroLineColor","drawBorder","suggestedMin","autoSkip","maxTicksLimit","Number","isInteger","chartConfig","getLabels","datasets","getParsedDatasets","options","ChartElement","canvasRef","updateChart","animation","update","activePoints","getElementsAtEvent","amount","levelData","tick","borderWidth","height","createRef","LogLevelSummaryChart","showLog","_index","Body","_colors","background","PieChart","getColor","names","mode","LogLevelPieChart","customStyles","container","provided","selectProps","MultiFilterSelect","onFilterChange","rest","val","isMulti","styles","LogItem","memo","columns","showLogDetails","logData","logName","levelInitial","firstCol","secondCol","thirdCol","toLowerCase","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","useTimeoutFn","fn","ms","useRef","isReady","useCallback","set","clear","useEffect","miniSearchOptions","fields","generateFormatFileName","itemKey","toOption","arrayLike","LogsTable","scrolledToBottom","setScrolledToBottom","windowListRef","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","searchString","setSearchString","useMiniSearch","addAllAsync","buffer","previousLength","usePrevious","newLog","resultData","filters","sources","Set","scrollToItem","deps","cancel","reset","useDebounce","DropdownButton","lineno","funcname","pathname","serializeLogsToCSV","serializeLogsToText","onScroll","scrollOffset","itemCount","itemSize","itemData","ElapsedCard","ProgressCard","percent","newData","hoverBorderColor","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","difference","suggestedMax","tension","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","Container","QueriesPerSecond","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","original","setOriginal","updates","setUpdates","expanded","setExpanded","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","StarRating","rating","userRated","rate","round","getStars","integer","remainder","j","ImageCard","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","HubView","sortBy","sortType","setCategory","updateSearch","BuildHistory","buildHistory","build","formattedCreated","buildSize","os","architecture","ImageDetails","version","documentation","source","license","vendor","ReadMe","readme","CopyCommand","copyCode","imageVar","repoTags","code","language","atomOneLight","ReviewCard","review","ImageReviews","newReview","HelpCard","icon","NotFound","exact","layout","DefaultLayout","component","IconSidebar","setLogs","newLogs","getImageData","imageData","readmeHTML","windowHash","windowParams","URLSearchParams","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","FallbackPage","resetErrorBoundary","App","basename","routes","route","FallbackComponent","onReset","palette","default","primary","main","secondary","warning","success","info","ReactDOM"],"mappings":"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","file":"static/js/main.6e0deb08.chunk.js","sourcesContent":["module.exports = {\n  pokedex: {\n    name:'Pokedex Query',\n    type: 'example',\n    yaml: `!Flow\n    with:\n      read_only: true\n      rest_api: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          chunk_seg:\n            x: 250\n            y: 268\n          tf_encode:\n            x: 250\n            y: 420\n          chunk_idx:\n            x: 250\n            y: 600\n          ranker:\n            x: 250\n            y: 836\n          doc_idx:\n            x: 249\n            y: 985\n    pods:\n      gateway: {}\n      chunk_seg:\n        uses: pods/craft.yml\n        parallel: $PARALLEL\n        needs: gateway\n      tf_encode:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 600000\n        needs: chunk_seg\n      chunk_idx:\n        uses: pods/chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        timeout_ready: 100000\n        needs: tf_encode\n      ranker:\n        uses: BiMatchRanker\n        needs: chunk_idx\n      doc_idx:\n        uses: pods/doc.yml\n        needs: ranker\n    \n    `,\n  },\n  flower:{\n    name:'Flower Search Query',\n    type: 'example',\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          loader:\n            x: 250\n            y: 257\n          flipper:\n            x: 252\n            y: 407\n          normalizer:\n            x: 239\n            y: 563\n          encoder:\n            x: 252\n            y: 712\n          chunk_indexer:\n            x: 250\n            y: 872\n          ranker:\n            x: 252\n            y: 1066\n          doc_indexer:\n            x: 253\n            y: 1199\n    pods:\n      gateway: {}\n      loader:\n        uses: yaml/craft-load.yml\n        read_only: true\n        needs: gateway\n      flipper:\n        uses: yaml/craft-flip.yml\n        read_only: true\n        needs: loader\n      normalizer:\n        uses: yaml/craft-normalize.yml\n        read_only: true\n        needs: flipper\n      encoder:\n        uses: $ENCODER\n        timeout_ready: 600000\n        read_only: true\n        needs: normalizer\n      chunk_indexer:\n        uses: yaml/index-chunk.yml\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: yaml/index-doc.yml\n        needs: ranker  \n    `\n  },\n  southpark: {\n    name: 'Southpark Query',\n    type: 'example',\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 254\n            y: 147\n          splittor:\n            x: 254\n            y: 270\n          encoder:\n            x: 254\n            y: 448\n          chunk_indexer:\n            x: 251\n            y: 645\n          ranker:\n            x: 255\n            y: 862\n          doc_indexer:\n            x: 256\n            y: 1002\n    pods:\n      gateway: {}\n      splittor:\n        uses: pods/craft-split.yml\n        parallel: $PARALLEL\n        read_only: true\n        needs: gateway\n      encoder:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 60000\n        read_only: true\n        needs: splittor\n      chunk_indexer:\n        uses: pods/index-chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        reducing_uses: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: pods/index-doc.yml\n        needs: ranker\n    `,\n  }\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_FLOW: \"LOAD_FLOW\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n  CREATE_NEW_FLOW: \"CREATE_NEW_FLOW\",\n  UPDATE_FLOW: \"UPDATE_FLOW\",\n  DUPLICATE_FLOW: \"DUPLICATE_FLOW\",\n  DELETE_FLOW: \"DELETE_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","import React from \"react\";\n\nexport default function NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n","import React from \"react\";\n\nexport default function NavbarToggle({ toggleSidebar }) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\nexport default function Notifications({ connected, reconnect }) {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n} from \"shards-react\";\n\nexport default function UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/podProperties.json\");\n\nfunction toBlob(content) {\n  return new Blob([content], { type: \"text,plain;charset=utf-8\" });\n}\nfunction serializeLogsToCSV(logs) {\n  const columns =\n    \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n    return acc;\n  }, columns);\n  return fileContent;\n}\n\nfunction serializeLogsToJSON(logs) {\n  const fileContent = logs.reduce((acc, log, i) => {\n    acc += JSON.stringify(log) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    return acc;\n  }, \"\\n\");\n  return `[${fileContent}]`;\n}\n\nfunction serializeLogsToText(logs) {\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    return acc;\n  }, \"\");\n  return fileContent;\n}\n\nconst serializeLogsToCSVBlob = (logs) => toBlob(serializeLogsToCSV(logs));\nconst serializeLogsToJSONBlob = (logs) => toBlob(serializeLogsToJSON(logs));\nconst serializeLogsToTextBlob = (logs) => toBlob(serializeLogsToText(logs));\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\nconst getNodeLabelsByPortId = ({ from, to }, nodes) => ({\n  [from.portId]: nodes[from.nodeId].label || nodes[from.nodeId].properties.name,\n  [to.portId]: nodes[to.nodeId].label || nodes[to.nodeId].properties.name,\n});\nconst decodePropValue = (propName, propValue) =>\n  propertyTypes[propName] === \"bool\" ? propValue === \"true\" : propValue;\nconst unpackIfLengthOne = (arr) =>\n  Array.isArray(arr) && arr.length === 1 ? arr[0] : arr;\n\nexport function formatAsYAML(chart) {\n  console.log(\"formatAsYAML input: \", chart);\n  const { with: chartWith, nodes, links } = chart;\n\n  const needsByPodLabel = Object.values(links).reduce((acc, curr) => {\n    const nodeLabelsByPortId = getNodeLabelsByPortId(curr, nodes);\n    const needs = nodeLabelsByPortId.outPort;\n    const neededBy = nodeLabelsByPortId.inPort;\n\n    if (!acc[neededBy]) {\n      acc[neededBy] = [];\n    }\n    acc[neededBy].push(needs);\n    return acc;\n  }, {});\n\n  const pods = Object.values(nodes).reduce((acc, node) => {\n    const { label } = node;\n    if (!label) return acc;\n\n    const podProperties = Object.entries(node.properties).reduce(\n      (acc, [key, propValue]) => {\n        acc[key] = decodePropValue(key, propValue);\n        return acc;\n      },\n      {}\n    );\n    if (needsByPodLabel[label]) {\n      podProperties.needs = unpackIfLengthOne(needsByPodLabel[label]);\n    }\n\n    acc[label] = { ...podProperties };\n    return acc;\n  }, {});\n\n  const canvas = Object.values(nodes).reduce((acc, node) => {\n    const {\n      position: { x, y },\n    } = node;\n    acc[node.label] = { x, y };\n    return acc;\n  }, {});\n\n  const output = { with: { ...chartWith, board: { canvas } }, pods };\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n\nexport {\n  serializeLogsToCSVBlob,\n  serializeLogsToTextBlob,\n  serializeLogsToJSONBlob,\n};\n","import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg, url, line) {\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nconst logger = {\n  log: function () {\n    if (!window.logsEnabled) return;\n    let args = [...arguments];\n    console.log(...args);\n    window.logs.push(args);\n  },\n  isEnabled: function () {\n    return window.logsEnabled;\n  },\n  enable: function () {\n    const _navigator = {};\n    for (let i in window.navigator) _navigator[i] = window.navigator[i];\n    window.logs = [];\n    window.logs.push(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    window.logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = window.logsFormat || \"json\";\n    const logs = window.logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","import axios from \"axios\";\nimport logger from \"../logger\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  connect: (settings, connectionUpdate, logUpdate, taskUpdate) => {\n    logger.log(\"api - connect - settings\", settings);\n\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    logger.log(\"api - connect - logString\", logString);\n\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logger.log(\"api - logStream.onopen called\");\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      logger.log(\"api - logStream.onerror - ERROR\", data);\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    logger.log(\"api - connect - taskString\", taskString);\n\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      logger.log(\"api - taskStream.onopen called\");\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      logger.log(\"api - taskStream.onerror - ERROR\", data);\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (settings) => {\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n    logger.log(\"api - getYAML - connectionString\", connectionString);\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nimport Dispatcher from \"./dispatcher\";\nimport { nanoid } from \"nanoid\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport logger from \"../logger\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleFlows from \"../data/exampleFlows\";\nimport { transformLog } from \"./tranformLog\";\n\nlet _store;\n\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getExampleFlows() {\n  const flows = {};\n\n  Object.entries(exampleFlows).forEach(([id, flow]) => {\n    const parsed = parseYAML(flow.yaml);\n    let canvas;\n    try {\n      canvas = parsed.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const formatted = formatForFlowchart(parsed.data.pods, canvas);\n    flows[id] = {\n      ...flow,\n      flow: formatted,\n    };\n  });\n\n  return flows;\n}\n\nfunction getUserFlows() {\n  const userFlows = JSON.parse(localStorage.getItem(\"userFlows\"));\n  return _.isEmpty(userFlows)\n    ? {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n      }\n    : userFlows;\n}\n\nfunction getInitialFlow() {\n  return {\n    selected: {},\n    hovered: {},\n    scale: 1,\n    nodes: {\n      gateway: {\n        id: \"gateway\",\n        label: \"gateway\",\n        ports: {\n          outPort: {\n            id: \"outPort\",\n            type: \"output\",\n          },\n        },\n        properties: {},\n        position: { x: 629, y: 72 },\n      },\n    },\n    links: {},\n    offset: { x: 0, y: 0 },\n  };\n}\n\nfunction getInitialLevelOccurences() {\n  let occurences = {\n    lastLog: 0,\n    levels: {},\n  };\n  CHART_LEVELS.forEach((level) => {\n    occurences.levels[level] = 0;\n  });\n  return occurences;\n}\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flows: {\n      ...getUserFlows(),\n      ...getExampleFlows(),\n    },\n    selectedFlow: \"_userFlow\",\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: {},\n    currentTab: \"logStream\",\n  };\n}\n\nif (window.location.hostname === \"localhost\") logger.enable();\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    window.peakLogs = this.getLogs;\n    window.peakStore = () => console.log(_store);\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_FLOW:\n        this.loadFlow(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      case Constants.CREATE_NEW_FLOW:\n        this.createNewFlow();\n        break;\n      case Constants.DUPLICATE_FLOW:\n        this.createNewFlow(payload);\n        break;\n      case Constants.UPDATE_FLOW:\n        this.updateFlow(payload);\n        break;\n      case Constants.DELETE_FLOW:\n        this.deleteFlow(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    console.log(\"store:\", _store);\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async () => {\n    let flow;\n\n    try {\n      let str = await api.getYAML(_store.settings);\n      flow = parseYAML(str);\n    } catch (e) {\n      logger.log(\"initFlowChart - parseYAML[API] ERROR\", e);\n      return;\n    }\n\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n\n    logger.log(\"initFlowChart - flow\", flow);\n    logger.log(\"initFlowChart - canvas\", canvas);\n\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n\n    logger.log(\"initFlowChart - parsed\", parsed);\n\n    let flows = {};\n    flows.connectedFlow = {\n      flow: parsed,\n      name: \"Network Flow\",\n      type: \"remote\",\n    };\n    _store.flows = { ...flows, ..._store.flows };\n    _store.selectedFlow = \"connectedFlow\";\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status, message) => {\n    logger.log(\"handleLogConnectionStatus - status\", status);\n    logger.log(\"handleLogConnectionStatus - message\", message);\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n      return this.showBanner(message, \"error\");\n    }\n  };\n\n  handleNewLog = (message) => {\n    const { data } = message;\n    const log = transformLog(data);\n\n    log.unixTime = parseInt(log.created);\n    log.timestamp = new Date(log.unixTime * 1000);\n    log.formattedTimestamp = log.timestamp.toLocaleString();\n    log.idx = _store.logs.length;\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = async () => {\n    this.updateChartInterval = setInterval(this.updateSummaryCharts, 1000);\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    let x = 0;\n    let y = 0;\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n        x = value.position.x * -1 + 40;\n        y = value.position.y * -1 + 100;\n      }\n    }\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    logger.log(\"importCustomYAML - customYAML\", customYAML);\n    this.createNewFlow(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadFlow = (flowId) => {\n    _store.selectedFlow = flowId;\n    this.emit(\"update-flowchart\");\n  };\n\n  updateFlow = (newFlow) => {\n    _store.flows[_store.selectedFlow].flow = newFlow;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  createNewFlow = (customYAML) => {\n    let prefixString = \"Custom Flow\";\n\n    let userFlows = Object.values(_store.flows).filter((flow) =>\n      flow.name.startsWith(prefixString)\n    );\n\n    const flowNumbers = userFlows\n      .map((f) => parseInt(f.name.substring(prefixString.length)) || 0)\n      .sort((a, b) => a - b);\n\n    const largestNumber = flowNumbers[flowNumbers.length - 1] || 0;\n\n    const id = nanoid();\n\n    let flow;\n\n    if (customYAML) {\n      const parsed = parseYAML(customYAML);\n      let canvas;\n      try {\n        canvas = parsed.data.with.board.canvas;\n      } catch (e) {\n        canvas = {};\n      }\n      flow = formatForFlowchart(parsed.data.pods, canvas);\n    } else flow = getInitialFlow();\n\n    _store.flows[id] = {\n      name: `${prefixString} ${largestNumber + 1}`,\n      type: \"user-generated\",\n      flow,\n    };\n\n    _store.selectedFlow = id;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  deleteFlow = (flowId) => {\n    _store.flows = _.omit(_store.flows, flowId);\n\n    const nonExampleFlows = Object.entries(_store.flows).filter(\n      ([id, flow]) => flow.type !== \"example\"\n    );\n\n    if (_store.selectedFlow === flowId && nonExampleFlows.length) {\n      _store.selectedFlow = nonExampleFlows[0][0];\n    } else if (!nonExampleFlows.length) {\n      _store.flows = {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n        ..._store.flows,\n      };\n      _store.selectedFlow = \"_userFlow\";\n    }\n\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  saveFlowsToStorage = () => {\n    let toSave = {};\n    const { flows } = _store;\n    Object.entries(flows).forEach(([id, flow]) => {\n      if (flow.type === \"user-generated\") toSave[id] = flow;\n    });\n    localStorage.setItem(\"userFlows\", JSON.stringify(toSave));\n  };\n\n  saveSettings = (settings) => {\n    logger.log(\"saveSettings - settings\", settings);\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, modalParams } = data;\n    _store.modal = modal;\n    _store.modalParams = modalParams || {};\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = {};\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    let chartData = [];\n    let now = parseInt(new Date() / 1000);\n    for (let i = now - numSeconds; i < now; i++) {\n      chartData.push(\n        _store.logLevelOccurences[i] ? _store.logLevelOccurences[i] : emptyItem\n      );\n    }\n    return chartData;\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flows[_store.selectedFlow];\n  };\n\n  getFlows = () => {\n    return _store.flows;\n  };\n\n  getSelectedFlowId = () => {\n    return _store.selectedFlow;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n\n  getStoreCopy = () => {\n    return _.cloneDeep(_store);\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import { fromUnixTime } from \"date-fns\";\nimport { nanoid } from \"nanoid\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\nexport type RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n};\n\nexport type ProcessedLog = RawLog & {\n  createdDate: Date;\n  id: string;\n};\n\nfunction transformLog(log: RawLog) {\n  const { created } = log;\n  const createdDate = fromUnixTime(created);\n  const id = nanoid();\n  return { ...log, createdDate, id };\n}\n\nexport { transformLog };\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarToggle from \"./NavbarToggle\";\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainNavbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userActionsVisible: false,\n      connected: Store.getConnectionStatus(),\n      user: Store.getUser(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getData);\n  };\n\n  getData = () => {\n    const connected = Store.getConnectionStatus();\n    const user = Store.getUser();\n    this.setState({ connected, user });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  toggleUserActions = () => {\n    this.setState({\n      userActionsVisible: !this.state.userActionsVisible,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n  render = () => {\n    const { connected, user, userActionsVisible } = this.state;\n    return (\n      <div className=\"main-navbar bg-white sticky-top\">\n        <Container fluid className=\"p-0\">\n          <Navbar\n            type=\"light\"\n            className=\"align-items-stretch flex-md-nowrap p-0\"\n          >\n            <NavbarSpacer />\n            <Nav navbar className=\"border-left flex-row\">\n              <Notifications reconnect={this.reconnect} connected={connected} />\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={this.toggleUserActions}\n                logOut={this.logOut}\n              />\n            </Nav>\n            <NavbarToggle toggleSidebar={this.toggleSidebar} />\n          </Navbar>\n        </Container>\n      </div>\n    );\n  };\n}\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DashboardLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function CookiesBanner({ show, acceptCookies }) {\n  return (\n    <div className={`cookies-banner ${show ? \"\" : \"hidden\"}`}>\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function InfoBanner({ data }) {\n  return data ? (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nexport default function ConnectionBanner({ loading, connected, reconnect }) {\n  return loading || connected ? (\n    \"\"\n  ) : (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"msg\", \"unixTime\"];\n\nexport default ({ open, closeModal, modalParams }) => {\n  const log = modalParams.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.msg}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"msg\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport CookiesBanner from \"../components/Common/CookiesBanner\";\nimport InfoBanner from \"../components/Common/InfoBanner\";\nimport ConnectionBanner from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    const loggerEnabled = logger.isEnabled();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      connected,\n      modalParams,\n      loggerEnabled,\n    });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      connected,\n      loading,\n      modalParams,\n      loggerEnabled,\n    } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar />\n            <InfoBanner data={banner} />\n            <ConnectionBanner\n              loading={loading}\n              connected={connected}\n              reconnect={this.reconnect}\n            />\n            {children}\n            <CookiesBanner\n              show={!acceptedCookies}\n              acceptCookies={this.acceptCookies}\n            />\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <LogDetails\n          open={modal === \"logDetails\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n          modalParams={modalParams}\n        />\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nexport default function PageTitle({ title, subtitle, className, ...attrs }) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default function SidebarItem(props) {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport lunr from \"lunr\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  constructor(props) {\n    super();\n    let node = {};\n    if (props.chart.selected.id) {\n      const selectedNode = props.chart.nodes[props.chart.selected.id];\n      node = this.getInitialNodeState(selectedNode);\n    }\n\n    this.state = {\n      availableProperties: Store.getAvailableProperties(),\n      node,\n      searchResults: [],\n      searchQuery: \"\",\n    };\n  }\n\n  getInitialNodeState = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).forEach((key) => {\n      properties[key] = node.properties[key];\n    });\n\n    return { label, id: node.id, properties, newProperties };\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id) return;\n\n    this.setState({ searchResults: [], searchQuery: \"\" });\n\n    if (!id) return;\n\n    if (type === \"node\" && id !== this.state.node.id) {\n      const node = nodes[id];\n      this.setState({ node: this.getInitialNodeState(node) });\n    }\n  };\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.searchProperties);\n  };\n\n  searchProperties = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ searchResults: false });\n    this.indexProperties();\n    let searchResults = this.index.search(`${query} ${query}*`);\n    this.setState({ searchResults });\n  };\n\n  indexProperties = () => {\n    const { availableProperties } = this.state;\n    this.index = lunr(function () {\n      this.field(\"name\");\n\n      availableProperties.forEach((prop, idx) => {\n        prop.id = parseInt(idx);\n        this.add(prop);\n      });\n    });\n  };\n\n  renderEditNode = () => {\n    const {\n      availableProperties,\n      node,\n      searchQuery,\n      searchResults,\n    } = this.state;\n    let label =\n      typeof node.label === \"undefined\"\n        ? node.properties.name\n        : node.label || \"\";\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>Pod Name</b>\n          </p>\n          <FormControl\n            spellCheck={false}\n            value={label}\n            onChange={(e) => this.updateLabel(e.target.value)}\n            className=\"pod-name-input\"\n          />\n        </div>\n        <p className=\"mb-0 px-2\">\n          <b>Properties</b>\n        </p>\n        <div className=\"m-2\">\n          <FormControl\n            spellCheck={false}\n            placeholder=\"search properties...\"\n            value={searchQuery}\n            onChange={this.updateSearchQuery}\n          />\n        </div>\n        <div className=\"property-table flex-fill mx-2\">\n          {searchQuery && searchResults ? (\n            searchResults.map((result) => {\n              const property = availableProperties[result.ref];\n              const { name, type } = property;\n              const value = node.properties[name];\n\n              if (typeof value == \"undefined\")\n                return (\n                  <div key={name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={type}\n                      value={node.newProperties[name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                );\n              return (\n                <div key={name} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{name}</p>\n                  <FormControl\n                    spellCheck={false}\n                    value={value || \"\"}\n                    onChange={(e) =>\n                      this.updateExistingValue(name, e.target.value)\n                    }\n                    className=\"property-value-input\"\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              {Object.keys(node.properties).map((prop) => {\n                const value = node.properties[prop];\n                if (prop === \"name\") return \"\";\n                return (\n                  <div key={prop} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{prop}</p>\n                    <FormControl\n                      spellCheck={false}\n                      value={value || \"\"}\n                      onChange={(e) =>\n                        this.updateExistingValue(prop, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    />\n                  </div>\n                );\n              })}\n              {availableProperties.map((property) =>\n                typeof node.properties[property.name] == \"undefined\" ? (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={property.type}\n                      value={node.newProperties[property.name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(property.name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Pod\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId];\n    const nodeTo = nodes[link.to.nodeId];\n\n    let choices = Object.keys(nodes).map((id) => {\n      return { label: nodes[id].label || nodes[id].properties.name, id };\n    });\n\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Edit Connection</b>\n        </h5>\n        <div className=\"flex-fill px-2\">\n          <div className=\"p-2 mb-1\">\n            <p className=\"mb-1\">\n              <b>From</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, e.target.value, nodeTo.id)\n              }\n              value={nodeFrom.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n            <p className=\"mb-1\">\n              <b>To</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, nodeFrom.id, e.target.value)\n              }\n              value={nodeTo.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Connection\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderPodMenu = () => {\n    return (\n      <div className=\"d-flex flex-column h-100\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Add Pods</b>\n        </h5>\n        <div className=\"p-3 scrollable flex-fill\">\n          <SidebarItem\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={{}}\n          />\n          {defaultPods.map((pod, idx) => (\n            <SidebarItem\n              key={idx}\n              ports={{\n                inPort: {\n                  id: \"inPort\",\n                  type: \"input\",\n                },\n                outPort: {\n                  id: \"outPort\",\n                  type: \"output\",\n                },\n              }}\n              properties={pod}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  renderReadOnly = () =>{\n    return(<div className=\"readonly-overlay py-4 px-4 text-center\">\n      <h4 className=\"my-4\"><b>This flow is <span className=\"text-muted\">readonly</span></b></h4>\n      <p className=\"my-4\">To edit this flow, please duplicate it.</p>\n      <Button onClick={this.props.duplicateFlow}>Duplicate Flow</Button>\n    </div>)\n  }\n\n  render = () => {\n    const {chart, readonly} = this.props;\n    const { selected, nodes, links } = chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {hasSelected\n          ? selected.type === \"link\"\n            ? this.renderEditLink(links[selected.id], nodes)\n            : this.renderEditNode(nodes[selected.id])\n          : this.renderPodMenu()}\n          {readonly&&this.renderReadOnly()}\n      </Card>\n    );\n  };\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nfunction SelectionIndicator({ selected }) {\n  return selected ? (\n    <i className=\"material-icons text-primary\">radio_button_checked</i>\n  ) : (\n    <i className=\"material-icons\">radio_button_unchecked</i>\n  );\n}\n\nfunction ConnectionIndicator({ connected, show }) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons ml-2 text-success\">wifi</i>\n  ) : (\n    <i className=\"material-icons ml-2 text-warning\">wifi_off</i>\n  );\n}\n\nfunction TitleConnectionIndicator({ connected, show }) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons text-white ml-1 mr-2\">wifi</i>\n  ) : (\n    <i className=\"material-icons text-warning ml-1 mr-2\">wifi_off</i>\n  );\n}\n\nfunction DeleteFlowButton({ show, deleteFlow }) {\n  if (!show) return null;\n  return (\n    <i className=\"material-icons text-danger float-right\" onClick={deleteFlow}>\n      delete\n    </i>\n  );\n}\n\nfunction EditFlowsButton({ isEditing, onClick }) {\n  return isEditing ? (\n    <i\n      onClick={onClick}\n      className=\"material-icons float-right cursor-pointer text-success\"\n    >\n      done\n    </i>\n  ) : (\n    <i onClick={onClick} className=\"material-icons float-right cursor-pointer\">\n      edit\n    </i>\n  );\n}\n\nexport default function FlowSelection({\n  flows,\n  loadFlow,\n  selectedFlowId,\n  createNewFlow,\n  deleteFlow,\n  connected,\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => {\n    setIsEditing((currentIsEditing) => !currentIsEditing);\n  };\n\n  const userFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type !== \"example\"\n  );\n\n  const exampleFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type === \"example\"\n  );\n\n  const currentFlow = flows[selectedFlowId];\n\n  return (\n    <Dropdown className=\"flow-selection\">\n      <Dropdown.Toggle>\n        {currentFlow.name}\n        <TitleConnectionIndicator\n          show={currentFlow.type === \"remote\"}\n          connected={connected}\n        />\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={createNewFlow}>\n          <i className=\"material-icons\">add</i>New Flow\n        </Dropdown.Item>\n        <Dropdown.Header className=\"text-uppercase\">\n          Your Flows{\" \"}\n          <EditFlowsButton isEditing={isEditing} onClick={toggleEditing} />\n        </Dropdown.Header>\n        {userFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator selected={flowId === selectedFlowId} />\n            {flow.name}\n            <ConnectionIndicator\n              show={flow.type === \"remote\"}\n              connected={connected}\n            />\n            <DeleteFlowButton\n              show={flow.type === \"user-generated\" && isEditing}\n              deleteFlow={(e) => deleteFlow(e, flowId)}\n            />\n          </Dropdown.Item>\n        ))}\n        <Dropdown.Header className=\"text-uppercase\">Examples</Dropdown.Header>\n        {exampleFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator itemId={flowId} selectedId={selectedFlowId} />\n            {flow.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport FlowSelection from \"../components/FlowChart/FlowSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nconst syncEvents = [\n  \"onDragNodeStop\",\n  \"onCanvasDrop\",\n  \"onCanvasClick\",\n  \"onNodeClick\",\n  \"onDragCanvasStop\",\n  \"updateNode\",\n  \"updateLink\",\n];\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    const connected = Store.getConnectionStatus();\n    this.state = {\n      flowType,\n      connected,\n      chart,\n      selectedFlowId,\n      flows,\n      showOverlay: false,\n    };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateFlow({ ...chart, ...newChart }, key);\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-ui\", this.getConnectionStatus);\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n    Store.removeListener(\"update-ui\", this.getConnectionStatus);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    this.setState({ chart, flowType, selectedFlowId, flows });\n  };\n\n  getConnectionStatus = () => {\n    const connected = Store.getConnectionStatus();\n    this.setState({ connected });\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateNode\");\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateLink\");\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateFlow = (flow, event) => {\n    if (syncEvents.includes(event)) return this.syncFlow(flow);\n    this.setState({ chart: flow });\n  };\n\n  syncFlow = (flow) => {\n    Dispatcher.dispatch({\n      actionType: Constants.UPDATE_FLOW,\n      payload: flow,\n    });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId }) => {\n    return !(fromNodeId === toNodeId || fromPortId === toPortId);\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadFlow = (flow) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_FLOW,\n      payload: flow,\n    });\n  };\n\n  createNewFlow = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.CREATE_NEW_FLOW,\n    });\n  };\n\n  deleteFlow = (e, flowId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.DELETE_FLOW,\n      payload: flowId,\n    });\n  };\n\n  duplicateFlow = () => {\n    const yaml = formatAsYAML(this.state.chart);\n    Dispatcher.dispatch({\n      actionType: Constants.DUPLICATE_FLOW,\n      payload: yaml,\n    });\n  };\n\n  render = () => {\n    const {\n      chart,\n      flows,\n      selectedFlowId,\n      showOverlay,\n      connected,\n      flowType,\n    } = this.state;\n    const readonly = flowType !== \"user-generated\";\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <FlowSelection\n                connected={connected}\n                flows={flows}\n                selectedFlowId={selectedFlowId}\n                createNewFlow={this.createNewFlow}\n                loadFlow={this.loadFlow}\n                deleteFlow={this.deleteFlow}\n              />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    readonly,\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              duplicateFlow={this.duplicateFlow}\n              readonly={readonly}\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _levels = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass ChartBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"top\",\n        labels: {\n          padding: 10,\n          boxWidth: 15,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              callback: this.getXAxisLabel,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Occurences\",\n            },\n            gridLines: {\n              labelString: \"hello\",\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: function (value) {\n                if (Number.isInteger(value)) {\n                  return value;\n                }\n              },\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: this.getParsedDatasets(),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: this.getParsedDatasets(),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  getXAxisLabel = (value, index, values) => {\n    if (index === 0) return values.length + \"s ago\";\n    else if (index === parseInt(values.length / 2)) return index + \"s ago\";\n    return;\n  };\n\n  getParsedDatasets = () => {\n    const { data } = this.props;\n    const datasets = Object.keys(_levels).map((level) => {\n      const levelData = data.map((tick) => tick.levels[level]);\n      return {\n        label: level,\n        fill: \"start\",\n        borderWidth: 1.5,\n        borderColor: _levels[level].borderColor,\n        backgroundColor: _levels[level].backgroundColor,\n        data: levelData,\n      };\n    });\n    return datasets;\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass LogLevelSummaryChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelCharts(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    const { chartData } = this.state;\n    let index = activePoints[0] && activePoints[0]._index;\n    console.log(\"index:\", index);\n\n    if (index && typeof index !== \"undefined\")\n      Dispatcher.dispatch({\n        actionType: Constants.SHOW_LOG_AT_INDEX,\n        payload: chartData[index].lastLog,\n      });\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header>Log Occurences by Level</Card.Header>\n        <Card.Body className=\"d-none d-md-block pb-2 pt-0\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelSummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport PieChart from \"./PieChart\";\n\nclass LogLevelPieChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelOccurences(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelOccurences();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header className=\"text-center\">Log Levels</Card.Header>\n        <Card.Body className=\"pt-0\">\n          <PieChart data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelPieChart;\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: string };\n\nconst customStyles = {\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n} & SelectProps;\n\nfunction MultiFilterSelect({ onFilterChange, options, ...rest }: Props) {\n  return (\n    <Select\n      onChange={(val) =>\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val])\n      }\n      isMulti\n      options={options}\n      styles={customStyles}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","const applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\nexport { applyFilters };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: any[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, msg, levelname, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useEffect, useRef } from \"react\";\n\nexport type UseTimeoutFnReturn = [() => boolean | null, () => void, () => void];\n\nfunction useTimeoutFn(fn: Function, ms: number = 0): UseTimeoutFnReturn {\n  const ready = useRef<boolean | null>(false);\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const callback = useRef(fn);\n\n  const isReady = useCallback(() => ready.current, []);\n\n  const set = useCallback(() => {\n    ready.current = false;\n    timeout.current && clearTimeout(timeout.current);\n\n    timeout.current = setTimeout(() => {\n      ready.current = true;\n      callback.current();\n    }, ms);\n  }, [ms]);\n\n  const clear = useCallback(() => {\n    ready.current = null;\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  // update ref when function changes\n  useEffect(() => {\n    callback.current = fn;\n  }, [fn]);\n\n  // set on mount, clear on unmount\n  useEffect(() => {\n    set();\n\n    return clear;\n  }, [ms]);\n\n  return [isReady, clear, set];\n}\nexport { useTimeoutFn };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useMiniSearch } from \"react-minisearch\";\nimport { usePrevious } from \"./usePrevious\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { applyFilters } from \"./useFilters\";\nimport { LogItem } from \"./LogItem\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport {\n  serializeLogsToCSVBlob,\n  serializeLogsToJSONBlob,\n  serializeLogsToTextBlob,\n} from \"../../helpers\";\nimport { saveAs } from \"file-saver\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\nconst ROW_SIZE = 30;\n\nconst fields = [\"filename\", \"funcName\", \"msg\", \"name\", \"module\", \"pathname\"];\nconst miniSearchOptions = { fields };\n\nconst generateFormatFileName = (format: Format) =>\n  `jina-logs-${new Date()}.${format}`;\n\ntype Format = \"json\" | \"csv\" | \"txt\";\n\ntype Props = {\n  data: ProcessedLog[];\n  showLogDetails: (log: ProcessedLog) => void;\n};\n\nconst itemKey = (index: number, data: { items: ProcessedLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsTable({ data, showLogDetails }: Props) {\n  const [scrolledToBottom, setScrolledToBottom] = React.useState(true);\n  const windowListRef = useRef<any>();\n  const [selectedSources, setSelectedSources] = React.useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = React.useState<\n    { value: ProcessedLog[\"levelname\"] }[]\n  >([]);\n  const [searchString, setSearchString] = React.useState(\"\");\n  const { search, searchResults, addAllAsync } = useMiniSearch(\n    data,\n    miniSearchOptions\n  );\n  const buffer = useRef<any[]>([]);\n  const previousLength = usePrevious(data.length);\n  useEffect(() => {\n    if (previousLength && previousLength! > 0) {\n      const newLog = data[previousLength! - 1];\n      addAllAsync([newLog]);\n      buffer.current.push(newLog);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousLength, searchString]);\n\n  const unfiltered = searchString ? searchResults : data;\n\n  const resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n  useEffect(() => {\n    if (windowListRef.current && scrolledToBottom) {\n      windowListRef.current.scrollToItem(resultData.length);\n    }\n  }, [resultData.length, scrolledToBottom]);\n  useDebounce(\n    () => {\n      search(searchString);\n    },\n    1000,\n    [searchString]\n  );\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-3\">\n        <Row>\n          <Col md=\"8\">\n            <MultiFilterSelect\n              options={toOption(sources)}\n              onFilterChange={setSelectedSources}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Logsources\"\n            />\n            <MultiFilterSelect\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Levels\"\n            />\n            <DropdownButton\n              as={ButtonGroup}\n              title=\"Download Logs\"\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToCSVBlob(data),\n                    generateFormatFileName(\"csv\")\n                  )\n                }\n              >\n                Download as CSV\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToJSONBlob(data),\n                    generateFormatFileName(\"json\")\n                  )\n                }\n              >\n                Download as JSON\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToTextBlob(data),\n                    generateFormatFileName(\"txt\")\n                  )\n                }\n              >\n                Download as TXT\n              </Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col md=\"4\">\n            <Form.Control\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={(e) => {\n                setSearchString(e.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body\n        className=\"log-stream-container p-1 border-top\"\n        id=\"log-stream-container\"\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() =>\n              windowListRef.current.scrollToItem(resultData.length)\n            }\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        <AutoSizer>\n          {({ height, width }) => {\n            const firstCol = 300;\n            const secondCol = 300;\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - resultData.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={resultData.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: resultData,\n                  columns: { firstCol, secondCol, thirdCol },\n                  showLogDetails,\n                }}\n                ref={windowListRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import React from \"react\";\nfunction usePrevious(value: any) {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\nexport { usePrevious };\n","import { DependencyList, useEffect } from \"react\";\nimport { useTimeoutFn } from \"./useTimeoutFn\";\n\nexport type UseDebounceReturn = [() => boolean | null, () => void];\n\nfunction useDebounce(\n  fn: Function,\n  ms: number = 0,\n  deps: DependencyList = []\n): UseDebounceReturn {\n  const [isReady, cancel, reset] = useTimeoutFn(fn, ms);\n\n  useEffect(reset, deps);\n\n  return [isReady, cancel];\n}\n\nexport { useDebounce };\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport LogLevelSummaryChart from \"../components/LogStream/LogLevelSummaryChart\";\nimport LogLevelPieChart from \"../components/LogStream/LogLevelPieChart\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store, Dispatcher, Constants } from \"../flux\";\nconst showLogDetails = (log) => {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_MODAL,\n    payload: { modal: \"logDetails\", modalParams: { log } },\n  });\n};\n\nfunction LogsView() {\n  const [logs, setLogs] = useState([]);\n  function getData() {\n    const newLogs = Store.getLogs();\n    setLogs([...newLogs]);\n  }\n  useEffect(() => {\n    Store.on(\"update-logs\", getData);\n    return () => Store.removeListener(\"update-logs\", getData);\n  }, []);\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Log Stream\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\">\n            <LogLevelSummaryChart />\n          </Col>\n          <Col md=\"2\" className=\"mb-4\">\n            <LogLevelPieChart />\n          </Col>\n        </Row>\n        <LogsTable data={logs} showLogDetails={showLogDetails} />\n      </div>\n    </Container>\n  );\n}\n\nexport { LogsView };\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nexport default function ElapsedCard({ elapsed }) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState(Store.getSettings());\n  const [updates, setUpdates] = useState({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting, value) {\n    const newUpdates = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\nexport default function StarRating({ rating, userRated, rate }) {\n  const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n  const stars = getStars(formatted, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n}\n\nconst getStars = (amount, rate) => {\n  let stars = [];\n  let integer = parseInt(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default function ImageCard({ image }) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function BuildHistory(props) {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default function ImageDetails({ image }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReadMe({ readme, documentation }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default function CopyCommand(props) {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReviewCard({ review }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default function ImageReviews({ reviews, newReview }) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nexport default function HelpCard({ title, content, icon, theme, link }) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from \"../components/Common/HelpCard\";\nimport PageTitle from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout, IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport { LogsView } from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n  },\n];\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, modalParams: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FallbackProps } from \"react-error-boundary\";\nimport PageTitle from \"./components/Common/PageTitle\";\nimport { Button } from \"shards-react\";\n\nfunction FallbackPage({ error, resetErrorBoundary }: FallbackProps) {\n  return (\n    <Container fluid className=\"main-content-container p-5\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          title=\"Error\"\n          subtitle=\"This should not have happened\"\n          className=\"text-sm-left my-3\"\n        />\n      </Row>\n      <Row noGutters className=\"page-header py-4\">\n        <Col xs=\"12\" sm=\"3\">\n          <p>Something went wrong:</p>\n          <pre>\n            <code className=\"text-warning\">{error!.message}</code>\n          </pre>\n        </Col>\n      </Row>\n      <Row noGutters className=\"page-header\">\n        <Col>\n          <Button onClick={resetErrorBoundary}>Try again</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport { FallbackPage };\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { FallbackPage } from \"./FallbackPage\";\nimport { Store } from \"./flux/\";\n\nconst App = () => {\n  return (\n    <Router basename={\"/\"}>\n      <div>\n        {routes.map((route, index) => {\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={withTracker((props) => {\n                return (\n                  <route.layout {...props}>\n                    <ErrorBoundary\n                      FallbackComponent={FallbackPage}\n                      onReset={() => Store.init()}\n                    >\n                      <route.component {...props} />\n                    </ErrorBoundary>\n                  </route.layout>\n                );\n              })}\n            />\n          );\n        })}\n      </div>\n    </Router>\n  );\n};\n\nexport { App };\n","const PERSIAN_GREEN = \"#009999\";\nconst GOLDEN_TANOI = \"#FFCC66\";\nconst BITTER_SWEET = \"#ff6666\";\nconst SCOOTER_GREEN = \"#32C8CD\";\n\nconst theme = {\n  palette: {\n    background: { default: \"#FFFFFF\" },\n    primary: {\n      main: PERSIAN_GREEN,\n    },\n    secondary: { main: GOLDEN_TANOI },\n    warning: { main: GOLDEN_TANOI },\n    error: { main: BITTER_SWEET },\n    success: { main: PERSIAN_GREEN },\n    info: { main: SCOOTER_GREEN },\n  },\n};\n\nexport { theme };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","module.exports = {\n  timeout: 15000,\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}