{"version":3,"sources":["data/yaml.js","flux/constants.js","settings.js","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/Notifications.js","components/Layout/MainNavbar/UserActions.js","flux/dispatcher.js","helpers.js","logger.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","flux/tranformLog.ts","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Default.jsx","components/Common/CookiesBanner.jsx","components/Common/InfoBanner.jsx","components/Common/ConnectionBanner.jsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","modals/LogDetails.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/NodePort.jsx","components/FlowChart/ExampleSelection.jsx","views/FlowView.jsx","components/LogStream/ChartBase.jsx","components/LogStream/LogLevelSummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/LogLevelPieChart.jsx","components/Common/MultiFilterSelect.tsx","components/LogStream/useFilters.ts","components/LogStream/LogItem.tsx","hooks/useTimeoutFn.ts","components/LogStream/LogsTable.tsx","components/LogStream/usePrevious.ts","hooks/useDebounce.ts","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/options.js","components/Settings/FormItem.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","views/PackageView.jsx","views/LogIn.jsx","withTracker.js","App.js","serviceWorker.js","index.js","flux/config.js"],"names":["module","exports","pokedex","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_EXAMPLE","SHOW_POD_IN_FLOW","nodeOffset","x","y","NavbarSpacer","className","NavbarToggle","toggleSidebar","onClick","Notifications","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","Dispatcher","YAML","require","settings","propertyList","toBlob","content","Blob","type","serializeLogsToJSONBlob","logs","fileContent","reduce","acc","log","i","JSON","stringify","length","serializeLogsToJSON","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","parents","Array","isArray","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","formatBytes","numBytes","parseFloat","toFixed","prop","name","handleErrorMessage","msg","url","line","logger","logStream","taskStream","_store","window","logsEnabled","args","arguments","console","push","isEnabled","enable","_navigator","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","filename","Date","blob","saveAs","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","startsWith","close","EventSource","onopen","onmessage","m","onerror","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","searchHub","category","q","sort","CHART_LEVELS","getInitialLevelOccurences","occurences","lastLog","levels","level","location","hostname","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadExample","showPodByLabel","init","clearIntervals","localStorage","getItem","yaml","shutdown","ready","images","banner","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","flowchart","outPort","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","taskData","qps","current","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","messages","bytes","selectedNode","modalParams","currentTab","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","updateChartInterval","clearInterval","updateTaskInterval","yamlSTRING","flow","api","with","board","e","parsed","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","setInterval","status","message","created","createdDate","fromUnixTime","nanoid","transformLog","unixTime","timestamp","formattedTimestamp","toLocaleString","idx","process","levelname","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","map","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","updateSummaryCharts","entries","key","hash","customYAML","exampleName","exampleYAML","setItem","setTimeout","String","includes","showError","image","reload","bannerTimeout","clearTimeout","hideBanner","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getLogLevelCharts","emptyItem","chartData","now","getLogLevelOccurences","getTaskData","getActivePanel","path","substring","getConnectionStatus","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","getStoreCopy","_","cloneDeep","register","peakLogs","peakStore","this","EventEmitter","MainNavbar","componentWillUnmount","Store","removeListener","getData","setState","dispatch","state","render","fluid","navbar","on","React","Component","href","style","lineHeight","maxWidth","item","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","top","subItem","nav","SidebarNavItem","MainSidebar","props","onChange","getMenuState","sidebarNavItems","getSidebarItems","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","DashboardLayout","children","noNavbar","noFooter","sm","CookiesBanner","show","acceptCookies","Button","InfoBanner","ConnectionBanner","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","inputRef","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","as","rows","submitReview","hiddenKeys","xs","filter","IconSidebarLayout","acceptedCookies","yamlString","storeCopy","hideLogoText","LogDetails","PasteYAML","WriteReview","PageTitle","subtitle","attrs","ChartNode","ButtonGroup","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","FlowChartSidebar","getInitialNodeState","newProperties","componentWillReceiveProps","nextProps","chart","searchResults","searchQuery","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","updateSearchQuery","searchProperties","query","indexProperties","search","availableProperties","lunr","field","add","renderEditNode","FormControl","spellCheck","property","deleteSelection","renderEditLink","nodeTo","choices","updateLink","choice","renderPodMenu","inPort","defaultPods","hasSelected","Card","NodePort","data-html2canvas-ignore","ExampleSelection","DropdownButton","Item","FlowView","componentDidMount","querySelector","preventDefault","extension","classList","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","updateChart","callback","newChart","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","copyChartAsYAML","output","propId","formatAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","example","display","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","action","newChartTransformer","_levels","INFO","borderColor","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","ChartBase","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","ticks","maxRotation","getXAxisLabel","yAxes","scaleLabel","labelString","gridLines","borderDash","zeroLineColor","drawBorder","suggestedMin","autoSkip","maxTicksLimit","Number","isInteger","chartConfig","getLabels","datasets","getParsedDatasets","options","ChartElement","canvasRef","animation","update","activePoints","getElementsAtEvent","amount","values","levelData","tick","borderWidth","height","createRef","LogLevelSummaryChart","showLog","_index","Header","Body","_colors","background","PieChart","getColor","names","mode","LogLevelPieChart","customStyles","container","provided","selectProps","MultiFilterSelect","onFilterChange","rest","val","isMulti","styles","LogItem","memo","columns","showLogDetails","logData","logName","levelInitial","firstCol","secondCol","thirdCol","toLowerCase","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","useTimeoutFn","fn","ms","useRef","isReady","useCallback","set","clear","useEffect","miniSearchOptions","fields","generateFormatFileName","itemKey","toOption","arrayLike","LogsTable","useState","scrolledToBottom","setScrolledToBottom","windowListRef","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","searchString","setSearchString","useMiniSearch","addAllAsync","buffer","previousLength","usePrevious","newLog","resultData","filters","curr","sources","Set","scrollToItem","deps","cancel","reset","useDebounce","lineno","funcname","pathname","serializeLogsToCSV","serializeLogsToText","onScroll","scrollOffset","itemCount","itemSize","itemData","ElapsedCard","ProgressCard","percent","newData","hoverBorderColor","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","difference","suggestedMax","tension","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","Container","QueriesPerSecond","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","original","setOriginal","updates","setUpdates","expanded","setExpanded","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","StarRating","rating","userRated","rate","round","getStars","integer","remainder","j","ImageCard","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","HubView","sortBy","sortType","setCategory","updateSearch","BuildHistory","buildHistory","build","formattedCreated","buildSize","os","architecture","ImageDetails","version","documentation","source","license","vendor","ReadMe","readme","CopyCommand","copyCode","imageVar","repoTags","code","language","atomOneLight","ReviewCard","review","ImageReviews","newReview","HelpCard","icon","NotFound","exact","layout","DefaultLayout","component","IconSidebar","setLogs","newLogs","getImageData","imageData","readmeHTML","windowHash","windowParams","URLSearchParams","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","basename","routes","route","Boolean","ReactDOM","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fc2be87b.chunk.js","sourcesContent":["module.exports = {\n  pokedex: `!Flow\n  with:\n    read_only: true\n    rest_api: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        chunk_seg:\n          x: 250\n          y: 268\n        tf_encode:\n          x: 250\n          y: 420\n        chunk_idx:\n          x: 250\n          y: 600\n        ranker:\n          x: 250\n          y: 836\n        doc_idx:\n          x: 249\n          y: 985\n  pods:\n    gateway: {}\n    chunk_seg:\n      uses: pods/craft.yml\n      parallel: $PARALLEL\n      needs: gateway\n    tf_encode:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 600000\n      needs: chunk_seg\n    chunk_idx:\n      uses: pods/chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      timeout_ready: 100000\n      needs: tf_encode\n    ranker:\n      uses: BiMatchRanker\n      needs: chunk_idx\n    doc_idx:\n      uses: pods/doc.yml\n      needs: ranker\n  \n  `,\n  flower: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        loader:\n          x: 250\n          y: 257\n        flipper:\n          x: 252\n          y: 407\n        normalizer:\n          x: 239\n          y: 563\n        encoder:\n          x: 252\n          y: 712\n        chunk_indexer:\n          x: 250\n          y: 872\n        ranker:\n          x: 252\n          y: 1066\n        doc_indexer:\n          x: 253\n          y: 1199\n  pods:\n    gateway: {}\n    loader:\n      uses: yaml/craft-load.yml\n      read_only: true\n      needs: gateway\n    flipper:\n      uses: yaml/craft-flip.yml\n      read_only: true\n      needs: loader\n    normalizer:\n      uses: yaml/craft-normalize.yml\n      read_only: true\n      needs: flipper\n    encoder:\n      uses: $ENCODER\n      timeout_ready: 600000\n      read_only: true\n      needs: normalizer\n    chunk_indexer:\n      uses: yaml/index-chunk.yml\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: yaml/index-doc.yml\n      needs: ranker  \n  `,\n  southpark: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 254\n          y: 147\n        splittor:\n          x: 254\n          y: 270\n        encoder:\n          x: 254\n          y: 448\n        chunk_indexer:\n          x: 251\n          y: 645\n        ranker:\n          x: 255\n          y: 862\n        doc_indexer:\n          x: 256\n          y: 1002\n  pods:\n    gateway: {}\n    splittor:\n      uses: pods/craft-split.yml\n      parallel: $PARALLEL\n      read_only: true\n      needs: gateway\n    encoder:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 60000\n      read_only: true\n      needs: splittor\n    chunk_indexer:\n      uses: pods/index-chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      reducing_uses: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: pods/index-doc.yml\n      needs: ranker\n  `,\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_EXAMPLE: \"LOAD_EXAMPLE\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","import React from \"react\";\n\nexport default function NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n","import React from \"react\";\n\nexport default function NavbarToggle({ toggleSidebar }) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\nexport default function Notifications({ connected, reconnect }) {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n} from \"shards-react\";\n\nexport default function UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/podProperties.json\");\n\nfunction toBlob(content) {\n  return new Blob([content], { type: \"text,plain;charset=utf-8\" });\n}\nfunction serializeLogsToCSV(logs) {\n  const columns =\n    \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n    return acc;\n  }, columns);\n  return fileContent;\n}\n\nfunction serializeLogsToJSON(logs) {\n  const fileContent = logs.reduce((acc, log, i) => {\n    acc += JSON.stringify(log) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    return acc;\n  }, \"\\n\");\n  return `[${fileContent}]`;\n}\n\nfunction serializeLogsToText(logs) {\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    return acc;\n  }, \"\");\n  return fileContent;\n}\n\nconst serializeLogsToCSVBlob = (logs) => toBlob(serializeLogsToCSV(logs));\nconst serializeLogsToJSONBlob = (logs) => toBlob(serializeLogsToJSON(logs));\nconst serializeLogsToTextBlob = (logs) => toBlob(serializeLogsToText(logs));\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\n\nexport function formatAsYAML(chart) {\n  let output = {\n    with: chart.with || {},\n    pods: {},\n  };\n  output.with.board = { canvas: {} };\n\n  Object.keys(chart.nodes).forEach((id) => {\n    let node = chart.nodes[id];\n    node.label = node.label || node.properties.name;\n    if (node.properties.name) delete node.properties.name;\n  });\n\n  Object.keys(chart.nodes).forEach((id) => {\n    const node = chart.nodes[id];\n\n    if (!node.label) return;\n\n    output.pods[node.label] = {};\n\n    Object.keys(node.properties).forEach((propId) => {\n      let type = propertyTypes[propId];\n      if (type === \"bool\") {\n        output.pods[node.label][propId] =\n          String(node.properties[propId]) === \"true\";\n      } else if (type === \"int\")\n        output.pods[node.label][propId] = parseInt(node.properties[propId]);\n      else output.pods[node.label][propId] = node.properties[propId];\n    });\n    output.with.board.canvas[node.label] = {\n      x: node.position.x,\n      y: node.position.y,\n    };\n  });\n  Object.keys(chart.links).forEach((id) => {\n    const link = chart.links[id];\n    const nodeFrom = chart.nodes[link.from.nodeId].label;\n    const nodeTo = chart.nodes[link.to.nodeId].label;\n    if (!nodeFrom || !nodeTo) return;\n    if (output.pods[nodeTo].needs) {\n      if (!Array.isArray(output.pods[nodeTo].needs))\n        output.pods[nodeTo].needs = [output.pods[nodeTo].needs];\n      output.pods[nodeTo].needs.push(nodeFrom);\n    } else output.pods[nodeTo].needs = nodeFrom;\n  });\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n\nexport {\n  serializeLogsToCSVBlob,\n  serializeLogsToTextBlob,\n  serializeLogsToJSONBlob,\n};\n","import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg, url, line) {\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nconst logger = {\n  log: function () {\n    if (!window.logsEnabled) return;\n    let args = [...arguments];\n    console.log(...args);\n    window.logs.push(args);\n  },\n  isEnabled: function () {\n    return window.logsEnabled;\n  },\n  enable: function () {\n    const _navigator = {};\n    for (let i in window.navigator) _navigator[i] = window.navigator[i];\n    window.logs = [];\n    window.logs.push(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    window.logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = window.logsFormat || \"json\";\n    const logs = window.logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","import axios from \"axios\";\nimport logger from \"../logger\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  connect: (settings, connectionUpdate, logUpdate, taskUpdate) => {\n    logger.log(\"api - connect - settings\", settings);\n\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    logger.log(\"api - connect - logString\", logString);\n\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logger.log(\"api - logStream.onopen called\");\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      logger.log(\"api - logStream.onerror - ERROR\", data);\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    logger.log(\"api - connect - taskString\", taskString);\n\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      logger.log(\"api - taskStream.onopen called\");\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      logger.log(\"api - taskStream.onerror - ERROR\", data);\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (connectionString) => {\n    logger.log(\"api - getYAML - connectionString\", connectionString);\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport logger from \"../logger\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleYAML from \"../data/yaml\";\nimport { transformLog } from \"./tranformLog\";\n\nlet _store;\n\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getInitialLevelOccurences() {\n  let occurences = {\n    lastLog: 0,\n    levels: {},\n  };\n  CHART_LEVELS.forEach((level) => {\n    occurences.levels[level] = 0;\n  });\n  return occurences;\n}\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected: {},\n      hovered: {},\n      scale: 1,\n      nodes: {\n        gateway: {\n          id: \"gateway\",\n          label: \"gateway\",\n          ports: {\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          },\n          properties: {},\n          position: { x: 629, y: 72 },\n        },\n      },\n      links: {},\n      offset: { x: 0, y: 0 },\n    },\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: {},\n    currentTab: \"logStream\",\n  };\n}\n\nif (window.location.hostname === \"localhost\") logger.enable();\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    window.peakLogs = this.getLogs;\n    window.peakStore = () => console.log(_store);\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_EXAMPLE:\n        this.loadExample(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async (yamlSTRING) => {\n    logger.log(\"initFlowChart - yamlString\", yamlSTRING);\n    let flow;\n    const { settings } = _store;\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n\n    if (yamlSTRING) {\n      flow = parseYAML(yamlSTRING);\n    } else {\n      try {\n        let str = await api.getYAML(connectionString);\n        flow = parseYAML(str);\n      } catch (e) {\n        logger.log(\"initFlowChart - parseYAML[API] ERROR\", e);\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    logger.log(\"initFlowChart - flow\", flow);\n    logger.log(\"initFlowChart - canvas\", canvas);\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status, message) => {\n    logger.log(\"handleLogConnectionStatus - status\", status);\n    logger.log(\"handleLogConnectionStatus - message\", message);\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n      return this.showBanner(message, \"error\");\n    }\n  };\n\n  handleNewLog = (message) => {\n    const { data } = message;\n    const log = transformLog(data);\n\n    log.unixTime = parseInt(log.created);\n    log.timestamp = new Date(log.unixTime * 1000);\n    log.formattedTimestamp = log.timestamp.toLocaleString();\n    log.idx = _store.logs.length;\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = async () => {\n    this.updateChartInterval = setInterval(this.updateSummaryCharts, 1000);\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    let x = 0;\n    let y = 0;\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n        x = value.position.x * -1 + 40;\n        y = value.position.y * -1 + 100;\n      }\n    }\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    logger.log(\"importCustomYAML - customYAML\", customYAML);\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadExample = (exampleName) => {\n    const flow = exampleYAML[exampleName];\n    this.initFlowChart(flow);\n    this.emit(\"update-flowchart\");\n  };\n\n  saveSettings = (settings) => {\n    logger.log(\"saveSettings - settings\", settings);\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, modalParams } = data;\n    _store.modal = modal;\n    _store.modalParams = modalParams || {};\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = {};\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    let chartData = [];\n    let now = parseInt(new Date() / 1000);\n    for (let i = now - numSeconds; i < now; i++) {\n      chartData.push(\n        _store.logLevelOccurences[i] ? _store.logLevelOccurences[i] : emptyItem\n      );\n    }\n    return chartData;\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n\n  getStoreCopy = () => {\n    return _.cloneDeep(_store);\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import { fromUnixTime } from \"date-fns\";\nimport { nanoid } from \"nanoid\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\nexport type RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n};\n\nexport type ProcessedLog = RawLog & {\n  createdDate: Date;\n  id: string;\n};\n\nfunction transformLog(log: RawLog) {\n  const { created } = log;\n  const createdDate = fromUnixTime(created);\n  const id = nanoid();\n  return { ...log, createdDate, id };\n}\n\nexport { transformLog };\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarToggle from \"./NavbarToggle\";\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainNavbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userActionsVisible: false,\n      connected: Store.getConnectionStatus(),\n      user: Store.getUser(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getData);\n  };\n\n  getData = () => {\n    const connected = Store.getConnectionStatus();\n    const user = Store.getUser();\n    this.setState({ connected, user });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  toggleUserActions = () => {\n    this.setState({\n      userActionsVisible: !this.state.userActionsVisible,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n  render = () => {\n    const { connected, user, userActionsVisible } = this.state;\n    return (\n      <div className=\"main-navbar bg-white sticky-top\">\n        <Container fluid className=\"p-0\">\n          <Navbar\n            type=\"light\"\n            className=\"align-items-stretch flex-md-nowrap p-0\"\n          >\n            <NavbarSpacer />\n            <Nav navbar className=\"border-left flex-row\">\n              <Notifications reconnect={this.reconnect} connected={connected} />\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={this.toggleUserActions}\n                logOut={this.logOut}\n              />\n            </Nav>\n            <NavbarToggle toggleSidebar={this.toggleSidebar} />\n          </Navbar>\n        </Container>\n      </div>\n    );\n  };\n}\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DashboardLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function CookiesBanner({ show, acceptCookies }) {\n  return (\n    <div className={`cookies-banner ${show ? \"\" : \"hidden\"}`}>\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function InfoBanner({ data }) {\n  return data ? (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nexport default function ConnectionBanner({ loading, connected, reconnect }) {\n  return loading || connected ? (\n    \"\"\n  ) : (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"msg\", \"unixTime\"];\n\nexport default ({ open, closeModal, modalParams }) => {\n  const log = modalParams.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.msg}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"msg\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport CookiesBanner from \"../components/Common/CookiesBanner\";\nimport InfoBanner from \"../components/Common/InfoBanner\";\nimport ConnectionBanner from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    const loggerEnabled = logger.isEnabled();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      connected,\n      modalParams,\n      loggerEnabled,\n    });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      connected,\n      loading,\n      modalParams,\n      loggerEnabled,\n    } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar />\n            <InfoBanner data={banner} />\n            <ConnectionBanner\n              loading={loading}\n              connected={connected}\n              reconnect={this.reconnect}\n            />\n            {children}\n            <CookiesBanner\n              show={!acceptedCookies}\n              acceptCookies={this.acceptCookies}\n            />\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <LogDetails\n          open={modal === \"logDetails\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n          modalParams={modalParams}\n        />\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nexport default function PageTitle({ title, subtitle, className, ...attrs }) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default function SidebarItem(props) {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport lunr from \"lunr\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  constructor(props) {\n    super();\n    let node = {};\n    if (props.chart.selected.id) {\n      const selectedNode = props.chart.nodes[props.chart.selected.id];\n      node = this.getInitialNodeState(selectedNode);\n    }\n\n    this.state = {\n      availableProperties: Store.getAvailableProperties(),\n      node,\n      searchResults: [],\n      searchQuery: \"\",\n    };\n  }\n\n  getInitialNodeState = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).forEach((key) => {\n      properties[key] = node.properties[key];\n    });\n\n    return { label, id: node.id, properties, newProperties };\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id) return;\n\n    this.setState({ searchResults: [], searchQuery: \"\" });\n\n    if (!id) return;\n\n    if (type === \"node\" && id !== this.state.node.id) {\n      const node = nodes[id];\n      this.setState({ node: this.getInitialNodeState(node) });\n    }\n  };\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.searchProperties);\n  };\n\n  searchProperties = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ searchResults: false });\n    this.indexProperties();\n    let searchResults = this.index.search(`${query} ${query}*`);\n    this.setState({ searchResults });\n  };\n\n  indexProperties = () => {\n    const { availableProperties } = this.state;\n    this.index = lunr(function () {\n      this.field(\"name\");\n\n      availableProperties.forEach((prop, idx) => {\n        prop.id = parseInt(idx);\n        this.add(prop);\n      });\n    });\n  };\n\n  renderEditNode = () => {\n    const {\n      availableProperties,\n      node,\n      searchQuery,\n      searchResults,\n    } = this.state;\n    let label =\n      typeof node.label === \"undefined\"\n        ? node.properties.name\n        : node.label || \"\";\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>Pod Name</b>\n          </p>\n          <FormControl\n            spellCheck={false}\n            value={label}\n            onChange={(e) => this.updateLabel(e.target.value)}\n            className=\"pod-name-input\"\n          />\n        </div>\n        <p className=\"mb-0 px-2\">\n          <b>Properties</b>\n        </p>\n        <div className=\"m-2\">\n          <FormControl\n            spellCheck={false}\n            placeholder=\"search properties...\"\n            value={searchQuery}\n            onChange={this.updateSearchQuery}\n          />\n        </div>\n        <div className=\"property-table flex-fill mx-2\">\n          {searchQuery && searchResults ? (\n            searchResults.map((result) => {\n              const property = availableProperties[result.ref];\n              const { name, type } = property;\n              const value = node.properties[name];\n\n              if (typeof value == \"undefined\")\n                return (\n                  <div key={name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={type}\n                      value={node.newProperties[name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                );\n              return (\n                <div key={name} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{name}</p>\n                  <FormControl\n                    spellCheck={false}\n                    value={value || \"\"}\n                    onChange={(e) =>\n                      this.updateExistingValue(name, e.target.value)\n                    }\n                    className=\"property-value-input\"\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              {Object.keys(node.properties).map((prop) => {\n                const value = node.properties[prop];\n                if (prop === \"name\") return \"\";\n                return (\n                  <div key={prop} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{prop}</p>\n                    <FormControl\n                      spellCheck={false}\n                      value={value || \"\"}\n                      onChange={(e) =>\n                        this.updateExistingValue(prop, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    />\n                  </div>\n                );\n              })}\n              {availableProperties.map((property) =>\n                typeof node.properties[property.name] == \"undefined\" ? (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={property.type}\n                      value={node.newProperties[property.name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(property.name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Pod\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId];\n    const nodeTo = nodes[link.to.nodeId];\n\n    let choices = Object.keys(nodes).map((id) => {\n      return { label: nodes[id].label || nodes[id].properties.name, id };\n    });\n\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Edit Connection</b>\n        </h5>\n        <div className=\"flex-fill px-2\">\n          <div className=\"p-2 mb-1\">\n            <p className=\"mb-1\">\n              <b>From</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, e.target.value, nodeTo.id)\n              }\n              value={nodeFrom.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n            <p className=\"mb-1\">\n              <b>To</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, nodeFrom.id, e.target.value)\n              }\n              value={nodeTo.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Connection\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderPodMenu = () => {\n    return (\n      <div className=\"d-flex flex-column h-100\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Add Pods</b>\n        </h5>\n        <div className=\"p-3 scrollable flex-fill\">\n          <SidebarItem\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={{}}\n          />\n          {defaultPods.map((pod, idx) => (\n            <SidebarItem\n              key={idx}\n              ports={{\n                inPort: {\n                  id: \"inPort\",\n                  type: \"input\",\n                },\n                outPort: {\n                  id: \"outPort\",\n                  type: \"output\",\n                },\n              }}\n              properties={pod}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {hasSelected\n          ? selected.type === \"link\"\n            ? this.renderEditLink(links[selected.id], nodes)\n            : this.renderEditNode(nodes[selected.id])\n          : this.renderPodMenu()}\n      </Card>\n    );\n  };\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\n\nexport default function ExampleSelection(props) {\n  return (\n    <div className=\"example-selection\">\n      <DropdownButton\n        as={ButtonGroup}\n        title=\"Load Example\"\n        id=\"bg-nested-dropdown\"\n      >\n        <Dropdown.Item onClick={() => props.loadExample(\"pokedex\")}>\n          Pokedex Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"southpark\")}>\n          South Park Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"flower\")}>\n          Flower Search Query\n        </Dropdown.Item>\n      </DropdownButton>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport ExampleSelection from \"../components/FlowChart/ExampleSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart();\n    this.state = { chart, showOverlay: false };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateChart({ ...chart, ...newChart });\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateChart = (chart) => {\n    this.setState({ chart });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId, chart }) => {\n    if (fromPortId !== \"outPort\" || toPortId !== \"inPort\") return false;\n    if (fromNodeId === toNodeId) return false;\n    return true;\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadExample = (example) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_EXAMPLE,\n      payload: example,\n    });\n  };\n\n  render = () => {\n    const { chart, showOverlay } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <ExampleSelection loadExample={this.loadExample} />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _levels = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass ChartBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"top\",\n        labels: {\n          padding: 10,\n          boxWidth: 15,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              callback: this.getXAxisLabel,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Occurences\",\n            },\n            gridLines: {\n              labelString: \"hello\",\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: function (value) {\n                if (Number.isInteger(value)) {\n                  return value;\n                }\n              },\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: this.getParsedDatasets(),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: this.getParsedDatasets(),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  getXAxisLabel = (value, index, values) => {\n    if (index === 0) return values.length + \"s ago\";\n    else if (index === parseInt(values.length / 2)) return index + \"s ago\";\n    return;\n  };\n\n  getParsedDatasets = () => {\n    const { data } = this.props;\n    const datasets = Object.keys(_levels).map((level) => {\n      const levelData = data.map((tick) => tick.levels[level]);\n      return {\n        label: level,\n        fill: \"start\",\n        borderWidth: 1.5,\n        borderColor: _levels[level].borderColor,\n        backgroundColor: _levels[level].backgroundColor,\n        data: levelData,\n      };\n    });\n    return datasets;\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass LogLevelSummaryChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelCharts(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    const { chartData } = this.state;\n    let index = activePoints[0] && activePoints[0]._index;\n    console.log(\"index:\", index);\n\n    if (index && typeof index !== \"undefined\")\n      Dispatcher.dispatch({\n        actionType: Constants.SHOW_LOG_AT_INDEX,\n        payload: chartData[index].lastLog,\n      });\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header>Log Occurences by Level</Card.Header>\n        <Card.Body className=\"d-none d-md-block pb-2 pt-0\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelSummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport PieChart from \"./PieChart\";\n\nclass LogLevelPieChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelOccurences(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelOccurences();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header className=\"text-center\">Log Levels</Card.Header>\n        <Card.Body className=\"pt-0\">\n          <PieChart data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelPieChart;\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: string };\n\nconst customStyles = {\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n} & SelectProps;\n\nfunction MultiFilterSelect({ onFilterChange, options, ...rest }: Props) {\n  return (\n    <Select\n      onChange={(val) =>\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val])\n      }\n      isMulti\n      options={options}\n      styles={customStyles}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","const applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\nexport { applyFilters };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: any[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, msg, levelname, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useEffect, useRef } from \"react\";\n\nexport type UseTimeoutFnReturn = [() => boolean | null, () => void, () => void];\n\nfunction useTimeoutFn(fn: Function, ms: number = 0): UseTimeoutFnReturn {\n  const ready = useRef<boolean | null>(false);\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const callback = useRef(fn);\n\n  const isReady = useCallback(() => ready.current, []);\n\n  const set = useCallback(() => {\n    ready.current = false;\n    timeout.current && clearTimeout(timeout.current);\n\n    timeout.current = setTimeout(() => {\n      ready.current = true;\n      callback.current();\n    }, ms);\n  }, [ms]);\n\n  const clear = useCallback(() => {\n    ready.current = null;\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  // update ref when function changes\n  useEffect(() => {\n    callback.current = fn;\n  }, [fn]);\n\n  // set on mount, clear on unmount\n  useEffect(() => {\n    set();\n\n    return clear;\n  }, [ms]);\n\n  return [isReady, clear, set];\n}\nexport { useTimeoutFn };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useMiniSearch } from \"react-minisearch\";\nimport { usePrevious } from \"./usePrevious\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { applyFilters } from \"./useFilters\";\nimport { LogItem } from \"./LogItem\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport {\n  serializeLogsToCSVBlob,\n  serializeLogsToJSONBlob,\n  serializeLogsToTextBlob,\n} from \"../../helpers\";\nimport { saveAs } from \"file-saver\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\nconst ROW_SIZE = 30;\n\nconst fields = [\"filename\", \"funcName\", \"msg\", \"name\", \"module\", \"pathname\"];\nconst miniSearchOptions = { fields };\n\nconst generateFormatFileName = (format: Format) =>\n  `jina-logs-${new Date()}.${format}`;\n\ntype Format = \"json\" | \"csv\" | \"txt\";\n\ntype Props = {\n  data: ProcessedLog[];\n  showLogDetails: (log: ProcessedLog) => void;\n};\n\nconst itemKey = (index: number, data: { items: ProcessedLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsTable({ data, showLogDetails }: Props) {\n  const [scrolledToBottom, setScrolledToBottom] = React.useState(true);\n  const windowListRef = useRef<any>();\n  const [selectedSources, setSelectedSources] = React.useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = React.useState<\n    { value: ProcessedLog[\"levelname\"] }[]\n  >([]);\n  const [searchString, setSearchString] = React.useState(\"\");\n  const { search, searchResults, addAllAsync } = useMiniSearch(\n    data,\n    miniSearchOptions\n  );\n  const buffer = useRef<any[]>([]);\n  const previousLength = usePrevious(data.length);\n  useEffect(() => {\n    if (previousLength && previousLength! > 0) {\n      const newLog = data[previousLength! - 1];\n      addAllAsync([newLog]);\n      buffer.current.push(newLog);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousLength, searchString]);\n\n  const unfiltered = searchString ? searchResults : data;\n\n  const resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n  useEffect(() => {\n    if (windowListRef.current && scrolledToBottom) {\n      windowListRef.current.scrollToItem(resultData.length);\n    }\n  }, [resultData.length, scrolledToBottom]);\n  useDebounce(\n    () => {\n      search(searchString);\n    },\n    1000,\n    [searchString]\n  );\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-3\">\n        <Row>\n          <Col md=\"8\">\n            <MultiFilterSelect\n              options={toOption(sources)}\n              onFilterChange={setSelectedSources}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Logsources\"\n            />\n            <MultiFilterSelect\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Levels\"\n            />\n            <DropdownButton\n              as={ButtonGroup}\n              title=\"Download Logs\"\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToCSVBlob(data),\n                    generateFormatFileName(\"csv\")\n                  )\n                }\n              >\n                Download as CSV\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToJSONBlob(data),\n                    generateFormatFileName(\"json\")\n                  )\n                }\n              >\n                Download as JSON\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToTextBlob(data),\n                    generateFormatFileName(\"txt\")\n                  )\n                }\n              >\n                Download as TXT\n              </Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col md=\"4\">\n            <Form.Control\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={(e) => {\n                setSearchString(e.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body\n        className=\"log-stream-container p-1 border-top\"\n        id=\"log-stream-container\"\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() =>\n              windowListRef.current.scrollToItem(resultData.length)\n            }\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        <AutoSizer>\n          {({ height, width }) => {\n            const firstCol = 300;\n            const secondCol = 300;\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - resultData.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={resultData.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: resultData,\n                  columns: { firstCol, secondCol, thirdCol },\n                  showLogDetails,\n                }}\n                ref={windowListRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import React from \"react\";\nfunction usePrevious(value: any) {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\nexport { usePrevious };\n","import { DependencyList, useEffect } from \"react\";\nimport { useTimeoutFn } from \"./useTimeoutFn\";\n\nexport type UseDebounceReturn = [() => boolean | null, () => void];\n\nfunction useDebounce(\n  fn: Function,\n  ms: number = 0,\n  deps: DependencyList = []\n): UseDebounceReturn {\n  const [isReady, cancel, reset] = useTimeoutFn(fn, ms);\n\n  useEffect(reset, deps);\n\n  return [isReady, cancel];\n}\n\nexport { useDebounce };\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport LogLevelSummaryChart from \"../components/LogStream/LogLevelSummaryChart\";\nimport LogLevelPieChart from \"../components/LogStream/LogLevelPieChart\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store, Dispatcher, Constants } from \"../flux\";\nconst showLogDetails = (log) => {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_MODAL,\n    payload: { modal: \"logDetails\", modalParams: { log } },\n  });\n};\n\nfunction LogsView() {\n  const [logs, setLogs] = useState([]);\n  function getData() {\n    const newLogs = Store.getLogs();\n    setLogs([...newLogs]);\n  }\n  useEffect(() => {\n    Store.on(\"update-logs\", getData);\n    return () => Store.removeListener(\"update-logs\", getData);\n  }, []);\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Log Stream\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\">\n            <LogLevelSummaryChart />\n          </Col>\n          <Col md=\"2\" className=\"mb-4\">\n            <LogLevelPieChart />\n          </Col>\n        </Row>\n        <LogsTable data={logs} showLogDetails={showLogDetails} />\n      </div>\n    </Container>\n  );\n}\n\nexport { LogsView };\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nexport default function ElapsedCard({ elapsed }) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState(Store.getSettings());\n  const [updates, setUpdates] = useState({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting, value) {\n    const newUpdates = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\nexport default function StarRating({ rating, userRated, rate }) {\n  const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n  const stars = getStars(formatted, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n}\n\nconst getStars = (amount, rate) => {\n  let stars = [];\n  let integer = parseInt(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default function ImageCard({ image }) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function BuildHistory(props) {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default function ImageDetails({ image }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReadMe({ readme, documentation }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default function CopyCommand(props) {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReviewCard({ review }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default function ImageReviews({ reviews, newReview }) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nexport default function HelpCard({ title, content, icon, theme, link }) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from \"../components/Common/HelpCard\";\nimport PageTitle from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout, IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport { LogsView } from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n  },\n];\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getData();\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, modalParams: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nexport default () => (\n  <Router basename={\"/\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker((props) => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  timeout: 15000,\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}