{"version":3,"sources":["logger.ts","helpers.ts","flux/dispatcher.ts","settings.ts","flux/constants.ts","flux/tranformLog.ts","flux/index.ts","components/Layout/MainNavbar/NavbarSpacer.tsx","components/Layout/MainNavbar/NavbarToggle.tsx","components/Layout/MainNavbar/ConnectionIndicator.tsx","components/Layout/MainNavbar/UserActions.tsx","components/Layout/MainNavbar/MainNavbar.tsx","components/Layout/MainSidebar/SidebarMainNavbar.tsx","components/Layout/MainSidebar/SidebarNavItem.tsx","components/Layout/MainSidebar/SidebarNavItems.tsx","components/Layout/MainSidebar/MainSidebar.tsx","components/Layout/MainFooter.tsx","components/Common/CookiesBanner.tsx","components/Common/InfoBanner.tsx","components/Common/ConnectionBanner.tsx","modals/PasteYAML.tsx","modals/WriteReview.tsx","modals/LogDetails.tsx","layouts/IconSidebar.tsx","components/Common/PageTitle.tsx","components/FlowChart/CommandBar.tsx","components/FlowChart/ChartNode.tsx","components/FlowChart/SidebarItem.tsx","components/FlowChart/Sidebar.tsx","components/FlowChart/NodePort.tsx","components/FlowChart/FlowSelection.tsx","views/FlowView.tsx","components/LogStream/BarChartBase.tsx","components/LogStream/LogLevelSummaryChart.tsx","components/LogStream/PieChartBase.tsx","components/LogStream/LogLevelPieChart.tsx","components/Common/MultiFilterSelect.tsx","components/LogStream/LogItem.tsx","components/LogStream/LogsTableHeader.tsx","hooks/useTimeoutFn.ts","components/LogStream/LogsTable.tsx","hooks/useDebounce.ts","views/LogsView.tsx","components/Task/ElapsedCard.tsx","components/Task/ProgressCard.tsx","components/Task/SpeedCard.tsx","components/Task/BarChartCard.tsx","components/Task/QueriesPerSecond.tsx","views/TaskView.tsx","components/Settings/options.ts","components/Settings/FormItem.tsx","components/Settings/Settings.tsx","views/Settings.tsx","components/Hub/StarRating.tsx","components/Hub/ImageCard.tsx","views/HubView.tsx","components/Hub/BuildHistory.tsx","components/Hub/ImageDetails.tsx","components/Hub/Readme.tsx","components/Hub/CopyCommand.tsx","components/Hub/ReviewCard.tsx","components/Hub/ImageReviews.tsx","views/PackageView.tsx","components/Common/HelpCard.tsx","views/NotFound.tsx","routes.js","views/LogIn.tsx","withTracker.tsx","views/FallbackPage.tsx","App.tsx","theme.ts","index.tsx","flux/api.ts","data/exampleFlows.ts","flux/store.ts","data/sidebar-nav-items.ts","flux/config.ts"],"names":["handleErrorMessage","msg","url","line","logger","log","pushLog","data","window","logs","push","arg","logsEnabled","args","arguments","console","isEnabled","enable","_navigator","i","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","content","length","JSON","stringify","filename","Date","blob","Blob","type","saveAs","YAML","require","settings","propertyList","toBlob","serializeLogsToCSVBlob","reduce","acc","created","formattedTimestamp","name","process","levelname","lineno","module","funcName","pathname","serializeLogsToCSV","serializeLogsToJSONBlob","fileContent","serializeLogsToJSON","serializeLogsToTextBlob","serializeLogsToText","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","x","y","nodes","links","selected","hovered","scale","with","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","parents","Array","isArray","nodeFrom","linkId","link","color","from","nodeId","portId","to","parseInt","depthPopulation","offsetX","nodeOffset","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","prop","formatAsYAML","chart","chartWith","needsByPodLabel","values","curr","nodeLabelsByPortId","getNodeLabelsByPortId","outPort","neededBy","inPort","arr","podProperties","entries","key","propValue","propName","decodePropValue","output","board","formatSeconds","numSeconds","Math","floor","formatBytes","numBytes","toFixed","Dispatcher","DispatcherBase","Constants","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_FLOW","SHOW_POD_IN_FLOW","CREATE_NEW_FLOW","UPDATE_FLOW","DUPLICATE_FLOW","DELETE_FLOW","transformLog","idx","createdDate","fromUnixTime","nanoid","unixTime","timestamp","toLocaleString","Store","NavbarSpacer","className","NavbarToggle","toggleSidebar","onClick","ConnectionIndicator","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","DropdownMenu","right","small","open","Link","MainNavbar","usesAuth","usesConnection","useState","setUserActionsVisible","fluid","navbar","isVisible","href","style","lineHeight","maxWidth","item","hasSubItems","items","path","location","hash","substring","active","matches","match","startsWith","RouteNavLink","htmlBefore","dangerouslySetInnerHTML","__html","title","htmlAfter","top","map","subItem","navItems","nav","SidebarNavItem","MainSidebar","menuVisible","sidebarNavItems","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","CookiesBanner","acceptCookies","Button","InfoBanner","message","ConnectionBanner","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","inputRef","closeModal","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","as","rows","submitReview","hiddenKeys","modalParams","xs","filter","includes","IconSidebarLayout","props","componentWillUnmount","removeListener","getData","getUser","modal","getModal","getModalParams","loading","isLoading","banner","getBanner","getConnectionStatus","getMenuState","getSidebarItems","setState","localStorage","setItem","String","acceptedCookies","dispatch","actionType","yamlString","payload","imageId","state","storeCopy","getStoreCopy","render","children","LogDetails","PasteYAML","WriteReview","getItem","on","React","Component","PageTitle","subtitle","sm","ChartNode","importChart","copyChart","exportImage","ButtonGroup","disabled","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","event","dataTransfer","setData","REACT_FLOW_CHART","ReadOnly","duplicateFlow","EditLink","updateLink","deleteSelection","nodeFromId","nodeToId","choices","FormControl","onChange","e","choice","EditNode","updateLabel","updateNewValue","updateExistingValue","availableProperties","searchQuery","setSearchQuery","filteredProperties","setFilteredProperties","useEffect","results","property","toLowerCase","spellCheck","searchString","newProperties","PodMenu","defaultPods","FlowChartSidebar","readonly","updateNode","selectedId","selectedType","setNode","selectedNode","parseNode","Card","newNode","_","cloneDeep","NodePort","data-html2canvas-ignore","SelectionIndicator","show","TitleConnectionIndicator","DeleteFlowButton","deleteFlow","EditFlowsButton","isEditing","toggleEditing","FlowSelection","flows","loadFlow","selectedFlowId","createNewFlow","setIsEditing","userFlows","exampleFlows","currentFlow","Toggle","Menu","Item","Header","currentIsEditing","flowId","flow","syncEvents","FlowView","componentDidMount","chartContainer","querySelector","preventDefault","extension","captureOverlay","classList","add","showCaptureOverlay","setTimeout","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","image","toDataURL","getElementById","setAttribute","click","showOverlay","getFlowchart","flowType","getSelectedFlowId","getFlows","newChart","updateFlow","fromId","toId","actionCallbacks","onDeleteKey","syncFlow","selectNode","copyChartAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","stopPropagation","yaml","display","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","getAvailableProperties","actions","obj","action","newChartTransformer","_levels","INFO","borderColor","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","getParsedDatasets","level","levelData","tick","levels","fill","borderWidth","getLabels","amount","labels","ChartBase","height","numTicks","canvasRef","useRef","chartInstance","setChartInstance","onClickChart","activePoints","getElementsAtEvent","getXAxisLabel","index","getYAxisLabel","Number","isInteger","current","chartOptions","animation","duration","events","maintainAspectRatio","responsive","legend","boxWidth","tooltips","enabled","elements","point","radius","hitRadius","scales","xAxes","stacked","ticks","maxRotation","callback","yAxes","scaleLabel","labelString","gridLines","borderDash","zeroLineColor","drawBorder","suggestedMin","autoSkip","maxTicksLimit","chartConfig","datasets","options","newChartInstance","ChartElement","chartData","update","LogLevelSummaryChart","memo","showLog","Body","prevProps","nextProps","lastTimestamp","_colors","background","PieChartBase","getColor","names","mode","LogLevelPieChart","customStyles","container","provided","selectProps","option","styles","cursor","control","MultiFilterSelect","onFilterChange","rest","val","isMulti","LogItem","columns","showLogDetails","logData","logName","levelInitial","firstCol","secondCol","thirdCol","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","LogsTableHeader","useTimeoutFn","fn","ms","ready","timeout","isReady","useCallback","set","clearTimeout","clear","miniSearchOptions","fields","generateFormatFileName","itemKey","toOption","arrayLike","LogsTable","scrolledToBottom","setScrolledToBottom","windowListRef","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","setSearchString","useMiniSearch","search","searchResults","addAllAsync","buffer","previousLength","usePrevious","newLog","resultData","result","filters","sources","Set","scrollToItem","deps","cancel","reset","useDebounce","DropdownButton","onScroll","scrollOffset","itemCount","itemSize","itemData","chartUpdateInterval","logsUpdateInterval","ElapsedCard","elapsed","task_name","seconds","ProgressCard","progress","hoverBorderColor","cutoutPercentage","percent","num_bars","bar_len","newData","currentRequest","SpeedCard","speed","history","maxValue","max","minValue","min","getChartOptions","difference","layout","tension","suggestedMax","getChartConfig","newChartData","unit","BarChartCard","currentTab","setCurrentTab","tooltipItem","xLabel","datasetIndex","afterLabel","d","sent","pointBackgroundColor","pointHoverBackgroundColor","received","getChartData","newOptions","QueriesPerSecondCard","qps","TaskView","taskData","getTaskData","Container","QueriesPerSecond","messages","bytes","lastUpdate","lastUpdateChart","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","getSettings","original","setOriginal","updates","setUpdates","expanded","setExpanded","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","getStars","rate","handleRatingClick","stars","integer","remainder","j","StarRating","rating","userRated","ImageCard","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","HubView","getHubImages","images","sortBy","sortType","setCategory","category","updateSearch","q","sort","BuildHistory","buildHistory","build","formattedCreated","buildSize","os","architecture","ImageDetails","version","documentation","source","license","vendor","ReadMe","readme","CopyCommand","copyCode","imageVar","repoTags","code","language","atomOneLight","ReviewCard","review","ImageReviews","newReview","PackageView","getImageData","a","getHubImage","imageData","readmeHTML","windowHash","windowParams","indexOf","URLSearchParams","get","HelpCard","icon","NotFound","exact","IconSidebar","component","hasNewLogs","getLogs","setLogs","getLogLevelOccurences","logLevelOccurrences","setLogLevelOccurrences","getLogLevelCharts","logLevelCharts","setLogLevelCharts","updateChart","newCharts","checkForNewLogs","newLogs","newOccurrences","updateLogs","onNewLogs","setInterval","clearInterval","_index","showLogInTable","lastLog","hubURL","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","pageview","BASENAME","REACT_APP_BASENAME","HOC","this","currentPage","nextPage","FallbackPage","resetErrorBoundary","App","basename","routes","route","FallbackComponent","onReset","init","palette","default","primary","main","secondary","warning","success","info","ReactDOM","logStream","taskStream","hub","axios","create","baseURL","withCredentials","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","close","EventSource","onopen","onmessage","m","onerror","taskString","profile","getProfile","getYAML","connectionString","getImages","getImage","postRating","post","postReview","searchHub","pokedex","flower","southpark","CHART_LEVELS","getExampleFlows","parsed","getUserFlows","storedFlows","isEmpty","_userFlow","getInitialLevelOccurences","occurences","getInitialStore","shutdown","selectedFlow","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","_updateTaskInterval","_bannerTimeout","_store","hostname","registerActions","showModal","showBanner","importCustomYAML","showLogAtIndex","saveSettings","showPodByLabel","clearIntervals","initFlowChart","initLogStream","initHub","initUser","emit","api","connectedFlow","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","status","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","msgData","bytesData","b","slice","parseFloat","shift","flowchart","customYAML","newFlow","saveFlowsToStorage","flowNumbers","f","largestNumber","omit","nonExampleFlows","toSave","showError","reload","hideBanner","getCurrentTab","getLogSources","getLogLevels","getSummaryCharts","emptyItem","step","now","occurence","getActivePanel","getIndexedLog","register","peakLogs","peakStore","EventEmitter"],"mappings":"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","file":"static/js/main.2ddd1d85.chunk.js","sourcesContent":["import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg: any, url: any, line: any) {\n  // @ts-ignore\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nfunction pushLog(data: any) {\n  (window as any).logs.push(data);\n}\n\nfunction clearLogs() {\n  (window as any).logs = [];\n}\n\nconst logger = {\n  log: function (...arg: any) {\n    if (!(window as any).logsEnabled) return;\n    let args = [...(arguments as any)];\n    console.log(...args);\n    pushLog(args);\n  },\n  isEnabled: function () {\n    return (window as any).logsEnabled;\n  },\n  enable: function () {\n    const _navigator: any = {};\n    for (let i in window.navigator)\n      _navigator[i] = (window as any).navigator[i];\n    clearLogs();\n    pushLog(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage as any);\n    (window as any).logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage as any);\n    (window as any).logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    (window as any).logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = (window as any).logsFormat || \"json\";\n    const logs = (window as any).logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","// @ts-nocheck\nimport { ProcessedLog } from \"./flux/tranformLog\";\n\ntype PodPropertyType = \"str\" | \"int\" | \"bool\" | \"SocketType\" | \"ReplicaType\";\ntype PodProperty = {\n  name: string;\n  type: PodPropertyType;\n};\ntype PropertyMap = { [key: string]: PodPropertyType };\n\nconst YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList: PodProperty[] = require(\"./data/podProperties.json\");\n\nfunction toBlob(content: string) {\n  return new Blob([content], { type: \"text,plain;charset=utf-8\" });\n}\nfunction serializeLogsToCSV(logs: ProcessedLog[]): string {\n  const columns =\n    \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcName},${log.pathname}\\n`;\n    return acc;\n  }, columns);\n  return fileContent;\n}\n\nfunction serializeLogsToJSON(logs: ProcessedLog[]): string {\n  const fileContent = logs.reduce((acc, log, i) => {\n    acc += JSON.stringify(log) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    return acc;\n  }, \"\\n\");\n  return `[${fileContent}]`;\n}\n\nfunction serializeLogsToText(logs: ProcessedLog[]): string {\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    return acc;\n  }, \"\");\n  return fileContent;\n}\n\nconst serializeLogsToCSVBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToCSV(logs));\nconst serializeLogsToJSONBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToJSON(logs));\nconst serializeLogsToTextBlob = (logs: ProcessedLog[]) =>\n  toBlob(serializeLogsToText(logs));\n\nconst propertyTypes: PropertyMap = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str: string) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR: string) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n    with: {},\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\nconst getNodeLabelsByPortId = ({ from, to }, nodes) => ({\n  [from.portId]: nodes[from.nodeId].label || nodes[from.nodeId].properties.name,\n  [to.portId]: nodes[to.nodeId].label || nodes[to.nodeId].properties.name,\n});\nconst decodePropValue = (propName, propValue) =>\n  propertyTypes[propName] === \"bool\" ? propValue === \"true\" : propValue;\nconst unpackIfLengthOne = (arr) =>\n  Array.isArray(arr) && arr.length === 1 ? arr[0] : arr;\n\nexport function formatAsYAML(chart) {\n  const { with: chartWith, nodes, links } = chart;\n\n  const needsByPodLabel = Object.values(links).reduce((acc, curr) => {\n    const nodeLabelsByPortId = getNodeLabelsByPortId(curr, nodes);\n    const needs = nodeLabelsByPortId.outPort;\n    const neededBy = nodeLabelsByPortId.inPort;\n\n    if (!acc[neededBy]) {\n      acc[neededBy] = [];\n    }\n    acc[neededBy].push(needs);\n    return acc;\n  }, {});\n\n  const pods = Object.values(nodes).reduce((acc, node) => {\n    const { label } = node;\n    if (!label) return acc;\n\n    const podProperties = Object.entries(node.properties).reduce(\n      (acc, [key, propValue]) => {\n        acc[key] = decodePropValue(key, propValue);\n        return acc;\n      },\n      {}\n    );\n    if (needsByPodLabel[label]) {\n      podProperties.needs = unpackIfLengthOne(needsByPodLabel[label]);\n    }\n\n    acc[label] = { ...podProperties };\n    return acc;\n  }, {});\n\n  const canvas = Object.values(nodes).reduce((acc, node) => {\n    const {\n      position: { x, y },\n    } = node;\n    acc[node.label] = { x, y };\n    return acc;\n  }, {});\n\n  const output = { with: { ...chartWith, board: { canvas } }, pods };\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds: number): string {\n  let minute = 60;\n  let hour = 60 * minute;\n\n  return numSeconds < minute\n    ? `${Math.floor(numSeconds)}s`\n    : numSeconds < hour\n    ? `${Math.floor(numSeconds / minute)}m ${Math.floor(numSeconds % minute)}s`\n    : `${Math.floor(numSeconds / hour)}h ${Math.floor(\n        (numSeconds % hour) / minute\n      )}m ${Math.floor(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes: number): string {\n  return numBytes < 1024\n    ? `${numBytes} Bytes`\n    : numBytes < 1024 ** 2\n    ? `${(numBytes / 1024).toFixed(1)} KB`\n    : numBytes < 1024 ** 3\n    ? `${(numBytes / 1024 ** 2).toFixed(1)} MB`\n    : `${(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth): number {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n\nexport {\n  serializeLogsToCSVBlob,\n  serializeLogsToTextBlob,\n  serializeLogsToJSONBlob,\n};\n","const { Dispatcher: DispatcherBase } = require(\"flux\");\n\nexport const Dispatcher = new DispatcherBase();\n","export const nodeOffset = {\n  x: 250,\n  y: 150,\n};\n","export const Constants = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_FLOW: \"LOAD_FLOW\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n  CREATE_NEW_FLOW: \"CREATE_NEW_FLOW\",\n  UPDATE_FLOW: \"UPDATE_FLOW\",\n  DUPLICATE_FLOW: \"DUPLICATE_FLOW\",\n  DELETE_FLOW: \"DELETE_FLOW\",\n};\n","import { fromUnixTime } from \"date-fns\";\nimport { nanoid } from \"nanoid\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\nexport type RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n};\n\nexport type ProcessedLog = RawLog & {\n  createdDate: Date;\n  id: string;\n  idx: number;\n  unixTime: number;\n  timestamp: Date;\n  formattedTimestamp: string;\n};\n\nfunction transformLog(log: RawLog, idx: number): ProcessedLog {\n  const { created } = log;\n  const createdDate = fromUnixTime(created);\n  const id = nanoid();\n  const unixTime = Math.floor(created);\n  const timestamp = new Date(unixTime * 1000);\n  const formattedTimestamp = timestamp.toLocaleString();\n  return {\n    ...log,\n    createdDate,\n    id,\n    idx,\n    unixTime,\n    timestamp,\n    formattedTimestamp,\n  };\n}\n\nexport { transformLog };\n","const { Dispatcher } = require(\"./dispatcher\");\nconst { Store } = require(\"./store\");\nconst { Constants } = require(\"./constants\");\nconst { transformLog } = require(\"./tranformLog\");\n\nexport { Dispatcher, Store, Constants, transformLog };\n","import React from \"react\";\n\nfunction NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n\nexport { NavbarSpacer };\n","import React from \"react\";\n\ntype Props = {\n  toggleSidebar: () => void;\n};\n\nfunction NavbarToggle({ toggleSidebar }: Props) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n\nexport { NavbarToggle };\n","import React from \"react\";\n// @ts-ignore\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\ntype Props = {\n  connected: boolean;\n  reconnect: () => void;\n};\n\nfunction ConnectionIndicator({ connected, reconnect }: Props) {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n\nexport { ConnectionIndicator };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n  // @ts-ignore\n} from \"shards-react\";\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  userActionsVisible: boolean;\n  user: User | null;\n  logOut: () => void;\n  toggleUserActions: () => void;\n};\n\nfunction UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}: Props) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n\nexport { UserActions };\n","import React, { useState } from \"react\";\n// @ts-ignore\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport { NavbarSpacer } from \"./NavbarSpacer\";\nimport { NavbarToggle } from \"./NavbarToggle\";\nimport { ConnectionIndicator } from \"./ConnectionIndicator\";\nimport { UserActions } from \"./UserActions\";\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  usesAuth: boolean;\n  usesConnection: boolean;\n  connected: boolean;\n  logOut: () => void;\n  toggleSidebar: () => void;\n  reconnect: () => void;\n  user: User | null;\n};\n\nfunction MainNavbar({\n  usesAuth,\n  usesConnection,\n  logOut,\n  toggleSidebar,\n  reconnect,\n  connected,\n  user,\n}: Props) {\n  const [userActionsVisible, setUserActionsVisible] = useState(false);\n  function toggleUserActions() {\n    setUserActionsVisible((isVisible) => !isVisible);\n  }\n  return (\n    <div className=\"main-navbar bg-white sticky-top\">\n      <Container fluid className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarSpacer />\n          <Nav navbar className=\"border-left flex-row\">\n            {usesConnection && (\n              <ConnectionIndicator\n                reconnect={reconnect}\n                connected={connected}\n              />\n            )}\n            {usesAuth && (\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={toggleUserActions}\n                logOut={logOut}\n              />\n            )}\n          </Nav>\n          <NavbarToggle toggleSidebar={toggleSidebar} />\n        </Navbar>\n      </Container>\n    </div>\n  );\n}\n\nexport { MainNavbar };\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\ntype Props = {\n  toggleSidebar: () => void;\n};\n\nexport default ({ toggleSidebar }: Props) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\ntype SubItem = {\n  title: string;\n  to: string;\n};\n\ntype NavItem = {\n  title: string;\n  to: string;\n  open: boolean;\n  htmlBefore: string;\n  htmlAfter: string;\n  matches: string[];\n  items?: SubItem[];\n};\n\ntype Props = {\n  item: NavItem;\n  toggleSidebar: () => void;\n};\n\nexport default ({ item, toggleSidebar }: Props) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {item.items && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\ntype Props = {\n  navItems: {\n    title: string;\n    items: [];\n  }[];\n  toggleSidebar: () => void;\n};\n\nexport default ({ navItems: items, toggleSidebar }: Props) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\ntype Props = {\n  menuVisible: boolean;\n  sidebarNavItems: any;\n  toggleSidebar: () => void;\n};\n\nfunction MainSidebar({ menuVisible, sidebarNavItems, toggleSidebar }: Props) {\n  const classes = classNames(\n    \"main-sidebar\",\n    \"px-0\",\n    \"col-12\",\n    menuVisible && \"open\"\n  );\n\n  return (\n    <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n      <SidebarMainNavbar toggleSidebar={toggleSidebar} />\n      <SidebarNavItems\n        navItems={sidebarNavItems}\n        toggleSidebar={toggleSidebar}\n      />\n    </Col>\n  );\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\ntype MenuItems = {\n  title: string;\n  to: string;\n};\n\ntype Props = {\n  menuItems: MenuItems[];\n  copyright: string;\n  loggerEnabled: boolean;\n  enableLogger: () => void;\n  disableLogger: () => void;\n  exportLogs: () => void;\n};\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}: Props) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\ntype Props = {\n  acceptCookies: () => void;\n};\n\nfunction CookiesBanner({ acceptCookies }: Props) {\n  return (\n    <div className=\"cookies-banner\">\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n\nexport { CookiesBanner };\n","import React from \"react\";\n\ntype Props = {\n  data: {\n    theme: string;\n    message: string;\n  };\n};\n\nfunction InfoBanner({ data }: Props) {\n  if (!data) return null;\n  return (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  );\n}\n\nexport { InfoBanner };\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  reconnect: () => void;\n};\n\nfunction ConnectionBanner({ reconnect }: Props) {\n  return (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport { ConnectionBanner };\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal, { Styles } from \"react-modal\";\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  importYAML: (yamlString: string) => void;\n};\n\nexport default ({ open, closeModal, importYAML }: Props) => {\n  let inputRef: any;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref: any) => (inputRef = ref)}\n            as=\"textarea\"\n            rows={10}\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal, { Styles } from \"react-modal\";\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  submitReview: (content: any) => void;\n};\n\nexport default ({ open, closeModal, submitReview }: Props) => {\n  let inputRef: any;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref: any) => (inputRef = ref)}\n            as=\"textarea\"\n            rows={10}\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport ReactModal, { Styles } from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst style: Styles = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"msg\", \"unixTime\"];\n\ntype Props = {\n  open: boolean;\n  closeModal: () => void;\n  modalParams: any;\n};\n\nexport default ({ open, closeModal, modalParams }: Props) => {\n  const log = modalParams.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.msg}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"msg\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport { MainNavbar } from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport { CookiesBanner } from \"../components/Common/CookiesBanner\";\nimport { InfoBanner } from \"../components/Common/InfoBanner\";\nimport { ConnectionBanner } from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      user: Store.getUser(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getUser);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getUser);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    const loggerEnabled = logger.isEnabled();\n    const menuVisible = Store.getMenuState();\n    const sidebarNavItems = Store.getSidebarItems();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      connected,\n      modalParams,\n      loggerEnabled,\n      menuVisible,\n      sidebarNavItems,\n    });\n  };\n\n  getUser = () => {\n    const user = Store.getUser();\n    this.setState({ user });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", String(true));\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString: string) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content: any) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      connected,\n      user,\n      loading,\n      modalParams,\n      loggerEnabled,\n      menuVisible,\n      sidebarNavItems,\n    } = this.state;\n    const { children, usesAuth, usesConnection } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar\n            sidebarNavItems={sidebarNavItems}\n            menuVisible={menuVisible}\n            toggleSidebar={this.toggleSidebar}\n          />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar\n              usesAuth={usesAuth}\n              usesConnection={usesConnection}\n              logOut={this.logOut}\n              toggleSidebar={this.toggleSidebar}\n              reconnect={this.reconnect}\n              connected={connected}\n              user={user}\n            />\n            <InfoBanner data={banner} />\n            {usesConnection && !loading && !connected && (\n              <ConnectionBanner reconnect={this.reconnect} />\n            )}\n            {children}\n            {!acceptedCookies && (\n              <CookiesBanner acceptCookies={this.acceptCookies} />\n            )}\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <LogDetails\n          open={modal === \"logDetails\"}\n          closeModal={this.closeModal}\n          modalParams={modalParams}\n        />\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: string;\n  subtitle: string;\n  className: string;\n};\n\nfunction PageTitle({ title, subtitle, className }: Props) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n}\n\nexport { PageTitle };\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\ntype Props = {\n  importChart: () => void;\n  copyChart: () => void;\n  exportImage: (format: string) => void;\n};\n\nexport default function ChartNode({\n  importChart,\n  copyChart,\n  exportImage,\n}: Props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\ntype Props = {\n  node: {\n    properties: any;\n    label: string | undefined;\n  };\n};\n\nexport default function ChartNode({ node }: Props) {\n  const { properties, label } = node;\n  const list: any = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\ntype Props = {\n  label?: string;\n  ports: {\n    [key: string]: any;\n  };\n  properties: {\n    [key: string]: any;\n  };\n};\n\nexport default function SidebarItem({ label, ports, properties }: Props) {\n  const ref: React.RefObject<HTMLInputElement> = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties })\n        );\n      }}\n    >\n      <ChartNode node={{ properties, label }} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport _ from \"lodash\";\nimport { IChart, ILink, INode } from \"@mrblenny/react-flow-chart\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\n\ninterface Node extends INode {\n  label?: string;\n}\n\ntype ParsedNode = {\n  label: string;\n  id: string;\n  properties: { [key: string]: string | number };\n  newProperties: { [key: string]: string | number };\n};\n\ntype NodesObject = {\n  [key: string]: Node;\n};\n\nconst parseNode = (node: Node): ParsedNode => {\n  const properties = { ...node.properties };\n  const newProperties = {};\n  const label = node.label || \"\";\n\n  return { label, id: node.id, properties, newProperties };\n};\n\nfunction ReadOnly({ duplicateFlow }: { duplicateFlow: () => void }) {\n  return (\n    <div className=\"readonly-overlay py-4 px-4 text-center\">\n      <h4 className=\"my-4\">\n        <b>\n          This flow is <span className=\"text-muted\">readonly</span>\n        </b>\n      </h4>\n      <p className=\"my-4\">To edit this flow, please duplicate it.</p>\n      <Button onClick={duplicateFlow}>Duplicate Flow</Button>\n    </div>\n  );\n}\n\ntype EditLinkProps = {\n  link: ILink;\n  nodes: NodesObject;\n  updateLink: (\n    linkId: string,\n    nodeFrom: string,\n    nodeTo: string | undefined\n  ) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditLink({ link, nodes, updateLink, deleteSelection }: EditLinkProps) {\n  let nodeFromId = link.from.nodeId;\n  let nodeToId = link.to.nodeId;\n\n  let choices = Object.keys(nodes).map((id) => {\n    return { label: nodes[id].label || nodes[id].properties.name, id };\n  });\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Edit Connection</b>\n      </h5>\n      <div className=\"flex-fill px-2\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>From</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, e.target.value, nodeToId)}\n            value={nodeFromId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n          <p className=\"mb-1\">\n            <b>To</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, nodeFromId, e.target.value)}\n            value={nodeToId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n        </div>\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Connection\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ntype PropertyItem = {\n  name: string;\n  type: string;\n};\n\ntype EditNodeProps = {\n  node: ParsedNode;\n  availableProperties: PropertyItem[];\n  updateLabel: (label: string) => void;\n  updateNewValue: (key: string, value: string | number) => void;\n  updateExistingValue: (key: string, value: string | number) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditNode({\n  node,\n  updateLabel,\n  updateNewValue,\n  updateExistingValue,\n  deleteSelection,\n  availableProperties,\n}: EditNodeProps) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredProperties, setFilteredProperties] = useState(\n    availableProperties\n  );\n\n  const updateSearchQuery = (searchString: string) => {\n    setSearchQuery(searchString);\n  };\n\n  useEffect(() => {\n    const results = availableProperties.filter((property: any) =>\n      property.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredProperties(results);\n  }, [searchQuery, availableProperties]);\n\n  useEffect(() => {\n    setSearchQuery(\"\");\n    setFilteredProperties(availableProperties);\n  }, [node.id, availableProperties]);\n\n  let label = node.label || node.properties.name;\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <div className=\"p-2 mb-1\">\n        <p className=\"mb-1\">\n          <b>Pod Name</b>\n        </p>\n        <FormControl\n          spellCheck={false}\n          value={label}\n          onChange={(e) => updateLabel(e.target.value)}\n          className=\"pod-name-input\"\n        />\n      </div>\n      <p className=\"mb-0 px-2\">\n        <b>Properties</b>\n      </p>\n      <div className=\"m-2\">\n        <FormControl\n          spellCheck={false}\n          placeholder=\"search properties...\"\n          value={searchQuery}\n          onChange={(e) => updateSearchQuery(e.target.value)}\n        />\n      </div>\n      <div className=\"property-table flex-fill mx-2\">\n        {filteredProperties.map((property) => {\n          const { name, type } = property;\n          const value = node.properties[name];\n\n          if (typeof value == \"undefined\")\n            return (\n              <div key={name} className=\"property-item mb-2\">\n                <p className=\"property-label mb-1\">{name}</p>\n                <FormControl\n                  spellCheck={false}\n                  placeholder={type}\n                  type={type === \"int\" ? \"number\" : \"text\"}\n                  value={node.newProperties[name] || \"\"}\n                  onChange={(e) => updateNewValue(name, e.target.value)}\n                  className=\"property-value-input\"\n                ></FormControl>\n              </div>\n            );\n          return (\n            <div key={name} className=\"property-item mb-2\">\n              <p className=\"property-label mb-1\">{name}</p>\n              <FormControl\n                spellCheck={false}\n                placeholder={type}\n                type={type === \"int\" ? \"number\" : \"text\"}\n                value={value || \"\"}\n                onChange={(e) => updateExistingValue(name, e.target.value)}\n                className=\"property-value-input\"\n              />\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Pod\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction PodMenu() {\n  return (\n    <div className=\"d-flex flex-column h-100\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Add Pods</b>\n      </h5>\n      <div className=\"p-3 scrollable flex-fill\">\n        <SidebarItem\n          ports={{\n            inPort: {\n              id: \"inPort\",\n              type: \"input\",\n            },\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          }}\n          properties={{}}\n        />\n        {defaultPods.map((pod, idx) => (\n          <SidebarItem\n            key={idx}\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={pod}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype FlowChartSidebarProps = {\n  readonly: boolean;\n  chart: IChart;\n  duplicateFlow: () => void;\n  updateNode: (updates: any) => void;\n  deleteSelection: () => void;\n  updateLink: (\n    linkId: string,\n    nodeFromId: string,\n    nodeToId: string | undefined\n  ) => void;\n  availableProperties: PropertyItem[];\n};\n\nfunction FlowChartSidebar({\n  readonly,\n  chart,\n  duplicateFlow,\n  deleteSelection,\n  updateNode,\n  updateLink,\n  availableProperties,\n}: FlowChartSidebarProps) {\n  const {\n    selected: { id: selectedId, type: selectedType },\n    nodes,\n    links,\n  } = chart;\n\n  const [node, setNode] = useState<ParsedNode | undefined>();\n\n  useEffect(() => {\n    let node;\n    if (!selectedId) return;\n    const selectedNode = nodes[selectedId];\n    if (selectedNode) node = parseNode(selectedNode);\n    setNode(node);\n  }, [nodes, selectedId]);\n\n  function updateLabel(label: string) {\n    updateNode({\n      ...node,\n      label,\n    });\n  }\n\n  function updateNewValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.newProperties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  function updateExistingValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.properties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  return (\n    <Card className=\"flowchart-sidebar mb-4\">\n      {selectedId ? (\n        selectedType === \"link\" ? (\n          <EditLink\n            nodes={nodes}\n            link={links[selectedId]}\n            updateLink={updateLink}\n            deleteSelection={deleteSelection}\n          />\n        ) : (\n          node && (\n            <EditNode\n              availableProperties={availableProperties}\n              node={node}\n              updateLabel={updateLabel}\n              updateNewValue={updateNewValue}\n              updateExistingValue={updateExistingValue}\n              deleteSelection={deleteSelection}\n            />\n          )\n        )\n      ) : (\n        <PodMenu />\n      )}\n      {readonly && <ReadOnly duplicateFlow={duplicateFlow} />}\n    </Card>\n  );\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\ntype SelectionIndicatorProps = {\n  selected: boolean;\n};\n\nfunction SelectionIndicator({ selected }: SelectionIndicatorProps) {\n  return selected ? (\n    <i className=\"material-icons text-primary\">radio_button_checked</i>\n  ) : (\n    <i className=\"material-icons\">radio_button_unchecked</i>\n  );\n}\n\ntype ConnectionIndicatorProps = {\n  connected: boolean;\n  show: boolean;\n};\n\nfunction ConnectionIndicator({ connected, show }: ConnectionIndicatorProps) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons ml-2 text-success\">wifi</i>\n  ) : (\n    <i className=\"material-icons ml-2 text-warning\">wifi_off</i>\n  );\n}\n\nfunction TitleConnectionIndicator({\n  connected,\n  show,\n}: ConnectionIndicatorProps) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons text-white ml-1 mr-2\">wifi</i>\n  ) : (\n    <i className=\"material-icons text-warning ml-1 mr-2\">wifi_off</i>\n  );\n}\n\ntype DeleteFlowProps = {\n  deleteFlow: (e: any) => void;\n  show: boolean;\n};\n\nfunction DeleteFlowButton({ show, deleteFlow }: DeleteFlowProps) {\n  if (!show) return null;\n  return (\n    <i className=\"material-icons text-danger float-right\" onClick={deleteFlow}>\n      delete\n    </i>\n  );\n}\n\ntype EditFlowsProps = {\n  toggleEditing: () => void;\n  isEditing: boolean;\n};\n\nfunction EditFlowsButton({ isEditing, toggleEditing }: EditFlowsProps) {\n  return isEditing ? (\n    <i\n      onClick={toggleEditing}\n      className=\"material-icons float-right cursor-pointer text-success\"\n    >\n      done\n    </i>\n  ) : (\n    <i\n      onClick={toggleEditing}\n      className=\"material-icons float-right cursor-pointer\"\n    >\n      edit\n    </i>\n  );\n}\n\ntype FlowSelectionProps = {\n  flows: {\n    [key: string]: any;\n  };\n  loadFlow: (flowId: string) => void;\n  createNewFlow: (e: any) => void;\n  deleteFlow: (e: any, flowId: string) => void;\n  selectedFlowId: string;\n  connected: boolean;\n};\n\nexport default function FlowSelection({\n  flows,\n  loadFlow,\n  selectedFlowId,\n  createNewFlow,\n  deleteFlow,\n  connected,\n}: FlowSelectionProps) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => {\n    setIsEditing((currentIsEditing) => !currentIsEditing);\n  };\n\n  const userFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type !== \"example\"\n  );\n\n  const exampleFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type === \"example\"\n  );\n\n  const currentFlow = flows[selectedFlowId];\n\n  return (\n    <Dropdown className=\"flow-selection\">\n      <Dropdown.Toggle>\n        {currentFlow.name}\n        <TitleConnectionIndicator\n          show={currentFlow.type === \"remote\"}\n          connected={connected}\n        />\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={createNewFlow}>\n          <i className=\"material-icons\">add</i>New Flow\n        </Dropdown.Item>\n        <Dropdown.Header className=\"text-uppercase\">\n          Your Flows{\" \"}\n          <EditFlowsButton\n            isEditing={isEditing}\n            toggleEditing={toggleEditing}\n          />\n        </Dropdown.Header>\n        {userFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator selected={flowId === selectedFlowId} />\n            {flow.name}\n            <ConnectionIndicator\n              show={flow.type === \"remote\"}\n              connected={connected}\n            />\n            <DeleteFlowButton\n              show={flow.type === \"user-generated\" && isEditing}\n              deleteFlow={(e: any) => deleteFlow(e, flowId)}\n            />\n          </Dropdown.Item>\n        ))}\n        <Dropdown.Header className=\"text-uppercase\">Examples</Dropdown.Header>\n        {exampleFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator selected={flowId === selectedFlowId} />\n            {flow.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport FlowSelection from \"../components/FlowChart/FlowSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nconst syncEvents = [\n  \"onDragNodeStop\",\n  \"onCanvasDrop\",\n  \"onCanvasClick\",\n  \"onNodeClick\",\n  \"onDragCanvasStop\",\n  \"updateNode\",\n  \"updateLink\",\n];\n\nclass FlowView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    const connected = Store.getConnectionStatus();\n    const availableProperties = Store.getAvailableProperties();\n    this.state = {\n      availableProperties,\n      flowType,\n      connected,\n      chart,\n      selectedFlowId,\n      flows,\n      showOverlay: false,\n      actionCallbacks: Object.keys(actions).reduce(\n        (obj: any, key: any, idx: any) => {\n          obj[key] = (...args: any) => {\n            let { chart } = this.state;\n            let action = (actions as any)[key];\n            let newChartTransformer = action(...args);\n            let newChart = newChartTransformer(chart);\n            this.updateFlow({ ...chart, ...newChart }, key);\n            return newChart;\n          };\n          return obj;\n        },\n        {}\n      ),\n    };\n\n    Store.on(\"update-ui\", this.getConnectionStatus);\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    const chartContainer = document.querySelector(\".chart-container\");\n    if (chartContainer)\n      chartContainer.addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n    Store.removeListener(\"update-ui\", this.getConnectionStatus);\n  };\n\n  exportImage = (extension = \"png\") => {\n    const chartContainer = document.querySelector(\".chart-container\");\n    const captureOverlay = document.querySelector(\".capture-overlay\");\n    if (!chartContainer) return;\n    if (captureOverlay) captureOverlay.classList.add(\"fade-out\");\n\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n\n    html2canvas(chartContainer as HTMLElement, canvasParams).then((canvas) => {\n      var image = canvas.toDataURL(`image/${extension}`);\n      var link = document.getElementById(\"download-link\");\n      if (!link) return;\n      link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n      link.setAttribute(\"href\", image);\n      link.click();\n    });\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    this.setState({ chart, flowType, selectedFlowId, flows });\n  };\n\n  getConnectionStatus = () => {\n    const connected = Store.getConnectionStatus();\n    this.setState({ connected });\n  };\n\n  updateNode = (node: any) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateNode\");\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId: string, fromId: string, toId: string | undefined) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateLink\");\n  };\n\n  deleteSelection = () => {\n    this.state.actionCallbacks.onDeleteKey({});\n  };\n\n  updateFlow = (flow: any, event: any) => {\n    if (syncEvents.includes(event)) return this.syncFlow(flow);\n    this.setState({ chart: flow });\n  };\n\n  syncFlow = (flow: any) => {\n    Dispatcher.dispatch({\n      actionType: Constants.UPDATE_FLOW,\n      payload: flow,\n    });\n  };\n\n  selectNode = (data: any) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId }: any) => {\n    return !(fromNodeId === toNodeId || fromPortId === toPortId);\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadFlow = (flow: any) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_FLOW,\n      payload: flow,\n    });\n  };\n\n  createNewFlow = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.CREATE_NEW_FLOW,\n    });\n  };\n\n  deleteFlow = (e: any, flowId: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.DELETE_FLOW,\n      payload: flowId,\n    });\n  };\n\n  duplicateFlow = () => {\n    const yaml = formatAsYAML(this.state.chart);\n    Dispatcher.dispatch({\n      actionType: Constants.DUPLICATE_FLOW,\n      payload: yaml,\n    });\n  };\n\n  render = () => {\n    const {\n      chart,\n      flows,\n      selectedFlowId,\n      showOverlay,\n      connected,\n      flowType,\n      availableProperties,\n      actionCallbacks,\n    } = this.state;\n    const readonly = flowType !== \"user-generated\";\n    console.log(\"chart:\", chart);\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <FlowSelection\n                connected={connected}\n                flows={flows}\n                selectedFlowId={selectedFlowId}\n                createNewFlow={this.createNewFlow}\n                loadFlow={this.loadFlow}\n                deleteFlow={this.deleteFlow}\n              />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{\n                    NodeInner: CustomNode as any,\n                    Port: CustomPort,\n                  }}\n                  callbacks={actionCallbacks}\n                  config={{\n                    readonly,\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              availableProperties={availableProperties}\n              duplicateFlow={this.duplicateFlow}\n              readonly={readonly}\n              chart={chart}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport { LogLevelSummaryChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 100;\n\nconst _levels: { [key: string]: any } = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nfunction getParsedDatasets(data: LogLevelSummaryChartData): any {\n  const datasets = Object.keys(_levels).map((level) => {\n    const levelData = data.map((tick: any) => tick.levels[level]);\n    return {\n      label: level,\n      fill: \"start\",\n      borderWidth: 1.5,\n      borderColor: _levels[level].borderColor,\n      backgroundColor: _levels[level].backgroundColor,\n      data: levelData,\n    };\n  });\n  return datasets;\n}\n\nfunction getLabels(amount?: number): number[] {\n  const labels = [];\n  for (let i = 0; i < (amount || 0); ++i) {\n    labels.push(i);\n  }\n  return labels;\n}\n\ntype Props = {\n  width?: number;\n  height?: number;\n  numSeconds?: number;\n  numTicks?: number;\n  data: LogLevelSummaryChartData;\n  onClick: (activePoints: any) => void;\n};\n\nfunction ChartBase({\n  width,\n  height,\n  numSeconds,\n  data,\n  numTicks,\n  onClick,\n}: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  function onClickChart(e: any) {\n    if (!chartInstance) return;\n    const activePoints = chartInstance.getElementsAtEvent(e);\n    onClick(activePoints);\n  }\n\n  function getXAxisLabel(value: any, index: number, values: any) {\n    if (index === 0) return numSeconds + \"s ago\";\n    else if (index === Math.floor(values.length / 2))\n      return (numSeconds ? numSeconds / 2 : 0) + \"s ago\";\n    return;\n  }\n\n  function getYAxisLabel(value: any) {\n    if (Number.isInteger(value)) {\n      return value;\n    }\n  }\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      events: [\"click\"],\n      onClick: onClickChart,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"top\",\n        labels: {\n          padding: 10,\n          boxWidth: 15,\n        },\n      },\n      tooltips: {\n        enabled: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              callback: getXAxisLabel,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: true,\n              labelString: \"Occurences\",\n            },\n            gridLines: {\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: getYAxisLabel,\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"bar\",\n      data: {\n        datasets: getParsedDatasets(data),\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const chartData: ChartData = {\n      labels: getLabels(numTicks),\n      datasets: getParsedDatasets(data),\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance, numTicks]);\n\n  return (\n    <canvas\n      height={height || DEFAULT_HEIGHT}\n      width={width || DEFAULT_WIDTH}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport BarChart from \"./BarChartBase\";\nimport { LogLevelSummaryChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 70;\n\nconst DEFAULT_HEIGHT_SMALL = 20;\nconst DEFAULT_WIDTH_SMALL = 50;\n\ntype Props = {\n  data: {\n    data: LogLevelSummaryChartData;\n    lastTimestamp: number;\n    numSeconds: number;\n    numTicks: number;\n  };\n  showLog: (activePoints: any) => void;\n};\n\nfunction areEqual(prevProps: Props, nextProps: Props) {\n  return prevProps.data.lastTimestamp === nextProps.data.lastTimestamp;\n}\n\nconst LogLevelSummaryChart = React.memo(function LogLevelSummaryChart({\n  data: { data, numSeconds, numTicks },\n  showLog,\n}: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header>Log Occurences by Level</Card.Header>\n      <Card.Body className=\"d-none d-md-block pb-2 pt-0\">\n        <BarChart\n          data={data}\n          numTicks={numTicks}\n          numSeconds={numSeconds}\n          height={DEFAULT_HEIGHT}\n          width={DEFAULT_WIDTH}\n          onClick={showLog}\n        />\n      </Card.Body>\n      <Card.Body className=\"d-md-none pb-2\">\n        <BarChart\n          data={data}\n          numTicks={numTicks}\n          numSeconds={numSeconds}\n          height={DEFAULT_HEIGHT_SMALL}\n          width={DEFAULT_WIDTH_SMALL}\n          onClick={showLog}\n        />\n      </Card.Body>\n    </Card>\n  );\n},\nareEqual);\n\nexport { LogLevelSummaryChart };\n","import React, { useRef, useEffect, useState } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport { LogLevelPieChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 50;\nconst DEFAULT_WIDTH = 50;\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\ntype Props = {\n  width?: number;\n  height?: number;\n  data: LogLevelPieChartData;\n};\n\nfunction PieChartBase({ width, height, data }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  function getColor(index: number) {\n    let color: any = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  }\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const names = Object.keys(data);\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"pie\",\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: Object.values(data),\n            borderColor: names.map((name, idx) => getColor(idx).border),\n            backgroundColor: names.map((name, idx) => getColor(idx).background),\n          },\n        ],\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const names = Object.keys(data);\n    const chartData: ChartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: Object.values(data),\n          borderColor: names.map((name, idx) => getColor(idx).border),\n          backgroundColor: names.map((name, idx) => getColor(idx).background),\n        },\n      ],\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance]);\n\n  return (\n    <canvas\n      height={height || DEFAULT_HEIGHT}\n      width={width || DEFAULT_WIDTH}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default PieChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport PieChart from \"./PieChartBase\";\nimport { LogLevelPieChartData } from \"./types\";\n\ntype Props = {\n  data: LogLevelPieChartData;\n};\n\nfunction LogLevelPieChart({ data }: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header className=\"text-center\">Log Levels</Card.Header>\n      <Card.Body className=\"pt-0\">\n        <PieChart data={data} />\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogLevelPieChart };\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: string };\n\nconst customStyles = {\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n  option: (styles: any) => ({\n    ...styles,\n    cursor: 'pointer',\n  }),\n  control: (styles: any) => ({\n    ...styles,\n    cursor: 'pointer',\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n} & SelectProps;\n\nfunction MultiFilterSelect({ onFilterChange, options, ...rest }: Props) {\n  return (\n    <Select\n      onChange={(val) =>\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val])\n      }\n      isMulti\n      options={options}\n      styles={customStyles}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: ProcessedLog[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, msg, levelname, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  columns: { firstCol: number; secondCol: number };\n};\n\nconst LogsTableHeader = ({ columns: { firstCol, secondCol } }: Props) => {\n  return (\n    <div\n      className=\"px-4 py-1 border-top bg-light text-monospace\"\n      css={{ maxHeight: 84 }}\n    >\n      <Row>\n        <Col\n          className=\"log-prefix text-muted px-0 d-flex flex-row\"\n          css={{ maxWidth: firstCol }}\n        >\n          <div className=\"text-bold mr-2\">#</div>\n          <div className=\"ml-auto\">timestamp</div>\n        </Col>\n        <Col\n          className=\"log-prefix px-0 text-left text-md-right text-bold\"\n          css={{ maxWidth: secondCol }}\n        >\n          source@process[level]:\n        </Col>\n        <Col\n          className=\"px-0\"\n          css={{\n            maxHeight: 84,\n            display: \"block\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            // width: \"1\",\n            whiteSpace: \"nowrap\",\n            paddingRight: 0,\n            marginRight: 0,\n          }}\n        >\n          message\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport { LogsTableHeader };\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useEffect, useRef } from \"react\";\n\nexport type UseTimeoutFnReturn = [() => boolean | null, () => void, () => void];\n\nfunction useTimeoutFn(fn: Function, ms: number = 0): UseTimeoutFnReturn {\n  const ready = useRef<boolean | null>(false);\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const callback = useRef(fn);\n\n  const isReady = useCallback(() => ready.current, []);\n\n  const set = useCallback(() => {\n    ready.current = false;\n    timeout.current && clearTimeout(timeout.current);\n\n    timeout.current = setTimeout(() => {\n      ready.current = true;\n      callback.current();\n    }, ms);\n  }, [ms]);\n\n  const clear = useCallback(() => {\n    ready.current = null;\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  // update ref when function changes\n  useEffect(() => {\n    callback.current = fn;\n  }, [fn]);\n\n  // set on mount, clear on unmount\n  useEffect(() => {\n    set();\n\n    return clear;\n  }, [ms]);\n\n  return [isReady, clear, set];\n}\nexport { useTimeoutFn };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useMiniSearch } from \"react-minisearch\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { LogItem } from \"./LogItem\";\nimport { LogsTableHeader } from \"./LogsTableHeader\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport {\n  serializeLogsToCSVBlob,\n  serializeLogsToJSONBlob,\n  serializeLogsToTextBlob,\n} from \"../../helpers\";\nimport { saveAs } from \"file-saver\";\n\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\nconst ROW_SIZE = 30;\n\nconst fields = [\"filename\", \"funcName\", \"msg\", \"name\", \"module\", \"pathname\"];\nconst miniSearchOptions = { fields };\n\nconst applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\nfunction usePrevious(value: any) {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nconst generateFormatFileName = (format: Format) =>\n  `jina-logs-${new Date()}.${format}`;\n\ntype Format = \"json\" | \"csv\" | \"txt\";\n\ntype Props = {\n  data: ProcessedLog[];\n  showLogDetails: (log: ProcessedLog) => void;\n};\n\nconst itemKey = (index: number, data: { items: ProcessedLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsTable({ data, showLogDetails }: Props) {\n  const [scrolledToBottom, setScrolledToBottom] = React.useState(true);\n  const windowListRef = useRef<any>();\n  const [selectedSources, setSelectedSources] = React.useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = React.useState<\n    { value: ProcessedLog[\"levelname\"] }[]\n  >([]);\n  const [searchString, setSearchString] = React.useState(\"\");\n  const { search, searchResults, addAllAsync } = useMiniSearch(\n    data,\n    miniSearchOptions\n  );\n  const buffer = useRef<any[]>([]);\n  const previousLength = usePrevious(data.length);\n\n  useEffect(() => {\n    if (previousLength && previousLength! > 0) {\n      const newLog = data[previousLength! - 1];\n      addAllAsync([newLog]);\n      buffer.current.push(newLog);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousLength, searchString]);\n\n  const unfiltered = searchString ? searchResults : data;\n\n  const resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n\n  useEffect(() => {\n    if (windowListRef.current && scrolledToBottom) {\n      windowListRef.current.scrollToItem(resultData.length);\n    }\n  }, [resultData.length, scrolledToBottom]);\n  useDebounce(\n    () => {\n      search(searchString);\n    },\n    1000,\n    [searchString]\n  );\n\n  const firstCol = 300;\n  const secondCol = 300;\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-0\">\n        <Row className=\"p-3\">\n          <Col md=\"8\">\n            <MultiFilterSelect\n              options={toOption(sources)}\n              onFilterChange={setSelectedSources}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Logsources\"\n            />\n            <MultiFilterSelect\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Levels\"\n            />\n            <DropdownButton\n              as={ButtonGroup}\n              className=\"d-block d-md-inline-block mb-2 mr-0 mb-md-0 mr-md-2\"\n              title=\"Download Logs\"\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToCSVBlob(data),\n                    generateFormatFileName(\"csv\")\n                  )\n                }\n              >\n                Download as CSV\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToJSONBlob(data),\n                    generateFormatFileName(\"json\")\n                  )\n                }\n              >\n                Download as JSON\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToTextBlob(data),\n                    generateFormatFileName(\"txt\")\n                  )\n                }\n              >\n                Download as TXT\n              </Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col md=\"4\">\n            <Form.Control\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={(e) => {\n                setSearchString(e.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n        <LogsTableHeader columns={{ firstCol, secondCol }} />\n      </Card.Header>\n      <Card.Body\n        className=\"log-stream-container p-0 border-top\"\n        id=\"log-stream-container\"\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() =>\n              windowListRef.current.scrollToItem(resultData.length)\n            }\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        {resultData.length ? (\n          <AutoSizer>\n            {({ height, width }) => {\n              const thirdCol = width - (firstCol + secondCol);\n              return (\n                <List\n                  onScroll={({ scrollOffset }) => {\n                    setScrolledToBottom(\n                      (scrollOffset + height) / ROW_SIZE - resultData.length ===\n                        0\n                    );\n                  }}\n                  height={height}\n                  width={width}\n                  itemCount={resultData.length}\n                  itemSize={ROW_SIZE}\n                  itemKey={itemKey}\n                  itemData={{\n                    items: resultData,\n                    columns: { firstCol, secondCol, thirdCol },\n                    showLogDetails,\n                  }}\n                  ref={windowListRef}\n                >\n                  {LogItem}\n                </List>\n              );\n            }}\n          </AutoSizer>\n        ) : (\n          <h3 className=\"my-5 py-5 text-center text-muted\">\n            No logs to display\n          </h3>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import { DependencyList, useEffect } from \"react\";\nimport { useTimeoutFn } from \"./useTimeoutFn\";\n\nexport type UseDebounceReturn = [() => boolean | null, () => void];\n\nfunction useDebounce(\n  fn: Function,\n  ms: number = 0,\n  deps: DependencyList = []\n): UseDebounceReturn {\n  const [isReady, cancel, reset] = useTimeoutFn(fn, ms);\n\n  useEffect(reset, deps);\n\n  return [isReady, cancel];\n}\n\nexport { useDebounce };\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { LogLevelSummaryChart } from \"../components/LogStream/LogLevelSummaryChart\";\nimport { LogLevelPieChart } from \"../components/LogStream/LogLevelPieChart\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nconst LOGS_UPDATE_INTERVAL = 20;\nconst CHART_UPDATE_INTERVAL = 1000;\n\nlet chartUpdateInterval: any;\nlet logsUpdateInterval: any;\n\nconst showLogDetails = (log: any) => {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_MODAL,\n    payload: { modal: \"logDetails\", modalParams: { log } },\n  });\n};\n\nfunction showLogInTable(index: number) {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_LOG_AT_INDEX,\n    payload: index,\n  });\n}\n\nfunction LogsView() {\n  const hasNewLogs = React.useRef(false);\n  const [logs, setLogs] = useState(() => Store.getLogs());\n  const [logLevelOccurrences, setLogLevelOccurrences] = useState(() =>\n    Store.getLogLevelOccurences()\n  );\n  const [logLevelCharts, setLogLevelCharts] = useState(() =>\n    Store.getLogLevelCharts()\n  );\n\n  function updateLogs() {\n    const newLogs = Store.getLogs();\n    const newOccurrences = Store.getLogLevelOccurences();\n    setLogs([...newLogs]);\n    setLogLevelOccurrences({ ...newOccurrences });\n  }\n\n  function updateChart() {\n    const newCharts = Store.getLogLevelCharts();\n    setLogLevelCharts({ ...newCharts });\n  }\n\n  function showLog(activePoints: any) {\n    const { data } = logLevelCharts;\n    let index = activePoints[0] && activePoints[0]._index;\n    if (index && typeof index !== \"undefined\") {\n      const { lastLog } = data[index];\n      showLogInTable(lastLog);\n    }\n  }\n\n  function checkForNewLogs() {\n    if (!hasNewLogs.current) return;\n    hasNewLogs.current = false;\n    updateLogs();\n  }\n\n  function onNewLogs() {\n    hasNewLogs.current = true;\n  }\n\n  useEffect(() => {\n    Store.on(\"update-logs\", onNewLogs);\n    logsUpdateInterval = setInterval(checkForNewLogs, LOGS_UPDATE_INTERVAL);\n    chartUpdateInterval = setInterval(updateChart, CHART_UPDATE_INTERVAL);\n    return () => {\n      Store.removeListener(\"update-logs\", onNewLogs);\n      clearInterval(logsUpdateInterval);\n      clearInterval(chartUpdateInterval);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Log Stream\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\">\n            <LogLevelSummaryChart data={logLevelCharts} showLog={showLog} />\n          </Col>\n          <Col md=\"2\" className=\"mb-4\">\n            <LogLevelPieChart data={logLevelOccurrences} />\n          </Col>\n        </Row>\n        <LogsTable data={logs} showLogDetails={showLogDetails} />\n      </div>\n    </Container>\n  );\n}\n\nexport { LogsView };\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\ntype Props = {\n  elapsed: {\n    task_name: string;\n    seconds: string | number;\n  };\n};\n\nexport default function ElapsedCard({ elapsed }: Props) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement from \"chart.js\";\n\ntype Props = {\n  progress: any;\n};\n\nfunction ProgressCard({ progress }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const newChartInstance = new ChartElement(canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: { display: false },\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: { duration: 0 },\n        tooltips: {\n          enabled: false,\n        },\n      },\n    });\n    setChartInstance(newChartInstance);\n  }, []);\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    chartInstance.data = newData;\n    chartInstance.update();\n  }, [JSON.stringify(progress), chartInstance]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        <b>Progress</b>\n      </h6>\n      <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n        <div className=\"mr-4 mt-3\">\n          <h6 className=\"stats-small__label text-uppercase text-center\">\n            Request\n          </h6>\n          <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n        </div>\n\n        <canvas\n          ref={canvasRef}\n          style={{ width: \"100px\", height: \"100px\" }}\n          className=\"my-auto\"\n        />\n      </div>\n    </Card>\n  );\n}\n\nexport default ProgressCard;\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement, { ChartOptions } from \"chart.js\";\n\ntype Props = {\n  speed: {\n    history: any;\n    current: any;\n    unit: any;\n  };\n};\n\nfunction SpeedCard({ speed }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const { history } = speed;\n\n  let maxValue = Math.max(...history);\n  let minValue = Math.min(...history);\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    const difference = maxValue - minValue;\n    return {\n      maintainAspectRatio: true,\n      responsive: true,\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      layout: {\n        padding: {\n          bottom: -10,\n          left: -10,\n        },\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n        line: {\n          tension: 0.33,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            scaleLabel: {\n              padding: 0,\n              display: false,\n            },\n            ticks: {\n              display: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: maxValue + difference * 0.1,\n              suggestedMin: minValue - difference * 0.1,\n            },\n          },\n        ],\n      },\n    };\n  }, [maxValue, minValue]);\n\n  const getChartConfig = useCallback(\n    (chartOptions) => {\n      return {\n        type: \"line\",\n        data: {\n          labels: new Array(history.length).fill(null),\n          datasets: [\n            {\n              label: \"Today\",\n              fill: \"start\",\n              borderWidth: 1.5,\n              backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n              borderColor: \"#009999\",\n              data: history,\n            },\n          ],\n        },\n        options: chartOptions,\n      };\n    },\n    [history]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions = getChartOptions();\n    const chartConfig = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    let newChartData = {\n      ...chartInstance.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    chartInstance.options = getChartOptions();\n    chartInstance.data = newChartData;\n    chartInstance.update();\n  }, [history, chartInstance, getChartOptions, getChartConfig]);\n\n  return (\n    <Card className=\"pt-0 h-100 stats-small\">\n      <div className=\"stats-small__data mx-auto\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n          <b>Speed</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n        <h6 className=\"stats-small__label under text-uppercase text-center\">\n          {speed.unit}/Second\n        </h6>\n      </div>\n      <canvas height=\"100\" ref={canvasRef} className=\"stats-small-1\" />\n    </Card>\n  );\n}\n\nexport default SpeedCard;\n","import React, { useRef, useEffect, useState, useCallback } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\n\nfunction BarChartCard(props: any) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const [currentTab, setCurrentTab] = useState(\"messages\");\n\n  const chartData = props[currentTab];\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    return {\n      animation: { duration: 0 },\n      tooltips: {\n        callbacks: {\n          title: function (tooltipItem: any) {\n            return `Pod: ${tooltipItem[0].xLabel}`;\n          },\n          label: (tooltipItem: any, data: any) => {\n            let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n              currentTab === \"bytes\"\n                ? formatBytes(tooltipItem.value)\n                : tooltipItem.value\n            }`;\n            return label;\n          },\n          afterLabel: (tooltipItem: any) => {\n            let text = \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n            return text;\n          },\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            ticks: {\n              callback: (label: number) => {\n                if (currentTab === \"bytes\") return formatBytes(label);\n                return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n              },\n            },\n          },\n        ],\n      },\n    };\n  }, [chartData, currentTab]);\n\n  const getChartConfig = useCallback(\n    (chartOptions: ChartOptions): ChartConfiguration => {\n      return {\n        type: \"bar\",\n        options: chartOptions,\n        data: {\n          labels: chartData.map((d: any) => d.node),\n          datasets: [\n            {\n              label: \"msg sent\",\n              fill: \"start\",\n              data: chartData.map((d: any) => d.sent),\n              backgroundColor: \"#009999\",\n              borderColor: \"#009999\",\n              pointBackgroundColor: \"#FFFFFF\",\n              pointHoverBackgroundColor: \"#009999\",\n              borderWidth: 1.5,\n            },\n            {\n              label: \"msg received\",\n              fill: \"start\",\n              data: chartData.map((d: any) => d.received),\n              backgroundColor: \"#32C8CD\",\n              borderColor: \"#32C8CD\",\n              pointBackgroundColor: \"#FFFFFF\",\n              pointHoverBackgroundColor: \"#32C8CD\",\n              borderWidth: 1.5,\n            },\n          ],\n        },\n      };\n    },\n    [chartData]\n  );\n\n  const getChartData = useCallback(() => {\n    return {\n      labels: chartData.map((d: any) => d.node),\n      datasets: [\n        {\n          label: `${currentTab} sent`,\n          fill: \"start\",\n          data: chartData.map((d: any) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${currentTab} received`,\n          fill: \"start\",\n          data: chartData.map((d: any) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n  }, [chartData, currentTab]);\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions: ChartOptions = getChartOptions();\n    const chartConfig: ChartConfiguration = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const newData: ChartData = getChartData();\n    const newOptions: ChartOptions = getChartOptions();\n    chartInstance.options = newOptions;\n    chartInstance.data = newData;\n    chartInstance.update();\n  }, [chartData, chartInstance, currentTab, getChartData, getChartOptions]);\n\n  return (\n    <Card small className=\"h-100 mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Network Load</h6>\n      </CardHeader>\n\n      <CardBody className=\"pt-0\">\n        <Row className=\"border-bottom py-2 bg-light\">\n          <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n            <ButtonGroup>\n              <Button\n                theme=\"white\"\n                active={currentTab === \"messages\"}\n                onClick={() => setCurrentTab(\"messages\")}\n              >\n                Messages\n              </Button>\n              <Button\n                theme=\"white\"\n                active={currentTab === \"bytes\"}\n                onClick={() => setCurrentTab(\"bytes\")}\n              >\n                Bytes\n              </Button>\n            </ButtonGroup>\n          </Col>\n        </Row>\n        <canvas\n          height=\"100\"\n          ref={canvasRef}\n          style={{ maxWidth: \"100% !important\" }}\n          className=\"sales-overview-sales-report\"\n        />\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default BarChartCard;\n","import React, { useRef, useState, useCallback, useEffect } from \"react\";\nimport { Card } from \"shards-react\";\n\nimport ChartElement, { ChartOptions } from \"chart.js\";\n\ntype Props = {\n  qps: {\n    history: any;\n    current: any;\n  };\n};\n\nfunction QueriesPerSecondCard({ qps }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n  const { history } = qps;\n\n  let maxValue = Math.max(...history);\n  let minValue = Math.min(...history);\n\n  const getChartOptions = useCallback((): ChartOptions => {\n    const difference = maxValue - minValue;\n    return {\n      maintainAspectRatio: true,\n      responsive: true,\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n      },\n      tooltips: {\n        enabled: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n        },\n        line: {\n          tension: 0.33,\n        },\n      },\n      layout: {\n        padding: {\n          bottom: -10,\n          left: -10,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              display: false,\n            },\n            scaleLabel: {\n              display: false,\n            },\n            ticks: {\n              display: false,\n              // Avoid getting the graph line cut of at the top of the canvas.\n              // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n              suggestedMax: maxValue + difference * 0.1,\n              suggestedMin: minValue - difference * 0.1,\n            },\n          },\n        ],\n      },\n    };\n  }, [maxValue, minValue]);\n\n  const getChartConfig = useCallback(\n    (chartOptions) => {\n      return {\n        type: \"line\",\n        data: {\n          labels: new Array(history.length).fill(null),\n          datasets: [\n            {\n              label: \"Today\",\n              fill: \"start\",\n              borderWidth: 1.5,\n              backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n              borderColor: \"#32c8cd\",\n              data: history,\n            },\n          ],\n        },\n        options: chartOptions,\n      };\n    },\n    [history]\n  );\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions = getChartOptions();\n    const chartConfig = getChartConfig(chartOptions);\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    let newChartData = {\n      ...chartInstance.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    chartInstance.options = getChartOptions();\n    chartInstance.data = newChartData;\n    chartInstance.update();\n  }, [history, chartInstance, getChartOptions, getChartConfig]);\n\n  return (\n    <Card className=\"pt-0 h-100 stats-small\">\n      <div className=\"stats-small__data mx-auto\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n          <b>QPS</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n        <h6 className=\"stats-small__label under text-uppercase text-center\">\n          Queries/Second\n        </h6>\n      </div>\n      <canvas height=\"100\" ref={canvasRef} className=\"stats-small-1\" />\n    </Card>\n  );\n}\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\ntype Props = {\n  colSpan?: number;\n  label: string;\n  value: string;\n  placeholder: string;\n  onChange: (e: any) => void;\n};\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}: Props) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\ntype Settings = {\n  host: string;\n  port: string | number;\n  log: string;\n  profile: string;\n  yaml: string;\n  ready: string;\n  shutdown: string;\n};\n\ntype AnyObj = {\n  [key: string]: any;\n};\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState<AnyObj>(Store.getSettings());\n  const [updates, setUpdates] = useState<AnyObj>({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting: string, value: string) {\n    const newUpdates: { [key: string]: string } = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\ntype RatingFunction = (stars: number) => void\ntype StarRatingProps = {\n  rating: number,\n  userRated?: boolean,\n  rate?: RatingFunction\n}\n\nconst StarRating = ({ rating, userRated, rate }: StarRatingProps) => {\n  const formatted = rating.toFixed(1);\n  const stars = getStars(rating, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n}\n\nexport const getStars = (amount: number, rate: RatingFunction | undefined): JSX.Element[] => {\n  const handleRatingClick = (index: number) => rate && rate(index)\n  let stars = [];\n  let integer = Math.floor(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => handleRatingClick(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => handleRatingClick(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => handleRatingClick(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => handleRatingClick(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n\nexport default StarRating","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\nimport { HubImage } from \"./types\";\n\ntype Props = {\n  image: HubImage;\n};\n\nexport default function ImageCard({ image }: Props) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType: string) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category: string) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery: string) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e: any) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e: any) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e: any) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\ntype Build = {\n  created: string;\n  size: number;\n  os: string;\n  architecture: string;\n};\n\ntype Props = {\n  image: {\n    buildHistory?: Build[];\n    [key: string]: any;\n  };\n};\n\nexport default function BuildHistory({ image }: Props) {\n  const { buildHistory } = image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = (build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\nimport { HubImage } from \"./types\";\n\ntype Props = {\n  image: HubImage;\n};\n\nexport default function ImageDetails({ image }: Props) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\ntype Props = {\n  readme: string;\n  documentation: string;\n};\n\nexport default function ReadMe({ readme, documentation }: Props) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { HubImage } from \"./types\";\n\ntype Props = {\n  image: HubImage;\n  copyCode: (code: string) => void;\n};\n\nexport default function CopyCommand({ image, copyCode }: Props) {\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport { Review } from \"./types\";\n\ntype Props = {\n  review: Review;\n};\n\nexport default function ReviewCard({ review }: Props) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\nimport { Review } from \"./types\";\n\ntype Props = {\n  reviews: Review[];\n  newReview: () => void;\n};\n\nexport default function ImageReviews({ reviews, newReview }: Props) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component<any, any> {\n  constructor(props: any) {\n    super(props);\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars: any) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content: any) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, modalParams: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: string;\n  content: string;\n  icon: string;\n  theme: string;\n  link: string;\n};\n\nfunction HelpCard({ title, content, icon, theme, link }: Props) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n\nexport { HelpCard };\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport { HelpCard } from \"../components/Common/HelpCard\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport { LogsView } from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: IconSidebar,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n];\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}` as any;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent: any, options = {}) => {\n  const trackPage = (page: any) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends React.Component<any, any> {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps: any) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FallbackProps } from \"react-error-boundary\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { Button } from \"shards-react\";\n\nfunction FallbackPage({ error, resetErrorBoundary }: FallbackProps) {\n  return (\n    <Container fluid className=\"main-content-container p-5\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          title=\"Error\"\n          subtitle=\"This should not have happened\"\n          className=\"text-sm-left my-3\"\n        />\n      </Row>\n      <Row noGutters className=\"page-header py-4\">\n        <Col xs=\"12\" sm=\"3\">\n          <p>Something went wrong:</p>\n          <pre>\n            <code className=\"text-warning\">{error!.message}</code>\n          </pre>\n        </Col>\n      </Row>\n      <Row noGutters className=\"page-header\">\n        <Col>\n          <Button onClick={resetErrorBoundary}>Try again</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport { FallbackPage };\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { FallbackPage } from \"./views/FallbackPage\";\nimport { Store } from \"./flux\";\n\nconst App = () => {\n  return (\n    <Router basename={\"/\"}>\n      <div>\n        {routes.map((route, index) => {\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={withTracker((props: any) => {\n                return (\n                  <route.layout {...props} {...route.props}>\n                    <ErrorBoundary\n                      FallbackComponent={FallbackPage}\n                      onReset={() => Store.init()}\n                    >\n                      <route.component {...props} />\n                    </ErrorBoundary>\n                  </route.layout>\n                );\n              })}\n            />\n          );\n        })}\n      </div>\n    </Router>\n  );\n};\n\nexport { App };\n","const PERSIAN_GREEN = \"#009999\";\nconst GOLDEN_TANOI = \"#FFCC66\";\nconst BITTER_SWEET = \"#ff6666\";\nconst SCOOTER_GREEN = \"#32C8CD\";\n\nconst theme = {\n  palette: {\n    background: { default: \"#FFFFFF\" },\n    primary: {\n      main: PERSIAN_GREEN,\n    },\n    secondary: { main: GOLDEN_TANOI },\n    warning: { main: GOLDEN_TANOI },\n    error: { main: BITTER_SWEET },\n    success: { main: PERSIAN_GREEN },\n    info: { main: SCOOTER_GREEN },\n  },\n};\n\nexport { theme };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\nimport logger from \"../logger\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream: EventSource;\nlet taskStream: EventSource;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\ntype Settings = {\n  host: string;\n  port: string | number;\n  log: string;\n  profile: string;\n  yaml: string;\n  ready: string;\n  shutdown: string;\n};\n\ntype ConnectionUpdate = (messageType: string, message: string) => void;\n\ntype UpdateHandler = (update: { type: string; data: string }) => void;\n\nexport default {\n  connect: (\n    settings: Settings,\n    connectionUpdate: ConnectionUpdate,\n    logUpdate: UpdateHandler,\n    taskUpdate: UpdateHandler\n  ) => {\n    logger.log(\"api - connect - settings\", settings);\n\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    logger.log(\"api - connect - logString\", logString);\n\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logger.log(\"api - logStream.onopen called\");\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      logger.log(\"api - logStream.onerror - ERROR\", data);\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    logger.log(\"api - connect - taskString\", taskString);\n\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      logger.log(\"api - taskStream.onopen called\");\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      logger.log(\"api - taskStream.onerror - ERROR\", data);\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (settings: Settings) => {\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n    logger.log(\"api - getYAML - connectionString\", connectionString);\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id: string) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId: string, stars: any) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId: string, content: any) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category: string, q: string, sort: string) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","export default {\n  pokedex: {\n    name: \"Pokedex Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      rest_api: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          chunk_seg:\n            x: 250\n            y: 268\n          tf_encode:\n            x: 250\n            y: 420\n          chunk_idx:\n            x: 250\n            y: 600\n          ranker:\n            x: 250\n            y: 836\n          doc_idx:\n            x: 249\n            y: 985\n    pods:\n      gateway: {}\n      chunk_seg:\n        uses: pods/craft.yml\n        parallel: $PARALLEL\n        needs: gateway\n      tf_encode:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 600000\n        needs: chunk_seg\n      chunk_idx:\n        uses: pods/chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        timeout_ready: 100000\n        needs: tf_encode\n      ranker:\n        uses: BiMatchRanker\n        needs: chunk_idx\n      doc_idx:\n        uses: pods/doc.yml\n        needs: ranker\n    \n    `,\n  },\n  flower: {\n    name: \"Flower Search Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          loader:\n            x: 250\n            y: 257\n          flipper:\n            x: 252\n            y: 407\n          normalizer:\n            x: 239\n            y: 563\n          encoder:\n            x: 252\n            y: 712\n          chunk_indexer:\n            x: 250\n            y: 872\n          ranker:\n            x: 252\n            y: 1066\n          doc_indexer:\n            x: 253\n            y: 1199\n    pods:\n      gateway: {}\n      loader:\n        uses: yaml/craft-load.yml\n        read_only: true\n        needs: gateway\n      flipper:\n        uses: yaml/craft-flip.yml\n        read_only: true\n        needs: loader\n      normalizer:\n        uses: yaml/craft-normalize.yml\n        read_only: true\n        needs: flipper\n      encoder:\n        uses: $ENCODER\n        timeout_ready: 600000\n        read_only: true\n        needs: normalizer\n      chunk_indexer:\n        uses: yaml/index-chunk.yml\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: yaml/index-doc.yml\n        needs: ranker  \n    `,\n  },\n  southpark: {\n    name: \"Southpark Query\",\n    type: \"example\",\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 254\n            y: 147\n          splittor:\n            x: 254\n            y: 270\n          encoder:\n            x: 254\n            y: 448\n          chunk_indexer:\n            x: 251\n            y: 645\n          ranker:\n            x: 255\n            y: 862\n          doc_indexer:\n            x: 256\n            y: 1002\n    pods:\n      gateway: {}\n      splittor:\n        uses: pods/craft-split.yml\n        parallel: $PARALLEL\n        read_only: true\n        needs: gateway\n      encoder:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 60000\n        read_only: true\n        needs: splittor\n      chunk_indexer:\n        uses: pods/index-chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        reducing_uses: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: pods/index-doc.yml\n        needs: ranker\n    `,\n  },\n};\n","import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nimport { nanoid } from \"nanoid\";\nimport { Constants, Dispatcher, transformLog } from \"./\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport logger from \"../logger\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleFlows from \"../data/exampleFlows\";\n\nconst MAX_CHART_TICKS = 60;\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getExampleFlows() {\n  const flows: LooseObject = {};\n\n  Object.entries(exampleFlows).forEach(([id, flow]) => {\n    const parsed = parseYAML(flow.yaml);\n    let canvas;\n    try {\n      canvas = parsed.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const formatted = formatForFlowchart(parsed.data.pods, canvas);\n    flows[id] = {\n      ...flow,\n      flow: formatted,\n    };\n  });\n\n  return flows;\n}\n\nfunction getUserFlows() {\n  const storedFlows = localStorage.getItem(\"userFlows\");\n  const userFlows = storedFlows ? JSON.parse(storedFlows) : null;\n  return _.isEmpty(userFlows)\n    ? {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n      }\n    : userFlows;\n}\n\nfunction getInitialFlow() {\n  return {\n    selected: {},\n    hovered: {},\n    scale: 1,\n    nodes: {\n      gateway: {\n        id: \"gateway\",\n        label: \"gateway\",\n        ports: {\n          outPort: {\n            id: \"outPort\",\n            type: \"output\",\n          },\n        },\n        properties: {},\n        position: { x: 629, y: 72 },\n      },\n    },\n    links: {},\n    offset: { x: 0, y: 0 },\n  };\n}\n\nfunction getInitialLevelOccurences() {\n  let occurences: LooseObject = {\n    lastLog: 0,\n    levels: {},\n  };\n  CHART_LEVELS.forEach((level) => {\n    occurences.levels[level] = 0;\n  });\n  return occurences;\n}\n\nfunction getInitialStore(): LooseObject {\n  console.log(\"GETTING INITIAL STORE\");\n  const initialStore: LooseObject = {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flows: {\n      ...getUserFlows(),\n      ...getExampleFlows(),\n    },\n    selectedFlow: \"_userFlow\",\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: {},\n    currentTab: \"logStream\",\n  };\n  return initialStore;\n}\n\nlet _store: any = getInitialStore();\nlet _updateChartInterval: any;\nlet _updateTaskInterval: any;\nlet _bannerTimeout: any;\n\nif (window.location.hostname === \"localhost\") logger.enable();\n\ntype DispatchProps = {\n  actionType: string;\n  payload: any;\n};\n\ninterface LooseObject {\n  [key: string]: any;\n}\n\nclass StoreBase extends EventEmitter {\n  constructor() {\n    super();\n    console.log(\"CONSTRUCTOR\");\n    Dispatcher.register(this.registerActions);\n    this.init();\n    (window as any).peakLogs = this.getLogs;\n    (window as any).peakStore = () => console.log(_store);\n  }\n  registerActions = ({ actionType, payload }: DispatchProps) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...(payload as [string, string]));\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect();\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_FLOW:\n        this.loadFlow(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      case Constants.CREATE_NEW_FLOW:\n        this.createNewFlow();\n        break;\n      case Constants.DUPLICATE_FLOW:\n        this.createNewFlow(payload);\n        break;\n      case Constants.UPDATE_FLOW:\n        this.updateFlow(payload);\n        break;\n      case Constants.DELETE_FLOW:\n        this.deleteFlow(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    console.log(\"INIT\");\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    console.log(\"GOT INITIAL STORE\");\n\n    console.log(\"store:\", _store);\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n    console.log(\"FINISH INIT\");\n  };\n\n  clearIntervals = () => {\n    if (_updateChartInterval) clearInterval(_updateChartInterval);\n    if (_updateTaskInterval) clearInterval(_updateTaskInterval);\n  };\n\n  initFlowChart = async () => {\n    let flow;\n\n    try {\n      let str = await api.getYAML(_store.settings);\n      flow = parseYAML(str);\n    } catch (e) {\n      logger.log(\"initFlowChart - parseYAML[API] ERROR\", e);\n      return;\n    }\n\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n\n    logger.log(\"initFlowChart - flow\", flow);\n    logger.log(\"initFlowChart - canvas\", canvas);\n\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n\n    logger.log(\"initFlowChart - parsed\", parsed);\n\n    let flows: LooseObject = {};\n    flows.connectedFlow = {\n      flow: parsed,\n      name: \"Network Flow\",\n      type: \"remote\",\n    };\n    _store.flows = { ...flows, ..._store.flows };\n    _store.selectedFlow = \"connectedFlow\";\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    _updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status: string, message: string) => {\n    logger.log(\"handleLogConnectionStatus - status\", status);\n    logger.log(\"handleLogConnectionStatus - message\", message);\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n    }\n    this.emit(\"update-ui\");\n  };\n\n  handleNewLog = (message: { data: any }) => {\n    const { data } = message;\n    const log = transformLog(data, _store.logs.length);\n\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message: { data: any }) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj: any) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a: any, b: any) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a: any, b: any) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex: number) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label: string) => {\n    let selected: LooseObject = {};\n    let x = 0;\n    let y = 0;\n    Object.entries(_store.flowchart.nodes).forEach(\n      ([key, value]: [string, any]) => {\n        if (value.label === label) {\n          selected.id = key;\n          selected.type = \"node\";\n          x = value.position.x * -1 + 40;\n          y = value.position.y * -1 + 100;\n        }\n      }\n    );\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML?: string) => {\n    logger.log(\"importCustomYAML - customYAML\", customYAML);\n    this.createNewFlow(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadFlow = (flowId: string) => {\n    _store.selectedFlow = flowId;\n    this.emit(\"update-flowchart\");\n  };\n\n  updateFlow = (newFlow: any) => {\n    _store.flows[_store.selectedFlow].flow = newFlow;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  createNewFlow = (customYAML?: string) => {\n    let prefixString = \"Custom Flow\";\n\n    let userFlows = Object.values(_store.flows).filter((flow: any) =>\n      flow.name.startsWith(prefixString)\n    );\n\n    const flowNumbers = userFlows\n      .map((f: any) => parseInt(f.name.substring(prefixString.length)) || 0)\n      .sort((a, b) => a - b);\n\n    const largestNumber = flowNumbers[flowNumbers.length - 1] || 0;\n\n    const id = nanoid();\n\n    let flow;\n\n    if (customYAML) {\n      const parsed = parseYAML(customYAML);\n      let canvas;\n      try {\n        canvas = parsed.data.with.board.canvas;\n      } catch (e) {\n        canvas = {};\n      }\n      flow = formatForFlowchart(parsed.data.pods, canvas);\n    } else flow = getInitialFlow();\n\n    _store.flows[id] = {\n      name: `${prefixString} ${largestNumber + 1}`,\n      type: \"user-generated\",\n      flow,\n    };\n\n    _store.selectedFlow = id;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  deleteFlow = (flowId: string) => {\n    _store.flows = _.omit(_store.flows, flowId);\n\n    const nonExampleFlows = Object.entries(_store.flows).filter(\n      ([id, flow]: [string, any]) => flow.type !== \"example\"\n    );\n\n    if (_store.selectedFlow === flowId && nonExampleFlows.length) {\n      _store.selectedFlow = nonExampleFlows[0][0];\n    } else if (!nonExampleFlows.length) {\n      _store.flows = {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n        ..._store.flows,\n      };\n      _store.selectedFlow = \"_userFlow\";\n    }\n\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  saveFlowsToStorage = () => {\n    let toSave: LooseObject = {};\n    const { flows } = _store;\n    Object.entries(flows).forEach(([id, flow]: [string, any]) => {\n      if (flow.type === \"user-generated\") toSave[id] = flow;\n    });\n    localStorage.setItem(\"userFlows\", JSON.stringify(toSave));\n  };\n\n  saveSettings = (settings: LooseObject) => {\n    logger.log(\"saveSettings - settings\", settings);\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }: { imageId: string; stars: any }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({\n    imageId,\n    content,\n  }: {\n    imageId: string;\n    content: any;\n  }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({\n    category,\n    q,\n    sort,\n  }: {\n    category: string;\n    q: string;\n    sort: string;\n  }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message: string, theme: string) => {\n    if (_bannerTimeout) clearTimeout(_bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    _bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message: string) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data: { modal: string; modalParams: any }) => {\n    const { modal, modalParams } = data;\n    _store.modal = modal;\n    _store.modalParams = modalParams || {};\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = {};\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId: string) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    console.log(\"GET MODAL:\", _store);\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds: number = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    const step = numSeconds / MAX_CHART_TICKS;\n    const data = [];\n    const now = Math.floor(+new Date() / 1000);\n\n    for (let i = now - numSeconds; i < now; i += step) {\n      let item = _.cloneDeep(emptyItem);\n      for (let j = i; j < i + step; ++j) {\n        const occurence = _store.logLevelOccurences[j];\n        if (!occurence) continue;\n        item.lastLog = occurence.lastLog;\n        Object.entries(occurence.levels).forEach(([level, amount]) => {\n          item.levels[level] = item.levels[level] + amount;\n        });\n      }\n      data.push(item);\n    }\n\n    return { data, numSeconds, numTicks: MAX_CHART_TICKS, lastTimestamp: now };\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flows[_store.selectedFlow];\n  };\n\n  getFlows = () => {\n    return _store.flows;\n  };\n\n  getSelectedFlowId = () => {\n    return _store.selectedFlow;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n\n  getStoreCopy = () => {\n    return _.cloneDeep(_store);\n  };\n}\n\nexport const Store = new StoreBase();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","export const timeout = 15000;\nexport const hubURL = \"https://hub.jina.ai\";\n// export const hubURL:'http://localhost:3040';\n"],"sourceRoot":""}