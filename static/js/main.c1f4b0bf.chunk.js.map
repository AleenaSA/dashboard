{"version":3,"sources":["data/exampleFlows.js","flux/constants.js","settings.js","components/Layout/MainNavbar/NavbarSpacer.tsx","components/Layout/MainNavbar/NavbarToggle.tsx","components/Layout/MainNavbar/ConnectionIndicator.tsx","components/Layout/MainNavbar/UserActions.tsx","components/Layout/MainNavbar/MainNavbar.tsx","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","flux/dispatcher.js","helpers.ts","logger.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","flux/tranformLog.ts","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","components/Common/CookiesBanner.tsx","components/Common/InfoBanner.tsx","components/Common/ConnectionBanner.tsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","modals/LogDetails.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.tsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.tsx","components/FlowChart/NodePort.jsx","components/FlowChart/FlowSelection.jsx","views/FlowView.jsx","components/LogStream/BarChartBase.tsx","components/LogStream/LogLevelSummaryChart.tsx","components/LogStream/PieChartBase.tsx","components/LogStream/LogLevelPieChart.tsx","components/Common/MultiFilterSelect.tsx","components/LogStream/LogItem.tsx","components/LogStream/LogsTableHeader.tsx","hooks/useTimeoutFn.ts","components/LogStream/LogsTable.tsx","hooks/useDebounce.ts","views/LogsView.tsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/options.js","components/Settings/FormItem.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.tsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","components/Common/HelpCard.tsx","views/NotFound.jsx","routes.js","views/PackageView.jsx","views/LogIn.jsx","withTracker.js","views/FallbackPage.tsx","App.js","theme.ts","index.js","flux/config.js"],"names":["module","exports","pokedex","name","type","yaml","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_FLOW","SHOW_POD_IN_FLOW","CREATE_NEW_FLOW","UPDATE_FLOW","DUPLICATE_FLOW","DELETE_FLOW","nodeOffset","x","y","NavbarSpacer","className","NavbarToggle","toggleSidebar","onClick","ConnectionIndicator","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","MainNavbar","usesAuth","usesConnection","useState","setUserActionsVisible","fluid","navbar","isVisible","href","style","lineHeight","id","maxWidth","item","hasSubItems","items","length","path","window","location","hash","substring","active","matches","forEach","match","startsWith","position","RouteNavLink","htmlBefore","dangerouslySetInnerHTML","__html","title","htmlAfter","top","map","subItem","idx","key","navItems","nav","SidebarNavItem","Dispatcher","YAML","require","settings","propertyList","toBlob","content","Blob","serializeLogsToJSONBlob","logs","fileContent","reduce","acc","log","i","JSON","stringify","serializeLogsToJSON","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","pod","node","label","ports","needs","send_to","properties","parents","Array","isArray","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","prop","formatAsYAML","chart","chartWith","with","needsByPodLabel","values","curr","nodeLabelsByPortId","getNodeLabelsByPortId","outPort","neededBy","inPort","push","arr","podProperties","entries","propValue","propName","decodePropValue","output","board","formatBytes","numBytes","toFixed","handleErrorMessage","msg","url","line","logger","logStream","taskStream","_store","logsEnabled","args","arguments","console","isEnabled","enable","_navigator","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","filename","Date","blob","saveAs","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","close","EventSource","onopen","onmessage","m","onerror","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","searchHub","category","q","sort","CHART_LEVELS","getExampleFlows","flows","exampleFlows","flow","parsed","e","getUserFlows","userFlows","localStorage","getItem","_","isEmpty","_userFlow","getInitialLevelOccurences","occurences","lastLog","levels","level","hostname","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadFlow","showPodByLabel","createNewFlow","updateFlow","deleteFlow","init","clearIntervals","shutdown","ready","images","banner","loading","modal","menuVisible","selectedFlow","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","taskData","qps","current","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","messages","bytes","selectedNode","modalParams","currentTab","initFlowChart","initLogStream","initHub","initUser","emit","updateChartInterval","clearInterval","updateTaskInterval","api","connectedFlow","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","setInterval","status","message","created","createdDate","fromUnixTime","nanoid","unixTime","Math","floor","timestamp","formattedTimestamp","toLocaleString","transformLog","process","levelname","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","obj","indexOf","msgData","sent","received","bytesData","b","slice","parseFloat","shift","flowchart","customYAML","flowId","newFlow","saveFlowsToStorage","flowNumbers","filter","f","largestNumber","omit","nonExampleFlows","toSave","setItem","setTimeout","String","includes","showError","image","reload","bannerTimeout","clearTimeout","hideBanner","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getLogLevelCharts","emptyItem","step","now","cloneDeep","j","occurence","amount","numTicks","lastTimestamp","getLogLevelOccurences","getTaskData","getActivePanel","getConnectionStatus","isLoading","getFlowchart","getFlows","getSelectedFlowId","getAvailableProperties","getIndexedLog","getStoreCopy","register","peakLogs","peakStore","this","EventEmitter","MainSidebar","props","onChange","setState","state","Store","getMenuState","sidebarNavItems","getSidebarItems","dispatch","on","removeListener","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","React","Component","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","CookiesBanner","acceptCookies","Button","InfoBanner","ConnectionBanner","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","inputRef","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","as","rows","submitReview","hiddenKeys","xs","IconSidebarLayout","componentWillUnmount","getData","acceptedCookies","yamlString","storeCopy","render","children","hideLogoText","LogDetails","PasteYAML","WriteReview","PageTitle","subtitle","sm","ChartNode","ButtonGroup","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","ReadOnly","duplicateFlow","EditLink","updateLink","deleteSelection","nodeFromId","nodeToId","choices","FormControl","choice","EditNode","updateLabel","updateNewValue","updateExistingValue","availableProperties","searchQuery","setSearchQuery","filteredProperties","setFilteredProperties","useEffect","results","property","toLowerCase","spellCheck","searchString","newProperties","PodMenu","defaultPods","FlowChartSidebar","readonly","updateNode","selectedId","selectedType","setNode","parseNode","Card","newNode","NodePort","data-html2canvas-ignore","SelectionIndicator","show","TitleConnectionIndicator","DeleteFlowButton","EditFlowsButton","isEditing","FlowSelection","selectedFlowId","setIsEditing","currentFlow","Toggle","Menu","Item","Header","currentIsEditing","itemId","syncEvents","FlowView","componentDidMount","querySelector","preventDefault","extension","classList","add","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","flowType","callback","newChart","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","syncFlow","selectNode","copyChartAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","stopPropagation","display","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","action","newChartTransformer","_levels","INFO","borderColor","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","getParsedDatasets","levelData","tick","borderWidth","getLabels","labels","ChartBase","height","canvasRef","useRef","chartInstance","setChartInstance","onClickChart","activePoints","getElementsAtEvent","getXAxisLabel","getYAxisLabel","Number","isInteger","chartOptions","animation","duration","events","maintainAspectRatio","responsive","legend","boxWidth","tooltips","enabled","elements","point","radius","hitRadius","scales","xAxes","stacked","ticks","maxRotation","yAxes","scaleLabel","labelString","gridLines","borderDash","zeroLineColor","drawBorder","suggestedMin","autoSkip","maxTicksLimit","chartConfig","datasets","options","newChartInstance","ChartElement","chartData","update","LogLevelSummaryChart","memo","showLog","Body","prevProps","nextProps","_colors","background","PieChartBase","getColor","names","mode","LogLevelPieChart","customStyles","container","provided","selectProps","option","styles","cursor","control","MultiFilterSelect","onFilterChange","rest","val","isMulti","LogItem","columns","showLogDetails","logData","logName","levelInitial","firstCol","secondCol","thirdCol","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","LogsTableHeader","useTimeoutFn","fn","ms","isReady","useCallback","set","clear","miniSearchOptions","fields","generateFormatFileName","itemKey","toOption","arrayLike","LogsTable","scrolledToBottom","setScrolledToBottom","windowListRef","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","setSearchString","useMiniSearch","search","searchResults","addAllAsync","buffer","previousLength","usePrevious","newLog","resultData","filters","sources","Set","scrollToItem","deps","cancel","reset","useDebounce","DropdownButton","lineno","funcName","pathname","serializeLogsToCSV","serializeLogsToText","onScroll","scrollOffset","itemCount","itemSize","itemData","chartUpdateInterval","logsUpdateInterval","ElapsedCard","ProgressCard","updateChart","percent","newData","hoverBorderColor","createRef","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","max","minValue","min","difference","suggestedMax","custom","tension","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","Container","QueriesPerSecond","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","original","setOriginal","updates","setUpdates","expanded","setExpanded","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","getStars","rate","handleRatingClick","integer","remainder","StarRating","rating","userRated","ImageCard","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","HubView","sortBy","sortType","setCategory","updateSearch","BuildHistory","buildHistory","build","formattedCreated","buildSize","os","architecture","ImageDetails","version","documentation","source","license","vendor","ReadMe","readme","CopyCommand","copyCode","imageVar","repoTags","code","language","atomOneLight","ReviewCard","review","ImageReviews","newReview","HelpCard","icon","NotFound","exact","layout","IconSidebar","component","hasNewLogs","setLogs","logLevelOccurrences","setLogLevelOccurrences","logLevelCharts","setLogLevelCharts","newCharts","checkForNewLogs","newLogs","newOccurrences","updateLogs","onNewLogs","_index","showLogInTable","getImageData","imageData","readmeHTML","windowHash","windowParams","URLSearchParams","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","FallbackPage","resetErrorBoundary","App","basename","routes","route","FallbackComponent","onReset","palette","default","primary","main","secondary","warning","success","info","ReactDOM"],"mappings":"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","file":"static/js/main.c1f4b0bf.chunk.js","sourcesContent":["module.exports = {\n  pokedex: {\n    name:'Pokedex Query',\n    type: 'example',\n    yaml: `!Flow\n    with:\n      read_only: true\n      rest_api: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          chunk_seg:\n            x: 250\n            y: 268\n          tf_encode:\n            x: 250\n            y: 420\n          chunk_idx:\n            x: 250\n            y: 600\n          ranker:\n            x: 250\n            y: 836\n          doc_idx:\n            x: 249\n            y: 985\n    pods:\n      gateway: {}\n      chunk_seg:\n        uses: pods/craft.yml\n        parallel: $PARALLEL\n        needs: gateway\n      tf_encode:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 600000\n        needs: chunk_seg\n      chunk_idx:\n        uses: pods/chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        timeout_ready: 100000\n        needs: tf_encode\n      ranker:\n        uses: BiMatchRanker\n        needs: chunk_idx\n      doc_idx:\n        uses: pods/doc.yml\n        needs: ranker\n    \n    `,\n  },\n  flower:{\n    name:'Flower Search Query',\n    type: 'example',\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          loader:\n            x: 250\n            y: 257\n          flipper:\n            x: 252\n            y: 407\n          normalizer:\n            x: 239\n            y: 563\n          encoder:\n            x: 252\n            y: 712\n          chunk_indexer:\n            x: 250\n            y: 872\n          ranker:\n            x: 252\n            y: 1066\n          doc_indexer:\n            x: 253\n            y: 1199\n    pods:\n      gateway: {}\n      loader:\n        uses: yaml/craft-load.yml\n        read_only: true\n        needs: gateway\n      flipper:\n        uses: yaml/craft-flip.yml\n        read_only: true\n        needs: loader\n      normalizer:\n        uses: yaml/craft-normalize.yml\n        read_only: true\n        needs: flipper\n      encoder:\n        uses: $ENCODER\n        timeout_ready: 600000\n        read_only: true\n        needs: normalizer\n      chunk_indexer:\n        uses: yaml/index-chunk.yml\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: yaml/index-doc.yml\n        needs: ranker  \n    `\n  },\n  southpark: {\n    name: 'Southpark Query',\n    type: 'example',\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 254\n            y: 147\n          splittor:\n            x: 254\n            y: 270\n          encoder:\n            x: 254\n            y: 448\n          chunk_indexer:\n            x: 251\n            y: 645\n          ranker:\n            x: 255\n            y: 862\n          doc_indexer:\n            x: 256\n            y: 1002\n    pods:\n      gateway: {}\n      splittor:\n        uses: pods/craft-split.yml\n        parallel: $PARALLEL\n        read_only: true\n        needs: gateway\n      encoder:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 60000\n        read_only: true\n        needs: splittor\n      chunk_indexer:\n        uses: pods/index-chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        reducing_uses: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: pods/index-doc.yml\n        needs: ranker\n    `,\n  }\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_FLOW: \"LOAD_FLOW\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n  CREATE_NEW_FLOW: \"CREATE_NEW_FLOW\",\n  UPDATE_FLOW: \"UPDATE_FLOW\",\n  DUPLICATE_FLOW: \"DUPLICATE_FLOW\",\n  DELETE_FLOW: \"DELETE_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","import React from \"react\";\n\nfunction NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n\nexport { NavbarSpacer };\n","import React from \"react\";\n\ntype Props = {\n  toggleSidebar: () => void;\n};\n\nfunction NavbarToggle({ toggleSidebar }: Props) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n\nexport { NavbarToggle };\n","import React from \"react\";\n// @ts-ignore\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\ntype Props = {\n  connected: boolean;\n  reconnect: () => void;\n};\n\nfunction ConnectionIndicator({ connected, reconnect }: Props) {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n\nexport { ConnectionIndicator };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n  // @ts-ignore\n} from \"shards-react\";\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  userActionsVisible: boolean;\n  user: User | null;\n  logOut: () => void;\n  toggleUserActions: () => void;\n};\n\nfunction UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}: Props) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n\nexport { UserActions };\n","import React, { useState } from \"react\";\n// @ts-ignore\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport { NavbarSpacer } from \"./NavbarSpacer\";\nimport { NavbarToggle } from \"./NavbarToggle\";\nimport { ConnectionIndicator } from \"./ConnectionIndicator\";\nimport { UserActions } from \"./UserActions\";\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  usesAuth: boolean;\n  usesConnection: boolean;\n  connected: boolean;\n  logOut: () => void;\n  toggleSidebar: () => void;\n  reconnect: () => void;\n  user: User | null;\n};\n\nfunction MainNavbar({\n  usesAuth,\n  usesConnection,\n  logOut,\n  toggleSidebar,\n  reconnect,\n  connected,\n  user,\n}: Props) {\n  const [userActionsVisible, setUserActionsVisible] = useState(false);\n  function toggleUserActions() {\n    setUserActionsVisible((isVisible) => !isVisible);\n  }\n  return (\n    <div className=\"main-navbar bg-white sticky-top\">\n      <Container fluid className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarSpacer />\n          <Nav navbar className=\"border-left flex-row\">\n            {usesConnection && (\n              <ConnectionIndicator\n                reconnect={reconnect}\n                connected={connected}\n              />\n            )}\n            {usesAuth && (\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={toggleUserActions}\n                logOut={logOut}\n              />\n            )}\n          </Nav>\n          <NavbarToggle toggleSidebar={toggleSidebar} />\n        </Navbar>\n      </Container>\n    </div>\n  );\n}\n\nexport { MainNavbar };\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","// @ts-nocheck\nimport {ProcessedLog} from './flux/tranformLog'\n\ntype PodPropertyType = \"str\" | \"int\" | \"bool\" | \"SocketType\" | \"ReplicaType\"\ntype PodProperty = {\n  name: string,\n  type: PodPropertyType\n}\ntype PropertyMap = { [key: string]: PodPropertyType}\n\nconst YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList: PodProperty[] = require(\"./data/podProperties.json\");\n\nfunction toBlob(content: string) {\n  return new Blob([content], { type: \"text,plain;charset=utf-8\" });\n}\nfunction serializeLogsToCSV(logs: ProcessedLog[]): string {\n  const columns =\n    \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcName},${log.pathname}\\n`;\n    return acc;\n  }, columns);\n  return fileContent;\n}\n\nfunction serializeLogsToJSON(logs: ProcessedLog[]): string {\n  const fileContent = logs.reduce((acc, log, i) => {\n    acc += JSON.stringify(log) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    return acc;\n  }, \"\\n\");\n  return `[${fileContent}]`;\n}\n\nfunction serializeLogsToText(logs: ProcessedLog[]): string {\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    return acc;\n  }, \"\");\n  return fileContent;\n}\n\nconst serializeLogsToCSVBlob = (logs: ProcessedLog[]) => toBlob(serializeLogsToCSV(logs));\nconst serializeLogsToJSONBlob = (logs: ProcessedLog[]) => toBlob(serializeLogsToJSON(logs));\nconst serializeLogsToTextBlob = (logs: ProcessedLog[]) => toBlob(serializeLogsToText(logs));\n\nconst propertyTypes: PropertyMap = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str: string) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR: string) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\nconst getNodeLabelsByPortId = ({ from, to }, nodes) => ({\n  [from.portId]: nodes[from.nodeId].label || nodes[from.nodeId].properties.name,\n  [to.portId]: nodes[to.nodeId].label || nodes[to.nodeId].properties.name,\n});\nconst decodePropValue = (propName, propValue) =>\n  propertyTypes[propName] === \"bool\" ? propValue === \"true\" : propValue;\nconst unpackIfLengthOne = (arr) =>\n  Array.isArray(arr) && arr.length === 1 ? arr[0] : arr;\n\nexport function formatAsYAML(chart) {\n  const { with: chartWith, nodes, links } = chart;\n\n  const needsByPodLabel = Object.values(links).reduce((acc, curr) => {\n    const nodeLabelsByPortId = getNodeLabelsByPortId(curr, nodes);\n    const needs = nodeLabelsByPortId.outPort;\n    const neededBy = nodeLabelsByPortId.inPort;\n\n    if (!acc[neededBy]) {\n      acc[neededBy] = [];\n    }\n    acc[neededBy].push(needs);\n    return acc;\n  }, {});\n\n  const pods = Object.values(nodes).reduce((acc, node) => {\n    const { label } = node;\n    if (!label) return acc;\n\n    const podProperties = Object.entries(node.properties).reduce(\n      (acc, [key, propValue]) => {\n        acc[key] = decodePropValue(key, propValue);\n        return acc;\n      },\n      {}\n    );\n    if (needsByPodLabel[label]) {\n      podProperties.needs = unpackIfLengthOne(needsByPodLabel[label]);\n    }\n\n    acc[label] = { ...podProperties };\n    return acc;\n  }, {});\n\n  const canvas = Object.values(nodes).reduce((acc, node) => {\n    const {\n      position: { x, y },\n    } = node;\n    acc[node.label] = { x, y };\n    return acc;\n  }, {});\n\n  const output = { with: { ...chartWith, board: { canvas } }, pods };\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds: number): string {\n  let minute = 60;\n  let hour = 60 * minute;\n\n  return numSeconds < minute ? `${Math.floor(numSeconds)}s`\n    : numSeconds < hour ? `${Math.floor(numSeconds/minute)}m ${Math.floor(numSeconds % minute)}s`\n    : `${Math.floor(numSeconds/hour)}h ${Math.floor((numSeconds % hour)/minute)}m ${Math.floor(numSeconds%minute)}s`\n}\n\nexport function formatBytes(numBytes: number): string {\n  return numBytes < 1024 ? `${numBytes} Bytes`\n    : (numBytes < 1024 ** 2) ? `${(numBytes / 1024).toFixed(1)} KB`\n    : (numBytes < 1024 ** 3) ? `${(numBytes / 1024 ** 2).toFixed(1)} MB`\n    : `${(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth): number {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n\nexport {\n  serializeLogsToCSVBlob,\n  serializeLogsToTextBlob,\n  serializeLogsToJSONBlob,\n};\n","import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg, url, line) {\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nconst logger = {\n  log: function () {\n    if (!window.logsEnabled) return;\n    let args = [...arguments];\n    console.log(...args);\n    window.logs.push(args);\n  },\n  isEnabled: function () {\n    return window.logsEnabled;\n  },\n  enable: function () {\n    const _navigator = {};\n    for (let i in window.navigator) _navigator[i] = window.navigator[i];\n    window.logs = [];\n    window.logs.push(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    window.logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = window.logsFormat || \"json\";\n    const logs = window.logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","import axios from \"axios\";\nimport logger from \"../logger\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  connect: (settings, connectionUpdate, logUpdate, taskUpdate) => {\n    logger.log(\"api - connect - settings\", settings);\n\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    logger.log(\"api - connect - logString\", logString);\n\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logger.log(\"api - logStream.onopen called\");\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      logger.log(\"api - logStream.onerror - ERROR\", data);\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    logger.log(\"api - connect - taskString\", taskString);\n\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      logger.log(\"api - taskStream.onopen called\");\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      logger.log(\"api - taskStream.onerror - ERROR\", data);\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (settings) => {\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n    logger.log(\"api - getYAML - connectionString\", connectionString);\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nimport Dispatcher from \"./dispatcher\";\nimport { nanoid } from \"nanoid\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport logger from \"../logger\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleFlows from \"../data/exampleFlows\";\nimport { transformLog } from \"./tranformLog\";\n\nlet _store;\n\nconst MAX_CHART_TICKS = 60;\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getExampleFlows() {\n  const flows = {};\n\n  Object.entries(exampleFlows).forEach(([id, flow]) => {\n    const parsed = parseYAML(flow.yaml);\n    let canvas;\n    try {\n      canvas = parsed.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const formatted = formatForFlowchart(parsed.data.pods, canvas);\n    flows[id] = {\n      ...flow,\n      flow: formatted,\n    };\n  });\n\n  return flows;\n}\n\nfunction getUserFlows() {\n  const userFlows = JSON.parse(localStorage.getItem(\"userFlows\"));\n  return _.isEmpty(userFlows)\n    ? {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n      }\n    : userFlows;\n}\n\nfunction getInitialFlow() {\n  return {\n    selected: {},\n    hovered: {},\n    scale: 1,\n    nodes: {\n      gateway: {\n        id: \"gateway\",\n        label: \"gateway\",\n        ports: {\n          outPort: {\n            id: \"outPort\",\n            type: \"output\",\n          },\n        },\n        properties: {},\n        position: { x: 629, y: 72 },\n      },\n    },\n    links: {},\n    offset: { x: 0, y: 0 },\n  };\n}\n\nfunction getInitialLevelOccurences() {\n  let occurences = {\n    lastLog: 0,\n    levels: {},\n  };\n  CHART_LEVELS.forEach((level) => {\n    occurences.levels[level] = 0;\n  });\n  return occurences;\n}\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flows: {\n      ...getUserFlows(),\n      ...getExampleFlows(),\n    },\n    selectedFlow: \"_userFlow\",\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: {},\n    currentTab: \"logStream\",\n  };\n}\n\nif (window.location.hostname === \"localhost\") logger.enable();\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    window.peakLogs = this.getLogs;\n    window.peakStore = () => console.log(_store);\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_FLOW:\n        this.loadFlow(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      case Constants.CREATE_NEW_FLOW:\n        this.createNewFlow();\n        break;\n      case Constants.DUPLICATE_FLOW:\n        this.createNewFlow(payload);\n        break;\n      case Constants.UPDATE_FLOW:\n        this.updateFlow(payload);\n        break;\n      case Constants.DELETE_FLOW:\n        this.deleteFlow(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    console.log(\"store:\", _store);\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async () => {\n    let flow;\n\n    try {\n      let str = await api.getYAML(_store.settings);\n      flow = parseYAML(str);\n    } catch (e) {\n      logger.log(\"initFlowChart - parseYAML[API] ERROR\", e);\n      return;\n    }\n\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n\n    logger.log(\"initFlowChart - flow\", flow);\n    logger.log(\"initFlowChart - canvas\", canvas);\n\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n\n    logger.log(\"initFlowChart - parsed\", parsed);\n\n    let flows = {};\n    flows.connectedFlow = {\n      flow: parsed,\n      name: \"Network Flow\",\n      type: \"remote\",\n    };\n    _store.flows = { ...flows, ..._store.flows };\n    _store.selectedFlow = \"connectedFlow\";\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status, message) => {\n    logger.log(\"handleLogConnectionStatus - status\", status);\n    logger.log(\"handleLogConnectionStatus - message\", message);\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n    }\n    this.emit(\"update-ui\");\n  };\n\n  handleNewLog = (message) => {\n    const { data } = message;\n    const log = transformLog(data, _store.logs.length);\n\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    let x = 0;\n    let y = 0;\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n        x = value.position.x * -1 + 40;\n        y = value.position.y * -1 + 100;\n      }\n    }\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    logger.log(\"importCustomYAML - customYAML\", customYAML);\n    this.createNewFlow(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadFlow = (flowId) => {\n    _store.selectedFlow = flowId;\n    this.emit(\"update-flowchart\");\n  };\n\n  updateFlow = (newFlow) => {\n    _store.flows[_store.selectedFlow].flow = newFlow;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  createNewFlow = (customYAML) => {\n    let prefixString = \"Custom Flow\";\n\n    let userFlows = Object.values(_store.flows).filter((flow) =>\n      flow.name.startsWith(prefixString)\n    );\n\n    const flowNumbers = userFlows\n      .map((f) => parseInt(f.name.substring(prefixString.length)) || 0)\n      .sort((a, b) => a - b);\n\n    const largestNumber = flowNumbers[flowNumbers.length - 1] || 0;\n\n    const id = nanoid();\n\n    let flow;\n\n    if (customYAML) {\n      const parsed = parseYAML(customYAML);\n      let canvas;\n      try {\n        canvas = parsed.data.with.board.canvas;\n      } catch (e) {\n        canvas = {};\n      }\n      flow = formatForFlowchart(parsed.data.pods, canvas);\n    } else flow = getInitialFlow();\n\n    _store.flows[id] = {\n      name: `${prefixString} ${largestNumber + 1}`,\n      type: \"user-generated\",\n      flow,\n    };\n\n    _store.selectedFlow = id;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  deleteFlow = (flowId) => {\n    _store.flows = _.omit(_store.flows, flowId);\n\n    const nonExampleFlows = Object.entries(_store.flows).filter(\n      ([id, flow]) => flow.type !== \"example\"\n    );\n\n    if (_store.selectedFlow === flowId && nonExampleFlows.length) {\n      _store.selectedFlow = nonExampleFlows[0][0];\n    } else if (!nonExampleFlows.length) {\n      _store.flows = {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n        ..._store.flows,\n      };\n      _store.selectedFlow = \"_userFlow\";\n    }\n\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  saveFlowsToStorage = () => {\n    let toSave = {};\n    const { flows } = _store;\n    Object.entries(flows).forEach(([id, flow]) => {\n      if (flow.type === \"user-generated\") toSave[id] = flow;\n    });\n    localStorage.setItem(\"userFlows\", JSON.stringify(toSave));\n  };\n\n  saveSettings = (settings) => {\n    logger.log(\"saveSettings - settings\", settings);\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, modalParams } = data;\n    _store.modal = modal;\n    _store.modalParams = modalParams || {};\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = {};\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    const step = numSeconds / MAX_CHART_TICKS;\n    const data = [];\n    const now = parseInt(new Date() / 1000);\n\n    for (let i = now - numSeconds; i < now; i += step) {\n      let item = _.cloneDeep(emptyItem);\n      for (let j = i; j < i + step; ++j) {\n        const occurence = _store.logLevelOccurences[j];\n        if (!occurence) continue;\n        item.lastLog = occurence.lastLog;\n        Object.entries(occurence.levels).forEach(([level, amount]) => {\n          item.levels[level] = item.levels[level] + amount;\n        });\n      }\n      data.push(item);\n    }\n\n    return { data, numSeconds, numTicks: MAX_CHART_TICKS, lastTimestamp: now };\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flows[_store.selectedFlow];\n  };\n\n  getFlows = () => {\n    return _store.flows;\n  };\n\n  getSelectedFlowId = () => {\n    return _store.selectedFlow;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n\n  getStoreCopy = () => {\n    return _.cloneDeep(_store);\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import { fromUnixTime } from \"date-fns\";\nimport { nanoid } from \"nanoid\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\nexport type RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n};\n\nexport type ProcessedLog = RawLog & {\n  createdDate: Date;\n  id: string;\n  idx: number;\n  unixTime: number;\n  timestamp: Date;\n  formattedTimestamp: string;\n};\n\nfunction transformLog(log: RawLog, idx: number): ProcessedLog {\n  const { created } = log;\n  const createdDate = fromUnixTime(created);\n  const id = nanoid();\n  const unixTime = Math.floor(created);\n  const timestamp = new Date(unixTime * 1000);\n  const formattedTimestamp = timestamp.toLocaleString();\n  return {\n    ...log,\n    createdDate,\n    id,\n    idx,\n    unixTime,\n    timestamp,\n    formattedTimestamp,\n  };\n}\n\nexport { transformLog };\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\ntype Props = {\n  show: boolean;\n  acceptCookies: () => void;\n};\n\nfunction CookiesBanner({ acceptCookies }: Props) {\n  return (\n    <div className=\"cookies-banner\">\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n\nexport { CookiesBanner };\n","import React from \"react\";\n\ntype Props = {\n  data: {\n    theme: string;\n    message: string;\n  };\n};\n\nfunction InfoBanner({ data }: Props) {\n  if (!data) return null;\n  return (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  );\n}\n\nexport { InfoBanner };\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  reconnect: () => void;\n};\n\nfunction ConnectionBanner({ reconnect }: Props) {\n  return (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport { ConnectionBanner };\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"msg\", \"unixTime\"];\n\nexport default ({ open, closeModal, modalParams }) => {\n  const log = modalParams.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.msg}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"msg\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport { MainNavbar } from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport { CookiesBanner } from \"../components/Common/CookiesBanner\";\nimport { InfoBanner } from \"../components/Common/InfoBanner\";\nimport { ConnectionBanner } from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      user: Store.getUser(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getUser);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getUser);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    const loggerEnabled = logger.isEnabled();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      connected,\n      modalParams,\n      loggerEnabled,\n    });\n  };\n\n  getUser = () => {\n    const user = Store.getUser();\n    this.setState({ user });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      connected,\n      user,\n      loading,\n      modalParams,\n      loggerEnabled,\n    } = this.state;\n    const { children, usesAuth, usesConnection } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar\n              usesAuth={usesAuth}\n              usesConnection={usesConnection}\n              logOut={this.logOut}\n              toggleSidebar={this.toggleSidebar}\n              reconnect={this.reconnect}\n              connected={connected}\n              user={user}\n            />\n            <InfoBanner data={banner} />\n            {usesConnection && !loading && !connected && (\n              <ConnectionBanner reconnect={this.reconnect} />\n            )}\n            {children}\n            {!acceptedCookies && (\n              <CookiesBanner acceptCookies={this.acceptCookies} />\n            )}\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <LogDetails\n          open={modal === \"logDetails\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n          modalParams={modalParams}\n        />\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: string;\n  subtitle: string;\n  className: string;\n};\n\nfunction PageTitle({ title, subtitle, className }: Props) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n}\n\nexport { PageTitle };\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default function SidebarItem(props) {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport _ from \"lodash\";\nimport { IChart, ILink, INode } from \"@mrblenny/react-flow-chart\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\n\ninterface Node extends INode {\n  label?: string;\n}\n\ntype ParsedNode = {\n  label: string;\n  id: string;\n  properties: { [key: string]: string | number };\n  newProperties: { [key: string]: string | number };\n};\n\ntype NodesObject = {\n  [key: string]: Node;\n};\n\nconst parseNode = (node: Node): ParsedNode => {\n  const properties = { ...node.properties };\n  const newProperties = {};\n  const label = node.label || \"\";\n\n  return { label, id: node.id, properties, newProperties };\n};\n\nfunction ReadOnly({ duplicateFlow }: { duplicateFlow: () => void }) {\n  return (\n    <div className=\"readonly-overlay py-4 px-4 text-center\">\n      <h4 className=\"my-4\">\n        <b>\n          This flow is <span className=\"text-muted\">readonly</span>\n        </b>\n      </h4>\n      <p className=\"my-4\">To edit this flow, please duplicate it.</p>\n      <Button onClick={duplicateFlow}>Duplicate Flow</Button>\n    </div>\n  );\n}\n\ntype EditLinkProps = {\n  link: ILink;\n  nodes: NodesObject;\n  updateLink: (\n    linkId: string,\n    nodeFrom: string,\n    nodeTo: string | undefined\n  ) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditLink({ link, nodes, updateLink, deleteSelection }: EditLinkProps) {\n  let nodeFromId = link.from.nodeId;\n  let nodeToId = link.to.nodeId;\n\n  let choices = Object.keys(nodes).map((id) => {\n    return { label: nodes[id].label || nodes[id].properties.name, id };\n  });\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Edit Connection</b>\n      </h5>\n      <div className=\"flex-fill px-2\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>From</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, e.target.value, nodeToId)}\n            value={nodeFromId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n          <p className=\"mb-1\">\n            <b>To</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, nodeFromId, e.target.value)}\n            value={nodeToId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n        </div>\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Connection\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ntype PropertyItem = {\n  name: string;\n  type: string;\n};\n\ntype EditNodeProps = {\n  node: ParsedNode;\n  availableProperties: PropertyItem[];\n  updateLabel: (label: string) => void;\n  updateNewValue: (key: string, value: string | number) => void;\n  updateExistingValue: (key: string, value: string | number) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditNode({\n  node,\n  updateLabel,\n  updateNewValue,\n  updateExistingValue,\n  deleteSelection,\n  availableProperties,\n}: EditNodeProps) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredProperties, setFilteredProperties] = useState(\n    availableProperties\n  );\n\n  const updateSearchQuery = (searchString: string) => {\n    setSearchQuery(searchString);\n  };\n\n  useEffect(() => {\n    const results = availableProperties.filter((property: any) =>\n      property.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredProperties(results);\n  }, [searchQuery, availableProperties]);\n\n  useEffect(() => {\n    setSearchQuery(\"\");\n    setFilteredProperties(availableProperties);\n  }, [node.id, availableProperties]);\n\n  let label = node.label || node.properties.name;\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <div className=\"p-2 mb-1\">\n        <p className=\"mb-1\">\n          <b>Pod Name</b>\n        </p>\n        <FormControl\n          spellCheck={false}\n          value={label}\n          onChange={(e) => updateLabel(e.target.value)}\n          className=\"pod-name-input\"\n        />\n      </div>\n      <p className=\"mb-0 px-2\">\n        <b>Properties</b>\n      </p>\n      <div className=\"m-2\">\n        <FormControl\n          spellCheck={false}\n          placeholder=\"search properties...\"\n          value={searchQuery}\n          onChange={(e) => updateSearchQuery(e.target.value)}\n        />\n      </div>\n      <div className=\"property-table flex-fill mx-2\">\n        {filteredProperties.map((property) => {\n          const { name, type } = property;\n          const value = node.properties[name];\n\n          if (typeof value == \"undefined\")\n            return (\n              <div key={name} className=\"property-item mb-2\">\n                <p className=\"property-label mb-1\">{name}</p>\n                <FormControl\n                  spellCheck={false}\n                  placeholder={type}\n                  type={type === \"int\" ? \"number\" : \"text\"}\n                  value={node.newProperties[name] || \"\"}\n                  onChange={(e) => updateNewValue(name, e.target.value)}\n                  className=\"property-value-input\"\n                ></FormControl>\n              </div>\n            );\n          return (\n            <div key={name} className=\"property-item mb-2\">\n              <p className=\"property-label mb-1\">{name}</p>\n              <FormControl\n                spellCheck={false}\n                placeholder={type}\n                type={type === \"int\" ? \"number\" : \"text\"}\n                value={value || \"\"}\n                onChange={(e) => updateExistingValue(name, e.target.value)}\n                className=\"property-value-input\"\n              />\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Pod\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction PodMenu() {\n  return (\n    <div className=\"d-flex flex-column h-100\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Add Pods</b>\n      </h5>\n      <div className=\"p-3 scrollable flex-fill\">\n        <SidebarItem\n          ports={{\n            inPort: {\n              id: \"inPort\",\n              type: \"input\",\n            },\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          }}\n          properties={{}}\n        />\n        {defaultPods.map((pod, idx) => (\n          <SidebarItem\n            key={idx}\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={pod}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype FlowChartSidebarProps = {\n  readonly: boolean;\n  chart: IChart;\n  duplicateFlow: () => void;\n  updateNode: (updates: any) => void;\n  deleteSelection: () => void;\n  updateLink: (\n    linkId: string,\n    nodeFromId: string,\n    nodeToId: string | undefined\n  ) => void;\n  availableProperties: PropertyItem[];\n};\n\nfunction FlowChartSidebar({\n  readonly,\n  chart,\n  duplicateFlow,\n  deleteSelection,\n  updateNode,\n  updateLink,\n  availableProperties,\n}: FlowChartSidebarProps) {\n  const {\n    selected: { id: selectedId, type: selectedType },\n    nodes,\n    links,\n  } = chart;\n\n  const [node, setNode] = useState<ParsedNode | undefined>();\n\n  useEffect(() => {\n    let node;\n    if (!selectedId) return;\n    const selectedNode = nodes[selectedId];\n    if (selectedNode) node = parseNode(selectedNode);\n    setNode(node);\n  }, [nodes, selectedId]);\n\n  function updateLabel(label: string) {\n    updateNode({\n      ...node,\n      label,\n    });\n  }\n\n  function updateNewValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.newProperties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  function updateExistingValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.properties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  return (\n    <Card className=\"flowchart-sidebar mb-4\">\n      {selectedId ? (\n        selectedType === \"link\" ? (\n          <EditLink\n            nodes={nodes}\n            link={links[selectedId]}\n            updateLink={updateLink}\n            deleteSelection={deleteSelection}\n          />\n        ) : (\n          node && (\n            <EditNode\n              availableProperties={availableProperties}\n              node={node}\n              updateLabel={updateLabel}\n              updateNewValue={updateNewValue}\n              updateExistingValue={updateExistingValue}\n              deleteSelection={deleteSelection}\n            />\n          )\n        )\n      ) : (\n        <PodMenu />\n      )}\n      {readonly && <ReadOnly duplicateFlow={duplicateFlow} />}\n    </Card>\n  );\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nfunction SelectionIndicator({ selected }) {\n  return selected ? (\n    <i className=\"material-icons text-primary\">radio_button_checked</i>\n  ) : (\n    <i className=\"material-icons\">radio_button_unchecked</i>\n  );\n}\n\nfunction ConnectionIndicator({ connected, show }) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons ml-2 text-success\">wifi</i>\n  ) : (\n    <i className=\"material-icons ml-2 text-warning\">wifi_off</i>\n  );\n}\n\nfunction TitleConnectionIndicator({ connected, show }) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons text-white ml-1 mr-2\">wifi</i>\n  ) : (\n    <i className=\"material-icons text-warning ml-1 mr-2\">wifi_off</i>\n  );\n}\n\nfunction DeleteFlowButton({ show, deleteFlow }) {\n  if (!show) return null;\n  return (\n    <i className=\"material-icons text-danger float-right\" onClick={deleteFlow}>\n      delete\n    </i>\n  );\n}\n\nfunction EditFlowsButton({ isEditing, onClick }) {\n  return isEditing ? (\n    <i\n      onClick={onClick}\n      className=\"material-icons float-right cursor-pointer text-success\"\n    >\n      done\n    </i>\n  ) : (\n    <i onClick={onClick} className=\"material-icons float-right cursor-pointer\">\n      edit\n    </i>\n  );\n}\n\nexport default function FlowSelection({\n  flows,\n  loadFlow,\n  selectedFlowId,\n  createNewFlow,\n  deleteFlow,\n  connected,\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => {\n    setIsEditing((currentIsEditing) => !currentIsEditing);\n  };\n\n  const userFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type !== \"example\"\n  );\n\n  const exampleFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type === \"example\"\n  );\n\n  const currentFlow = flows[selectedFlowId];\n\n  return (\n    <Dropdown className=\"flow-selection\">\n      <Dropdown.Toggle>\n        {currentFlow.name}\n        <TitleConnectionIndicator\n          show={currentFlow.type === \"remote\"}\n          connected={connected}\n        />\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={createNewFlow}>\n          <i className=\"material-icons\">add</i>New Flow\n        </Dropdown.Item>\n        <Dropdown.Header className=\"text-uppercase\">\n          Your Flows{\" \"}\n          <EditFlowsButton isEditing={isEditing} onClick={toggleEditing} />\n        </Dropdown.Header>\n        {userFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator selected={flowId === selectedFlowId} />\n            {flow.name}\n            <ConnectionIndicator\n              show={flow.type === \"remote\"}\n              connected={connected}\n            />\n            <DeleteFlowButton\n              show={flow.type === \"user-generated\" && isEditing}\n              deleteFlow={(e) => deleteFlow(e, flowId)}\n            />\n          </Dropdown.Item>\n        ))}\n        <Dropdown.Header className=\"text-uppercase\">Examples</Dropdown.Header>\n        {exampleFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator itemId={flowId} selectedId={selectedFlowId} />\n            {flow.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar.tsx\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport FlowSelection from \"../components/FlowChart/FlowSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nconst syncEvents = [\n  \"onDragNodeStop\",\n  \"onCanvasDrop\",\n  \"onCanvasClick\",\n  \"onNodeClick\",\n  \"onDragCanvasStop\",\n  \"updateNode\",\n  \"updateLink\",\n];\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    const connected = Store.getConnectionStatus();\n    const availableProperties = Store.getAvailableProperties();\n    this.state = {\n      availableProperties,\n      flowType,\n      connected,\n      chart,\n      selectedFlowId,\n      flows,\n      showOverlay: false,\n    };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateFlow({ ...chart, ...newChart }, key);\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-ui\", this.getConnectionStatus);\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n    Store.removeListener(\"update-ui\", this.getConnectionStatus);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    this.setState({ chart, flowType, selectedFlowId, flows });\n  };\n\n  getConnectionStatus = () => {\n    const connected = Store.getConnectionStatus();\n    this.setState({ connected });\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateNode\");\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateLink\");\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateFlow = (flow, event) => {\n    if (syncEvents.includes(event)) return this.syncFlow(flow);\n    this.setState({ chart: flow });\n  };\n\n  syncFlow = (flow) => {\n    Dispatcher.dispatch({\n      actionType: Constants.UPDATE_FLOW,\n      payload: flow,\n    });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId }) => {\n    return !(fromNodeId === toNodeId || fromPortId === toPortId);\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadFlow = (flow) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_FLOW,\n      payload: flow,\n    });\n  };\n\n  createNewFlow = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.CREATE_NEW_FLOW,\n    });\n  };\n\n  deleteFlow = (e, flowId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.DELETE_FLOW,\n      payload: flowId,\n    });\n  };\n\n  duplicateFlow = () => {\n    const yaml = formatAsYAML(this.state.chart);\n    Dispatcher.dispatch({\n      actionType: Constants.DUPLICATE_FLOW,\n      payload: yaml,\n    });\n  };\n\n  render = () => {\n    const {\n      chart,\n      flows,\n      selectedFlowId,\n      showOverlay,\n      connected,\n      flowType,\n      availableProperties,\n    } = this.state;\n    const readonly = flowType !== \"user-generated\";\n    console.log(\"chart:\", chart);\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <FlowSelection\n                connected={connected}\n                flows={flows}\n                selectedFlowId={selectedFlowId}\n                createNewFlow={this.createNewFlow}\n                loadFlow={this.loadFlow}\n                deleteFlow={this.deleteFlow}\n              />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    readonly,\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              availableProperties={availableProperties}\n              duplicateFlow={this.duplicateFlow}\n              readonly={readonly}\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport { LogLevelSummaryChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 100;\n\nconst _levels: { [key: string]: any } = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nfunction getParsedDatasets(data: LogLevelSummaryChartData): any {\n  const datasets = Object.keys(_levels).map((level) => {\n    const levelData = data.map((tick: any) => tick.levels[level]);\n    return {\n      label: level,\n      fill: \"start\",\n      borderWidth: 1.5,\n      borderColor: _levels[level].borderColor,\n      backgroundColor: _levels[level].backgroundColor,\n      data: levelData,\n    };\n  });\n  return datasets;\n}\n\nfunction getLabels(amount?: number): number[] {\n  const labels = [];\n  for (let i = 0; i < (amount || 0); ++i) {\n    labels.push(i);\n  }\n  return labels;\n}\n\ntype Props = {\n  width?: number;\n  height?: number;\n  numSeconds?: number;\n  numTicks?: number;\n  data: LogLevelSummaryChartData;\n  onClick: (activePoints: any) => void;\n};\n\nfunction ChartBase({\n  width,\n  height,\n  numSeconds,\n  data,\n  numTicks,\n  onClick,\n}: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  function onClickChart(e: any) {\n    if (!chartInstance) return;\n    const activePoints = chartInstance.getElementsAtEvent(e);\n    onClick(activePoints);\n  }\n\n  function getXAxisLabel(value: any, index: number, values: any) {\n    if (index === 0) return numSeconds + \"s ago\";\n    else if (index === Math.floor(values.length / 2))\n      return (numSeconds ? numSeconds / 2 : 0) + \"s ago\";\n    return;\n  }\n\n  function getYAxisLabel(value: any) {\n    if (Number.isInteger(value)) {\n      return value;\n    }\n  }\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      events: [\"click\"],\n      onClick: onClickChart,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"top\",\n        labels: {\n          padding: 10,\n          boxWidth: 15,\n        },\n      },\n      tooltips: {\n        enabled: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            stacked: true,\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              callback: getXAxisLabel,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            stacked: true,\n            scaleLabel: {\n              display: true,\n              labelString: \"Occurences\",\n            },\n            gridLines: {\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: getYAxisLabel,\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"bar\",\n      data: {\n        datasets: getParsedDatasets(data),\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const chartData: ChartData = {\n      labels: getLabels(numTicks),\n      datasets: getParsedDatasets(data),\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance, numTicks]);\n\n  return (\n    <canvas\n      height={height || DEFAULT_HEIGHT}\n      width={width || DEFAULT_WIDTH}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport BarChart from \"./BarChartBase\";\nimport { LogLevelSummaryChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 10;\nconst DEFAULT_WIDTH = 70;\n\nconst DEFAULT_HEIGHT_SMALL = 20;\nconst DEFAULT_WIDTH_SMALL = 50;\n\ntype Props = {\n  data: {\n    data: LogLevelSummaryChartData;\n    lastTimestamp: number;\n    numSeconds: number;\n    numTicks: number;\n  };\n  showLog: (activePoints: any) => void;\n};\n\nfunction areEqual(prevProps: Props, nextProps: Props) {\n  return prevProps.data.lastTimestamp === nextProps.data.lastTimestamp;\n}\n\nconst LogLevelSummaryChart = React.memo(function LogLevelSummaryChart({\n  data: { data, numSeconds, numTicks },\n  showLog,\n}: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header>Log Occurences by Level</Card.Header>\n      <Card.Body className=\"d-none d-md-block pb-2 pt-0\">\n        <BarChart\n          data={data}\n          numTicks={numTicks}\n          numSeconds={numSeconds}\n          height={DEFAULT_HEIGHT}\n          width={DEFAULT_WIDTH}\n          onClick={showLog}\n        />\n      </Card.Body>\n      <Card.Body className=\"d-md-none pb-2\">\n        <BarChart\n          data={data}\n          numTicks={numTicks}\n          numSeconds={numSeconds}\n          height={DEFAULT_HEIGHT_SMALL}\n          width={DEFAULT_WIDTH_SMALL}\n          onClick={showLog}\n        />\n      </Card.Body>\n    </Card>\n  );\n},\nareEqual);\n\nexport { LogLevelSummaryChart };\n","import React, { useRef, useEffect, useState } from \"react\";\nimport ChartElement, {\n  ChartConfiguration,\n  ChartOptions,\n  ChartData,\n} from \"chart.js\";\nimport { LogLevelPieChartData } from \"./types\";\n\nconst DEFAULT_HEIGHT = 50;\nconst DEFAULT_WIDTH = 50;\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\ntype Props = {\n  width?: number;\n  height?: number;\n  data: LogLevelPieChartData;\n};\n\nfunction PieChartBase({ width, height, data }: Props) {\n  const canvasRef = useRef<HTMLCanvasElement | null>(null);\n  const [chartInstance, setChartInstance] = useState<ChartElement | null>(null);\n\n  function getColor(index: number) {\n    let color: any = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  }\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n    const names = Object.keys(data);\n    const chartOptions: ChartOptions = {\n      animation: { duration: 0 },\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig: ChartConfiguration = {\n      type: \"pie\",\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: Object.values(data),\n            borderColor: names.map((name, idx) => getColor(idx).border),\n            backgroundColor: names.map((name, idx) => getColor(idx).background),\n          },\n        ],\n      },\n      options: chartOptions,\n    };\n\n    const newChartInstance = new ChartElement(canvasRef.current, chartConfig);\n    setChartInstance(newChartInstance);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!chartInstance) return;\n    const names = Object.keys(data);\n    const chartData: ChartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: Object.values(data),\n          borderColor: names.map((name, idx) => getColor(idx).border),\n          backgroundColor: names.map((name, idx) => getColor(idx).background),\n        },\n      ],\n    };\n    chartInstance.data = chartData;\n    chartInstance.update();\n  }, [data, chartInstance]);\n\n  return (\n    <canvas\n      height={height || DEFAULT_HEIGHT}\n      width={width || DEFAULT_WIDTH}\n      ref={canvasRef}\n    />\n  );\n}\n\nexport default PieChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport PieChart from \"./PieChartBase\";\nimport { LogLevelPieChartData } from \"./types\";\n\ntype Props = {\n  data: LogLevelPieChartData;\n};\n\nfunction LogLevelPieChart({ data }: Props) {\n  return (\n    <Card className=\"h-100\">\n      <Card.Header className=\"text-center\">Log Levels</Card.Header>\n      <Card.Body className=\"pt-0\">\n        <PieChart data={data} />\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogLevelPieChart };\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: string };\n\nconst customStyles = {\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n  option: (styles: any) => ({\n    ...styles,\n    cursor: 'pointer',\n  }),\n  control: (styles: any) => ({\n    ...styles,\n    cursor: 'pointer',\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n} & SelectProps;\n\nfunction MultiFilterSelect({ onFilterChange, options, ...rest }: Props) {\n  return (\n    <Select\n      onChange={(val) =>\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val])\n      }\n      isMulti\n      options={options}\n      styles={customStyles}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: ProcessedLog[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, msg, levelname, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  columns: { firstCol: number; secondCol: number };\n};\n\nconst LogsTableHeader = ({ columns: { firstCol, secondCol } }: Props) => {\n  return (\n    <div\n      className=\"px-4 py-1 border-top bg-light text-monospace\"\n      css={{ maxHeight: 84 }}\n    >\n      <Row>\n        <Col\n          className=\"log-prefix text-muted px-0 d-flex flex-row\"\n          css={{ maxWidth: firstCol }}\n        >\n          <div className=\"text-bold mr-2\">#</div>\n          <div className=\"ml-auto\">timestamp</div>\n        </Col>\n        <Col\n          className=\"log-prefix px-0 text-left text-md-right text-bold\"\n          css={{ maxWidth: secondCol }}\n        >\n          source@process[level]:\n        </Col>\n        <Col\n          className=\"px-0\"\n          css={{\n            maxHeight: 84,\n            display: \"block\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            // width: \"1\",\n            whiteSpace: \"nowrap\",\n            paddingRight: 0,\n            marginRight: 0,\n          }}\n        >\n          message\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport { LogsTableHeader };\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useEffect, useRef } from \"react\";\n\nexport type UseTimeoutFnReturn = [() => boolean | null, () => void, () => void];\n\nfunction useTimeoutFn(fn: Function, ms: number = 0): UseTimeoutFnReturn {\n  const ready = useRef<boolean | null>(false);\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const callback = useRef(fn);\n\n  const isReady = useCallback(() => ready.current, []);\n\n  const set = useCallback(() => {\n    ready.current = false;\n    timeout.current && clearTimeout(timeout.current);\n\n    timeout.current = setTimeout(() => {\n      ready.current = true;\n      callback.current();\n    }, ms);\n  }, [ms]);\n\n  const clear = useCallback(() => {\n    ready.current = null;\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  // update ref when function changes\n  useEffect(() => {\n    callback.current = fn;\n  }, [fn]);\n\n  // set on mount, clear on unmount\n  useEffect(() => {\n    set();\n\n    return clear;\n  }, [ms]);\n\n  return [isReady, clear, set];\n}\nexport { useTimeoutFn };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useMiniSearch } from \"react-minisearch\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { LogItem } from \"./LogItem\";\nimport { LogsTableHeader } from \"./LogsTableHeader\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport {\n  serializeLogsToCSVBlob,\n  serializeLogsToJSONBlob,\n  serializeLogsToTextBlob,\n} from \"../../helpers\";\nimport { saveAs } from \"file-saver\";\n\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\nconst ROW_SIZE = 30;\n\nconst fields = [\"filename\", \"funcName\", \"msg\", \"name\", \"module\", \"pathname\"];\nconst miniSearchOptions = { fields };\n\nconst applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\nfunction usePrevious(value: any) {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nconst generateFormatFileName = (format: Format) =>\n  `jina-logs-${new Date()}.${format}`;\n\ntype Format = \"json\" | \"csv\" | \"txt\";\n\ntype Props = {\n  data: ProcessedLog[];\n  showLogDetails: (log: ProcessedLog) => void;\n};\n\nconst itemKey = (index: number, data: { items: ProcessedLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsTable({ data, showLogDetails }: Props) {\n  const [scrolledToBottom, setScrolledToBottom] = React.useState(true);\n  const windowListRef = useRef<any>();\n  const [selectedSources, setSelectedSources] = React.useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = React.useState<\n    { value: ProcessedLog[\"levelname\"] }[]\n  >([]);\n  const [searchString, setSearchString] = React.useState(\"\");\n  const { search, searchResults, addAllAsync } = useMiniSearch(\n    data,\n    miniSearchOptions\n  );\n  const buffer = useRef<any[]>([]);\n  const previousLength = usePrevious(data.length);\n\n  useEffect(() => {\n    if (previousLength && previousLength! > 0) {\n      const newLog = data[previousLength! - 1];\n      addAllAsync([newLog]);\n      buffer.current.push(newLog);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousLength, searchString]);\n\n  const unfiltered = searchString ? searchResults : data;\n\n  const resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n\n  useEffect(() => {\n    if (windowListRef.current && scrolledToBottom) {\n      windowListRef.current.scrollToItem(resultData.length);\n    }\n  }, [resultData.length, scrolledToBottom]);\n  useDebounce(\n    () => {\n      search(searchString);\n    },\n    1000,\n    [searchString]\n  );\n\n  const firstCol = 300;\n  const secondCol = 300;\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-0\">\n        <Row className=\"p-3\">\n          <Col md=\"8\">\n            <MultiFilterSelect\n              options={toOption(sources)}\n              onFilterChange={setSelectedSources}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Logsources\"\n            />\n            <MultiFilterSelect\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Levels\"\n            />\n            <DropdownButton\n              as={ButtonGroup}\n              className=\"d-block d-md-inline-block mb-2 mr-0 mb-md-0 mr-md-2\"\n              title=\"Download Logs\"\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToCSVBlob(data),\n                    generateFormatFileName(\"csv\")\n                  )\n                }\n              >\n                Download as CSV\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToJSONBlob(data),\n                    generateFormatFileName(\"json\")\n                  )\n                }\n              >\n                Download as JSON\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToTextBlob(data),\n                    generateFormatFileName(\"txt\")\n                  )\n                }\n              >\n                Download as TXT\n              </Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col md=\"4\">\n            <Form.Control\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={(e) => {\n                setSearchString(e.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n        <LogsTableHeader columns={{ firstCol, secondCol }} />\n      </Card.Header>\n      <Card.Body\n        className=\"log-stream-container p-0 border-top\"\n        id=\"log-stream-container\"\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() =>\n              windowListRef.current.scrollToItem(resultData.length)\n            }\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        {resultData.length ? (\n          <AutoSizer>\n            {({ height, width }) => {\n              const thirdCol = width - (firstCol + secondCol);\n              return (\n                <List\n                  onScroll={({ scrollOffset }) => {\n                    setScrolledToBottom(\n                      (scrollOffset + height) / ROW_SIZE - resultData.length ===\n                        0\n                    );\n                  }}\n                  height={height}\n                  width={width}\n                  itemCount={resultData.length}\n                  itemSize={ROW_SIZE}\n                  itemKey={itemKey}\n                  itemData={{\n                    items: resultData,\n                    columns: { firstCol, secondCol, thirdCol },\n                    showLogDetails,\n                  }}\n                  ref={windowListRef}\n                >\n                  {LogItem}\n                </List>\n              );\n            }}\n          </AutoSizer>\n        ) : (\n          <h3 className=\"my-5 py-5 text-center text-muted\">\n            No logs to display\n          </h3>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import { DependencyList, useEffect } from \"react\";\nimport { useTimeoutFn } from \"./useTimeoutFn\";\n\nexport type UseDebounceReturn = [() => boolean | null, () => void];\n\nfunction useDebounce(\n  fn: Function,\n  ms: number = 0,\n  deps: DependencyList = []\n): UseDebounceReturn {\n  const [isReady, cancel, reset] = useTimeoutFn(fn, ms);\n\n  useEffect(reset, deps);\n\n  return [isReady, cancel];\n}\n\nexport { useDebounce };\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { LogLevelSummaryChart } from \"../components/LogStream/LogLevelSummaryChart\";\nimport { LogLevelPieChart } from \"../components/LogStream/LogLevelPieChart\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nconst LOGS_UPDATE_INTERVAL = 20;\nconst CHART_UPDATE_INTERVAL = 1000;\n\nlet chartUpdateInterval: any;\nlet logsUpdateInterval: any;\n\nconst showLogDetails = (log: any) => {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_MODAL,\n    payload: { modal: \"logDetails\", modalParams: { log } },\n  });\n};\n\nfunction showLogInTable(index: number) {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_LOG_AT_INDEX,\n    payload: index,\n  });\n}\n\nfunction LogsView() {\n  const hasNewLogs = React.useRef(false);\n  const [logs, setLogs] = useState(() => Store.getLogs());\n  const [logLevelOccurrences, setLogLevelOccurrences] = useState(() =>\n    Store.getLogLevelOccurences()\n  );\n  const [logLevelCharts, setLogLevelCharts] = useState(() =>\n    Store.getLogLevelCharts()\n  );\n\n  function updateLogs() {\n    const newLogs = Store.getLogs();\n    const newOccurrences = Store.getLogLevelOccurences();\n    setLogs([...newLogs]);\n    setLogLevelOccurrences({ ...newOccurrences });\n  }\n\n  function updateChart() {\n    const newCharts = Store.getLogLevelCharts();\n    setLogLevelCharts({ ...newCharts });\n  }\n\n  function showLog(activePoints: any) {\n    const { data } = logLevelCharts;\n    let index = activePoints[0] && activePoints[0]._index;\n    if (index && typeof index !== \"undefined\") {\n      const { lastLog } = data[index];\n      showLogInTable(lastLog);\n    }\n  }\n\n  function checkForNewLogs() {\n    if (!hasNewLogs.current) return;\n    hasNewLogs.current = false;\n    updateLogs();\n  }\n\n  function onNewLogs() {\n    hasNewLogs.current = true;\n  }\n\n  useEffect(() => {\n    Store.on(\"update-logs\", onNewLogs);\n    logsUpdateInterval = setInterval(checkForNewLogs, LOGS_UPDATE_INTERVAL);\n    chartUpdateInterval = setInterval(updateChart, CHART_UPDATE_INTERVAL);\n    return () => {\n      Store.removeListener(\"update-logs\", onNewLogs);\n      clearInterval(logsUpdateInterval);\n      clearInterval(chartUpdateInterval);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Log Stream\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\">\n            <LogLevelSummaryChart data={logLevelCharts} showLog={showLog} />\n          </Col>\n          <Col md=\"2\" className=\"mb-4\">\n            <LogLevelPieChart data={logLevelOccurrences} />\n          </Col>\n        </Row>\n        <LogsTable data={logs} showLogDetails={showLogDetails} />\n      </div>\n    </Container>\n  );\n}\n\nexport { LogsView };\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nexport default function ElapsedCard({ elapsed }) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState(Store.getSettings());\n  const [updates, setUpdates] = useState({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting, value) {\n    const newUpdates = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\ntype RatingFunction = (stars: number) => void\ntype StarRatingProps = {\n  rating: number,\n  userRated?: boolean,\n  rate?: RatingFunction\n}\n\nconst StarRating = ({ rating, userRated, rate }: StarRatingProps) => {\n  const formatted = rating.toFixed(1);\n  const stars = getStars(rating, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n}\n\nexport const getStars = (amount: number, rate: RatingFunction | undefined): JSX.Element[] => {\n  const handleRatingClick = (index: number) => rate && rate(index)\n  let stars = [];\n  let integer = Math.floor(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => handleRatingClick(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => handleRatingClick(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => handleRatingClick(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => handleRatingClick(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n\nexport default StarRating","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default function ImageCard({ image }) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function BuildHistory(props) {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default function ImageDetails({ image }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReadMe({ readme, documentation }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default function CopyCommand(props) {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReviewCard({ review }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default function ImageReviews({ reviews, newReview }) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: string;\n  content: string;\n  icon: string;\n  theme: string;\n  link: string;\n};\n\nfunction HelpCard({ title, content, icon, theme, link }: Props) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n\nexport { HelpCard };\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport { HelpCard } from \"../components/Common/HelpCard\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport { LogsView } from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: IconSidebar,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n];\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, modalParams: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FallbackProps } from \"react-error-boundary\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { Button } from \"shards-react\";\n\nfunction FallbackPage({ error, resetErrorBoundary }: FallbackProps) {\n  return (\n    <Container fluid className=\"main-content-container p-5\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          title=\"Error\"\n          subtitle=\"This should not have happened\"\n          className=\"text-sm-left my-3\"\n        />\n      </Row>\n      <Row noGutters className=\"page-header py-4\">\n        <Col xs=\"12\" sm=\"3\">\n          <p>Something went wrong:</p>\n          <pre>\n            <code className=\"text-warning\">{error!.message}</code>\n          </pre>\n        </Col>\n      </Row>\n      <Row noGutters className=\"page-header\">\n        <Col>\n          <Button onClick={resetErrorBoundary}>Try again</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport { FallbackPage };\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { FallbackPage } from \"./views/FallbackPage\";\nimport { Store } from \"./flux/\";\n\nconst App = () => {\n  return (\n    <Router basename={\"/\"}>\n      <div>\n        {routes.map((route, index) => {\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={withTracker((props) => {\n                return (\n                  <route.layout {...props} {...route.props}>\n                    <ErrorBoundary\n                      FallbackComponent={FallbackPage}\n                      onReset={() => Store.init()}\n                    >\n                      <route.component {...props} />\n                    </ErrorBoundary>\n                  </route.layout>\n                );\n              })}\n            />\n          );\n        })}\n      </div>\n    </Router>\n  );\n};\n\nexport { App };\n","const PERSIAN_GREEN = \"#009999\";\nconst GOLDEN_TANOI = \"#FFCC66\";\nconst BITTER_SWEET = \"#ff6666\";\nconst SCOOTER_GREEN = \"#32C8CD\";\n\nconst theme = {\n  palette: {\n    background: { default: \"#FFFFFF\" },\n    primary: {\n      main: PERSIAN_GREEN,\n    },\n    secondary: { main: GOLDEN_TANOI },\n    warning: { main: GOLDEN_TANOI },\n    error: { main: BITTER_SWEET },\n    success: { main: PERSIAN_GREEN },\n    info: { main: SCOOTER_GREEN },\n  },\n};\n\nexport { theme };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","module.exports = {\n  timeout: 15000,\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}