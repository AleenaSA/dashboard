{"version":3,"sources":["data/yaml.js","flux/constants.js","settings.js","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/Notifications.js","components/Layout/MainNavbar/UserActions.js","flux/dispatcher.js","helpers.js","logger.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","flux/tranformLog.ts","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Default.jsx","components/Common/CookiesBanner.jsx","components/Common/InfoBanner.jsx","components/Common/ConnectionBanner.jsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","modals/LogDetails.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/NodePort.jsx","components/FlowChart/ExampleSelection.jsx","views/FlowView.jsx","components/LogStream/ChartBase.jsx","components/LogStream/LogLevelSummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/LogLevelPieChart.jsx","components/Common/MultiFilterSelect.tsx","components/LogStream/useFilters.ts","components/LogStream/LogItem.tsx","hooks/useTimeoutFn.ts","components/LogStream/LogsTable.tsx","components/LogStream/usePrevious.ts","hooks/useDebounce.ts","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/options.js","components/Settings/FormItem.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","views/PackageView.jsx","views/LogIn.jsx","withTracker.js","FallbackPage.tsx","App.js","theme.ts","index.js","flux/config.js"],"names":["module","exports","pokedex","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_EXAMPLE","SHOW_POD_IN_FLOW","nodeOffset","x","y","NavbarSpacer","className","NavbarToggle","toggleSidebar","onClick","Notifications","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","Dispatcher","YAML","require","settings","propertyList","toBlob","content","Blob","type","serializeLogsToJSONBlob","logs","fileContent","reduce","acc","log","i","JSON","stringify","length","serializeLogsToJSON","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","parents","Array","isArray","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","prop","name","formatAsYAML","chart","console","chartWith","with","needsByPodLabel","values","curr","nodeLabelsByPortId","getNodeLabelsByPortId","outPort","neededBy","inPort","push","arr","podProperties","entries","key","propValue","propName","decodePropValue","output","board","formatBytes","numBytes","parseFloat","toFixed","handleErrorMessage","msg","url","line","logger","logStream","taskStream","_store","window","logsEnabled","args","arguments","isEnabled","enable","_navigator","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","filename","Date","blob","saveAs","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","startsWith","close","EventSource","onopen","onmessage","m","onerror","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","searchHub","category","q","sort","CHART_LEVELS","getInitialLevelOccurences","occurences","lastLog","levels","level","location","hostname","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadExample","showPodByLabel","init","clearIntervals","localStorage","getItem","yaml","shutdown","ready","images","banner","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","flowchart","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","taskData","qps","current","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","messages","bytes","selectedNode","modalParams","currentTab","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","updateChartInterval","clearInterval","updateTaskInterval","yamlSTRING","flow","api","e","parsed","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","setInterval","status","message","created","createdDate","fromUnixTime","nanoid","transformLog","unixTime","timestamp","formattedTimestamp","toLocaleString","idx","process","levelname","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","map","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","updateSummaryCharts","hash","customYAML","exampleName","exampleYAML","setItem","setTimeout","String","includes","showError","image","reload","bannerTimeout","clearTimeout","hideBanner","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getLogLevelCharts","emptyItem","chartData","now","getLogLevelOccurences","getTaskData","getActivePanel","path","substring","getConnectionStatus","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","getStoreCopy","_","cloneDeep","register","peakLogs","peakStore","this","EventEmitter","MainNavbar","componentWillUnmount","Store","removeListener","getData","setState","dispatch","state","render","fluid","navbar","on","React","Component","href","style","lineHeight","maxWidth","item","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","top","subItem","nav","SidebarNavItem","MainSidebar","props","onChange","getMenuState","sidebarNavItems","getSidebarItems","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","DashboardLayout","children","noNavbar","noFooter","sm","CookiesBanner","show","acceptCookies","Button","InfoBanner","ConnectionBanner","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","inputRef","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","as","rows","submitReview","hiddenKeys","xs","filter","IconSidebarLayout","acceptedCookies","yamlString","storeCopy","hideLogoText","LogDetails","PasteYAML","WriteReview","PageTitle","subtitle","attrs","ChartNode","ButtonGroup","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","FlowChartSidebar","getInitialNodeState","newProperties","componentWillReceiveProps","nextProps","searchResults","searchQuery","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","updateSearchQuery","searchProperties","query","indexProperties","search","availableProperties","lunr","field","add","renderEditNode","FormControl","spellCheck","property","deleteSelection","renderEditLink","nodeTo","choices","updateLink","choice","renderPodMenu","defaultPods","hasSelected","Card","NodePort","data-html2canvas-ignore","ExampleSelection","DropdownButton","Item","FlowView","componentDidMount","querySelector","preventDefault","extension","classList","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","updateChart","callback","newChart","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","copyChartAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","example","display","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","action","newChartTransformer","_levels","INFO","borderColor","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","ChartBase","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","ticks","maxRotation","getXAxisLabel","yAxes","scaleLabel","labelString","gridLines","borderDash","zeroLineColor","drawBorder","suggestedMin","autoSkip","maxTicksLimit","Number","isInteger","chartConfig","getLabels","datasets","getParsedDatasets","options","ChartElement","canvasRef","animation","update","activePoints","getElementsAtEvent","amount","levelData","tick","borderWidth","height","createRef","LogLevelSummaryChart","showLog","_index","Header","Body","_colors","background","PieChart","getColor","names","mode","LogLevelPieChart","customStyles","container","provided","selectProps","MultiFilterSelect","onFilterChange","rest","val","isMulti","styles","LogItem","memo","columns","showLogDetails","logData","logName","levelInitial","firstCol","secondCol","thirdCol","toLowerCase","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","useTimeoutFn","fn","ms","useRef","isReady","useCallback","set","clear","useEffect","miniSearchOptions","fields","generateFormatFileName","itemKey","toOption","arrayLike","LogsTable","useState","scrolledToBottom","setScrolledToBottom","windowListRef","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","searchString","setSearchString","useMiniSearch","addAllAsync","buffer","previousLength","usePrevious","newLog","resultData","filters","sources","Set","scrollToItem","deps","cancel","reset","useDebounce","lineno","funcname","pathname","serializeLogsToCSV","serializeLogsToText","onScroll","scrollOffset","itemCount","itemSize","itemData","ElapsedCard","ProgressCard","percent","newData","hoverBorderColor","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","difference","suggestedMax","tension","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","Container","QueriesPerSecond","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","original","setOriginal","updates","setUpdates","expanded","setExpanded","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","StarRating","rating","userRated","rate","round","getStars","integer","remainder","j","ImageCard","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","HubView","sortBy","sortType","setCategory","updateSearch","BuildHistory","buildHistory","build","formattedCreated","buildSize","os","architecture","ImageDetails","version","documentation","source","license","vendor","ReadMe","readme","CopyCommand","copyCode","imageVar","repoTags","code","language","atomOneLight","ReviewCard","review","ImageReviews","newReview","HelpCard","icon","NotFound","exact","layout","DefaultLayout","component","IconSidebar","setLogs","newLogs","getImageData","imageData","readmeHTML","windowHash","windowParams","URLSearchParams","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","FallbackPage","resetErrorBoundary","App","basename","routes","route","FallbackComponent","onReset","palette","default","primary","main","secondary","warning","success","info","ReactDOM"],"mappings":"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","file":"static/js/main.1c3c9fdc.chunk.js","sourcesContent":["module.exports = {\n  pokedex: `!Flow\n  with:\n    read_only: true\n    rest_api: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        chunk_seg:\n          x: 250\n          y: 268\n        tf_encode:\n          x: 250\n          y: 420\n        chunk_idx:\n          x: 250\n          y: 600\n        ranker:\n          x: 250\n          y: 836\n        doc_idx:\n          x: 249\n          y: 985\n  pods:\n    gateway: {}\n    chunk_seg:\n      uses: pods/craft.yml\n      parallel: $PARALLEL\n      needs: gateway\n    tf_encode:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 600000\n      needs: chunk_seg\n    chunk_idx:\n      uses: pods/chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      timeout_ready: 100000\n      needs: tf_encode\n    ranker:\n      uses: BiMatchRanker\n      needs: chunk_idx\n    doc_idx:\n      uses: pods/doc.yml\n      needs: ranker\n  \n  `,\n  flower: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        loader:\n          x: 250\n          y: 257\n        flipper:\n          x: 252\n          y: 407\n        normalizer:\n          x: 239\n          y: 563\n        encoder:\n          x: 252\n          y: 712\n        chunk_indexer:\n          x: 250\n          y: 872\n        ranker:\n          x: 252\n          y: 1066\n        doc_indexer:\n          x: 253\n          y: 1199\n  pods:\n    gateway: {}\n    loader:\n      uses: yaml/craft-load.yml\n      read_only: true\n      needs: gateway\n    flipper:\n      uses: yaml/craft-flip.yml\n      read_only: true\n      needs: loader\n    normalizer:\n      uses: yaml/craft-normalize.yml\n      read_only: true\n      needs: flipper\n    encoder:\n      uses: $ENCODER\n      timeout_ready: 600000\n      read_only: true\n      needs: normalizer\n    chunk_indexer:\n      uses: yaml/index-chunk.yml\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: yaml/index-doc.yml\n      needs: ranker  \n  `,\n  southpark: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 254\n          y: 147\n        splittor:\n          x: 254\n          y: 270\n        encoder:\n          x: 254\n          y: 448\n        chunk_indexer:\n          x: 251\n          y: 645\n        ranker:\n          x: 255\n          y: 862\n        doc_indexer:\n          x: 256\n          y: 1002\n  pods:\n    gateway: {}\n    splittor:\n      uses: pods/craft-split.yml\n      parallel: $PARALLEL\n      read_only: true\n      needs: gateway\n    encoder:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 60000\n      read_only: true\n      needs: splittor\n    chunk_indexer:\n      uses: pods/index-chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      reducing_uses: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: pods/index-doc.yml\n      needs: ranker\n  `,\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_EXAMPLE: \"LOAD_EXAMPLE\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","import React from \"react\";\n\nexport default function NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n","import React from \"react\";\n\nexport default function NavbarToggle({ toggleSidebar }) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\nexport default function Notifications({ connected, reconnect }) {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n} from \"shards-react\";\n\nexport default function UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/podProperties.json\");\n\nfunction toBlob(content) {\n  return new Blob([content], { type: \"text,plain;charset=utf-8\" });\n}\nfunction serializeLogsToCSV(logs) {\n  const columns =\n    \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n    return acc;\n  }, columns);\n  return fileContent;\n}\n\nfunction serializeLogsToJSON(logs) {\n  const fileContent = logs.reduce((acc, log, i) => {\n    acc += JSON.stringify(log) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    return acc;\n  }, \"\\n\");\n  return `[${fileContent}]`;\n}\n\nfunction serializeLogsToText(logs) {\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    return acc;\n  }, \"\");\n  return fileContent;\n}\n\nconst serializeLogsToCSVBlob = (logs) => toBlob(serializeLogsToCSV(logs));\nconst serializeLogsToJSONBlob = (logs) => toBlob(serializeLogsToJSON(logs));\nconst serializeLogsToTextBlob = (logs) => toBlob(serializeLogsToText(logs));\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\nconst getNodeLabelsByPortId = ({ from, to }, nodes) => ({\n  [from.portId]: nodes[from.nodeId].label || nodes[from.nodeId].properties.name,\n  [to.portId]: nodes[to.nodeId].label || nodes[to.nodeId].properties.name,\n});\nconst decodePropValue = (propName, propValue) =>\n  propertyTypes[propName] === \"bool\" ? propValue === \"true\" : propValue;\nconst unpackIfLengthOne = (arr) =>\n  Array.isArray(arr) && arr.length === 1 ? arr[0] : arr;\n\nexport function formatAsYAML(chart) {\n  console.log(\"formatAsYAML input: \", chart);\n  const { with: chartWith, nodes, links } = chart;\n\n  const needsByPodLabel = Object.values(links).reduce((acc, curr) => {\n    const nodeLabelsByPortId = getNodeLabelsByPortId(curr, nodes);\n    const needs = nodeLabelsByPortId.outPort;\n    const neededBy = nodeLabelsByPortId.inPort;\n\n    if (!acc[neededBy]) {\n      acc[neededBy] = [];\n    }\n    acc[neededBy].push(needs);\n    return acc;\n  }, {});\n\n  const pods = Object.values(nodes).reduce((acc, node) => {\n    const { label } = node;\n    if (!label) return acc;\n\n    const podProperties = Object.entries(node.properties).reduce(\n      (acc, [key, propValue]) => {\n        acc[key] = decodePropValue(key, propValue);\n        return acc;\n      },\n      {}\n    );\n    if (needsByPodLabel[label]) {\n      podProperties.needs = unpackIfLengthOne(needsByPodLabel[label]);\n    }\n\n    acc[label] = { ...podProperties };\n    return acc;\n  }, {});\n\n  const canvas = Object.values(nodes).reduce((acc, node) => {\n    const {\n      position: { x, y },\n    } = node;\n    acc[node.label] = { x, y };\n    return acc;\n  }, {});\n\n  const output = { with: { ...chartWith, board: { canvas } }, pods };\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n\nexport {\n  serializeLogsToCSVBlob,\n  serializeLogsToTextBlob,\n  serializeLogsToJSONBlob,\n};\n","import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg, url, line) {\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nconst logger = {\n  log: function () {\n    if (!window.logsEnabled) return;\n    let args = [...arguments];\n    console.log(...args);\n    window.logs.push(args);\n  },\n  isEnabled: function () {\n    return window.logsEnabled;\n  },\n  enable: function () {\n    const _navigator = {};\n    for (let i in window.navigator) _navigator[i] = window.navigator[i];\n    window.logs = [];\n    window.logs.push(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    window.logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = window.logsFormat || \"json\";\n    const logs = window.logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","import axios from \"axios\";\nimport logger from \"../logger\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  connect: (settings, connectionUpdate, logUpdate, taskUpdate) => {\n    logger.log(\"api - connect - settings\", settings);\n\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    logger.log(\"api - connect - logString\", logString);\n\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logger.log(\"api - logStream.onopen called\");\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      logger.log(\"api - logStream.onerror - ERROR\", data);\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    logger.log(\"api - connect - taskString\", taskString);\n\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      logger.log(\"api - taskStream.onopen called\");\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      logger.log(\"api - taskStream.onerror - ERROR\", data);\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (connectionString) => {\n    logger.log(\"api - getYAML - connectionString\", connectionString);\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport logger from \"../logger\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleYAML from \"../data/yaml\";\nimport { transformLog } from \"./tranformLog\";\n\nlet _store;\n\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getInitialLevelOccurences() {\n  let occurences = {\n    lastLog: 0,\n    levels: {},\n  };\n  CHART_LEVELS.forEach((level) => {\n    occurences.levels[level] = 0;\n  });\n  return occurences;\n}\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected: {},\n      hovered: {},\n      scale: 1,\n      nodes: {\n        gateway: {\n          id: \"gateway\",\n          label: \"gateway\",\n          ports: {\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          },\n          properties: {},\n          position: { x: 629, y: 72 },\n        },\n      },\n      links: {},\n      offset: { x: 0, y: 0 },\n    },\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: {},\n    currentTab: \"logStream\",\n  };\n}\n\nif (window.location.hostname === \"localhost\") logger.enable();\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    window.peakLogs = this.getLogs;\n    window.peakStore = () => console.log(_store);\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_EXAMPLE:\n        this.loadExample(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async (yamlSTRING) => {\n    logger.log(\"initFlowChart - yamlString\", yamlSTRING);\n    let flow;\n    const { settings } = _store;\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n\n    if (yamlSTRING) {\n      flow = parseYAML(yamlSTRING);\n    } else {\n      try {\n        let str = await api.getYAML(connectionString);\n        flow = parseYAML(str);\n      } catch (e) {\n        logger.log(\"initFlowChart - parseYAML[API] ERROR\", e);\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    logger.log(\"initFlowChart - flow\", flow);\n    logger.log(\"initFlowChart - canvas\", canvas);\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status, message) => {\n    logger.log(\"handleLogConnectionStatus - status\", status);\n    logger.log(\"handleLogConnectionStatus - message\", message);\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n      return this.showBanner(message, \"error\");\n    }\n  };\n\n  handleNewLog = (message) => {\n    const { data } = message;\n    const log = transformLog(data);\n\n    log.unixTime = parseInt(log.created);\n    log.timestamp = new Date(log.unixTime * 1000);\n    log.formattedTimestamp = log.timestamp.toLocaleString();\n    log.idx = _store.logs.length;\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = async () => {\n    this.updateChartInterval = setInterval(this.updateSummaryCharts, 1000);\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    let x = 0;\n    let y = 0;\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n        x = value.position.x * -1 + 40;\n        y = value.position.y * -1 + 100;\n      }\n    }\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    logger.log(\"importCustomYAML - customYAML\", customYAML);\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadExample = (exampleName) => {\n    const flow = exampleYAML[exampleName];\n    this.initFlowChart(flow);\n    this.emit(\"update-flowchart\");\n  };\n\n  saveSettings = (settings) => {\n    logger.log(\"saveSettings - settings\", settings);\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, modalParams } = data;\n    _store.modal = modal;\n    _store.modalParams = modalParams || {};\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = {};\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    let chartData = [];\n    let now = parseInt(new Date() / 1000);\n    for (let i = now - numSeconds; i < now; i++) {\n      chartData.push(\n        _store.logLevelOccurences[i] ? _store.logLevelOccurences[i] : emptyItem\n      );\n    }\n    return chartData;\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n\n  getStoreCopy = () => {\n    return _.cloneDeep(_store);\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import { fromUnixTime } from \"date-fns\";\nimport { nanoid } from \"nanoid\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\nexport type RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n};\n\nexport type ProcessedLog = RawLog & {\n  createdDate: Date;\n  id: string;\n};\n\nfunction transformLog(log: RawLog) {\n  const { created } = log;\n  const createdDate = fromUnixTime(created);\n  const id = nanoid();\n  return { ...log, createdDate, id };\n}\n\nexport { transformLog };\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarToggle from \"./NavbarToggle\";\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainNavbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userActionsVisible: false,\n      connected: Store.getConnectionStatus(),\n      user: Store.getUser(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getData);\n  };\n\n  getData = () => {\n    const connected = Store.getConnectionStatus();\n    const user = Store.getUser();\n    this.setState({ connected, user });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  toggleUserActions = () => {\n    this.setState({\n      userActionsVisible: !this.state.userActionsVisible,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n  render = () => {\n    const { connected, user, userActionsVisible } = this.state;\n    return (\n      <div className=\"main-navbar bg-white sticky-top\">\n        <Container fluid className=\"p-0\">\n          <Navbar\n            type=\"light\"\n            className=\"align-items-stretch flex-md-nowrap p-0\"\n          >\n            <NavbarSpacer />\n            <Nav navbar className=\"border-left flex-row\">\n              <Notifications reconnect={this.reconnect} connected={connected} />\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={this.toggleUserActions}\n                logOut={this.logOut}\n              />\n            </Nav>\n            <NavbarToggle toggleSidebar={this.toggleSidebar} />\n          </Navbar>\n        </Container>\n      </div>\n    );\n  };\n}\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DashboardLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function CookiesBanner({ show, acceptCookies }) {\n  return (\n    <div className={`cookies-banner ${show ? \"\" : \"hidden\"}`}>\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function InfoBanner({ data }) {\n  return data ? (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nexport default function ConnectionBanner({ loading, connected, reconnect }) {\n  return loading || connected ? (\n    \"\"\n  ) : (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"msg\", \"unixTime\"];\n\nexport default ({ open, closeModal, modalParams }) => {\n  const log = modalParams.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.msg}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"msg\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport CookiesBanner from \"../components/Common/CookiesBanner\";\nimport InfoBanner from \"../components/Common/InfoBanner\";\nimport ConnectionBanner from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    const loggerEnabled = logger.isEnabled();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      connected,\n      modalParams,\n      loggerEnabled,\n    });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      connected,\n      loading,\n      modalParams,\n      loggerEnabled,\n    } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar />\n            <InfoBanner data={banner} />\n            <ConnectionBanner\n              loading={loading}\n              connected={connected}\n              reconnect={this.reconnect}\n            />\n            {children}\n            <CookiesBanner\n              show={!acceptedCookies}\n              acceptCookies={this.acceptCookies}\n            />\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <LogDetails\n          open={modal === \"logDetails\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n          modalParams={modalParams}\n        />\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nexport default function PageTitle({ title, subtitle, className, ...attrs }) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default function SidebarItem(props) {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport lunr from \"lunr\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  constructor(props) {\n    super();\n    let node = {};\n    if (props.chart.selected.id) {\n      const selectedNode = props.chart.nodes[props.chart.selected.id];\n      node = this.getInitialNodeState(selectedNode);\n    }\n\n    this.state = {\n      availableProperties: Store.getAvailableProperties(),\n      node,\n      searchResults: [],\n      searchQuery: \"\",\n    };\n  }\n\n  getInitialNodeState = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).forEach((key) => {\n      properties[key] = node.properties[key];\n    });\n\n    return { label, id: node.id, properties, newProperties };\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id) return;\n\n    this.setState({ searchResults: [], searchQuery: \"\" });\n\n    if (!id) return;\n\n    if (type === \"node\" && id !== this.state.node.id) {\n      const node = nodes[id];\n      this.setState({ node: this.getInitialNodeState(node) });\n    }\n  };\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.searchProperties);\n  };\n\n  searchProperties = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ searchResults: false });\n    this.indexProperties();\n    let searchResults = this.index.search(`${query} ${query}*`);\n    this.setState({ searchResults });\n  };\n\n  indexProperties = () => {\n    const { availableProperties } = this.state;\n    this.index = lunr(function () {\n      this.field(\"name\");\n\n      availableProperties.forEach((prop, idx) => {\n        prop.id = parseInt(idx);\n        this.add(prop);\n      });\n    });\n  };\n\n  renderEditNode = () => {\n    const {\n      availableProperties,\n      node,\n      searchQuery,\n      searchResults,\n    } = this.state;\n    let label =\n      typeof node.label === \"undefined\"\n        ? node.properties.name\n        : node.label || \"\";\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>Pod Name</b>\n          </p>\n          <FormControl\n            spellCheck={false}\n            value={label}\n            onChange={(e) => this.updateLabel(e.target.value)}\n            className=\"pod-name-input\"\n          />\n        </div>\n        <p className=\"mb-0 px-2\">\n          <b>Properties</b>\n        </p>\n        <div className=\"m-2\">\n          <FormControl\n            spellCheck={false}\n            placeholder=\"search properties...\"\n            value={searchQuery}\n            onChange={this.updateSearchQuery}\n          />\n        </div>\n        <div className=\"property-table flex-fill mx-2\">\n          {searchQuery && searchResults ? (\n            searchResults.map((result) => {\n              const property = availableProperties[result.ref];\n              const { name, type } = property;\n              const value = node.properties[name];\n\n              if (typeof value == \"undefined\")\n                return (\n                  <div key={name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={type}\n                      value={node.newProperties[name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                );\n              return (\n                <div key={name} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{name}</p>\n                  <FormControl\n                    spellCheck={false}\n                    value={value || \"\"}\n                    onChange={(e) =>\n                      this.updateExistingValue(name, e.target.value)\n                    }\n                    className=\"property-value-input\"\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              {Object.keys(node.properties).map((prop) => {\n                const value = node.properties[prop];\n                if (prop === \"name\") return \"\";\n                return (\n                  <div key={prop} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{prop}</p>\n                    <FormControl\n                      spellCheck={false}\n                      value={value || \"\"}\n                      onChange={(e) =>\n                        this.updateExistingValue(prop, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    />\n                  </div>\n                );\n              })}\n              {availableProperties.map((property) =>\n                typeof node.properties[property.name] == \"undefined\" ? (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={property.type}\n                      value={node.newProperties[property.name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(property.name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Pod\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId];\n    const nodeTo = nodes[link.to.nodeId];\n\n    let choices = Object.keys(nodes).map((id) => {\n      return { label: nodes[id].label || nodes[id].properties.name, id };\n    });\n\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Edit Connection</b>\n        </h5>\n        <div className=\"flex-fill px-2\">\n          <div className=\"p-2 mb-1\">\n            <p className=\"mb-1\">\n              <b>From</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, e.target.value, nodeTo.id)\n              }\n              value={nodeFrom.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n            <p className=\"mb-1\">\n              <b>To</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, nodeFrom.id, e.target.value)\n              }\n              value={nodeTo.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Connection\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderPodMenu = () => {\n    return (\n      <div className=\"d-flex flex-column h-100\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Add Pods</b>\n        </h5>\n        <div className=\"p-3 scrollable flex-fill\">\n          <SidebarItem\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={{}}\n          />\n          {defaultPods.map((pod, idx) => (\n            <SidebarItem\n              key={idx}\n              ports={{\n                inPort: {\n                  id: \"inPort\",\n                  type: \"input\",\n                },\n                outPort: {\n                  id: \"outPort\",\n                  type: \"output\",\n                },\n              }}\n              properties={pod}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {hasSelected\n          ? selected.type === \"link\"\n            ? this.renderEditLink(links[selected.id], nodes)\n            : this.renderEditNode(nodes[selected.id])\n          : this.renderPodMenu()}\n      </Card>\n    );\n  };\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\n\nexport default function ExampleSelection(props) {\n  return (\n    <div className=\"example-selection\">\n      <DropdownButton\n        as={ButtonGroup}\n        title=\"Load Example\"\n        id=\"bg-nested-dropdown\"\n      >\n        <Dropdown.Item onClick={() => props.loadExample(\"pokedex\")}>\n          Pokedex Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"southpark\")}>\n          South Park Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"flower\")}>\n          Flower Search Query\n        </Dropdown.Item>\n      </DropdownButton>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport ExampleSelection from \"../components/FlowChart/ExampleSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart();\n    this.state = { chart, showOverlay: false };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateChart({ ...chart, ...newChart });\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateChart = (chart) => {\n    this.setState({ chart });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId }) => {\n    return !(fromNodeId === toNodeId || fromPortId === toPortId);\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadExample = (example) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_EXAMPLE,\n      payload: example,\n    });\n  };\n\n  render = () => {\n    const { chart, showOverlay } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <ExampleSelection loadExample={this.loadExample} />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _levels = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass ChartBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"top\",\n        labels: {\n          padding: 10,\n          boxWidth: 15,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              callback: this.getXAxisLabel,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Occurences\",\n            },\n            gridLines: {\n              labelString: \"hello\",\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: function (value) {\n                if (Number.isInteger(value)) {\n                  return value;\n                }\n              },\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: this.getParsedDatasets(),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: this.getParsedDatasets(),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  getXAxisLabel = (value, index, values) => {\n    if (index === 0) return values.length + \"s ago\";\n    else if (index === parseInt(values.length / 2)) return index + \"s ago\";\n    return;\n  };\n\n  getParsedDatasets = () => {\n    const { data } = this.props;\n    const datasets = Object.keys(_levels).map((level) => {\n      const levelData = data.map((tick) => tick.levels[level]);\n      return {\n        label: level,\n        fill: \"start\",\n        borderWidth: 1.5,\n        borderColor: _levels[level].borderColor,\n        backgroundColor: _levels[level].backgroundColor,\n        data: levelData,\n      };\n    });\n    return datasets;\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass LogLevelSummaryChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelCharts(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    const { chartData } = this.state;\n    let index = activePoints[0] && activePoints[0]._index;\n    console.log(\"index:\", index);\n\n    if (index && typeof index !== \"undefined\")\n      Dispatcher.dispatch({\n        actionType: Constants.SHOW_LOG_AT_INDEX,\n        payload: chartData[index].lastLog,\n      });\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header>Log Occurences by Level</Card.Header>\n        <Card.Body className=\"d-none d-md-block pb-2 pt-0\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelSummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport PieChart from \"./PieChart\";\n\nclass LogLevelPieChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelOccurences(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelOccurences();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header className=\"text-center\">Log Levels</Card.Header>\n        <Card.Body className=\"pt-0\">\n          <PieChart data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelPieChart;\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: string };\n\nconst customStyles = {\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n} & SelectProps;\n\nfunction MultiFilterSelect({ onFilterChange, options, ...rest }: Props) {\n  return (\n    <Select\n      onChange={(val) =>\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val])\n      }\n      isMulti\n      options={options}\n      styles={customStyles}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","const applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\nexport { applyFilters };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: any[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, msg, levelname, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useEffect, useRef } from \"react\";\n\nexport type UseTimeoutFnReturn = [() => boolean | null, () => void, () => void];\n\nfunction useTimeoutFn(fn: Function, ms: number = 0): UseTimeoutFnReturn {\n  const ready = useRef<boolean | null>(false);\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const callback = useRef(fn);\n\n  const isReady = useCallback(() => ready.current, []);\n\n  const set = useCallback(() => {\n    ready.current = false;\n    timeout.current && clearTimeout(timeout.current);\n\n    timeout.current = setTimeout(() => {\n      ready.current = true;\n      callback.current();\n    }, ms);\n  }, [ms]);\n\n  const clear = useCallback(() => {\n    ready.current = null;\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  // update ref when function changes\n  useEffect(() => {\n    callback.current = fn;\n  }, [fn]);\n\n  // set on mount, clear on unmount\n  useEffect(() => {\n    set();\n\n    return clear;\n  }, [ms]);\n\n  return [isReady, clear, set];\n}\nexport { useTimeoutFn };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useMiniSearch } from \"react-minisearch\";\nimport { usePrevious } from \"./usePrevious\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { applyFilters } from \"./useFilters\";\nimport { LogItem } from \"./LogItem\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport {\n  serializeLogsToCSVBlob,\n  serializeLogsToJSONBlob,\n  serializeLogsToTextBlob,\n} from \"../../helpers\";\nimport { saveAs } from \"file-saver\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\nconst ROW_SIZE = 30;\n\nconst fields = [\"filename\", \"funcName\", \"msg\", \"name\", \"module\", \"pathname\"];\nconst miniSearchOptions = { fields };\n\nconst generateFormatFileName = (format: Format) =>\n  `jina-logs-${new Date()}.${format}`;\n\ntype Format = \"json\" | \"csv\" | \"txt\";\n\ntype Props = {\n  data: ProcessedLog[];\n  showLogDetails: (log: ProcessedLog) => void;\n};\n\nconst itemKey = (index: number, data: { items: ProcessedLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsTable({ data, showLogDetails }: Props) {\n  const [scrolledToBottom, setScrolledToBottom] = React.useState(true);\n  const windowListRef = useRef<any>();\n  const [selectedSources, setSelectedSources] = React.useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = React.useState<\n    { value: ProcessedLog[\"levelname\"] }[]\n  >([]);\n  const [searchString, setSearchString] = React.useState(\"\");\n  const { search, searchResults, addAllAsync } = useMiniSearch(\n    data,\n    miniSearchOptions\n  );\n  const buffer = useRef<any[]>([]);\n  const previousLength = usePrevious(data.length);\n  useEffect(() => {\n    if (previousLength && previousLength! > 0) {\n      const newLog = data[previousLength! - 1];\n      addAllAsync([newLog]);\n      buffer.current.push(newLog);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousLength, searchString]);\n\n  const unfiltered = searchString ? searchResults : data;\n\n  const resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n  useEffect(() => {\n    if (windowListRef.current && scrolledToBottom) {\n      windowListRef.current.scrollToItem(resultData.length);\n    }\n  }, [resultData.length, scrolledToBottom]);\n  useDebounce(\n    () => {\n      search(searchString);\n    },\n    1000,\n    [searchString]\n  );\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-3\">\n        <Row>\n          <Col md=\"8\">\n            <MultiFilterSelect\n              options={toOption(sources)}\n              onFilterChange={setSelectedSources}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Logsources\"\n            />\n            <MultiFilterSelect\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Levels\"\n            />\n            <DropdownButton\n              as={ButtonGroup}\n              title=\"Download Logs\"\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToCSVBlob(data),\n                    generateFormatFileName(\"csv\")\n                  )\n                }\n              >\n                Download as CSV\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToJSONBlob(data),\n                    generateFormatFileName(\"json\")\n                  )\n                }\n              >\n                Download as JSON\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToTextBlob(data),\n                    generateFormatFileName(\"txt\")\n                  )\n                }\n              >\n                Download as TXT\n              </Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col md=\"4\">\n            <Form.Control\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={(e) => {\n                setSearchString(e.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body\n        className=\"log-stream-container p-1 border-top\"\n        id=\"log-stream-container\"\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() =>\n              windowListRef.current.scrollToItem(resultData.length)\n            }\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        <AutoSizer>\n          {({ height, width }) => {\n            const firstCol = 300;\n            const secondCol = 300;\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - resultData.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={resultData.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: resultData,\n                  columns: { firstCol, secondCol, thirdCol },\n                  showLogDetails,\n                }}\n                ref={windowListRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import React from \"react\";\nfunction usePrevious(value: any) {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\nexport { usePrevious };\n","import { DependencyList, useEffect } from \"react\";\nimport { useTimeoutFn } from \"./useTimeoutFn\";\n\nexport type UseDebounceReturn = [() => boolean | null, () => void];\n\nfunction useDebounce(\n  fn: Function,\n  ms: number = 0,\n  deps: DependencyList = []\n): UseDebounceReturn {\n  const [isReady, cancel, reset] = useTimeoutFn(fn, ms);\n\n  useEffect(reset, deps);\n\n  return [isReady, cancel];\n}\n\nexport { useDebounce };\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport LogLevelSummaryChart from \"../components/LogStream/LogLevelSummaryChart\";\nimport LogLevelPieChart from \"../components/LogStream/LogLevelPieChart\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store, Dispatcher, Constants } from \"../flux\";\nconst showLogDetails = (log) => {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_MODAL,\n    payload: { modal: \"logDetails\", modalParams: { log } },\n  });\n};\n\nfunction LogsView() {\n  const [logs, setLogs] = useState([]);\n  function getData() {\n    const newLogs = Store.getLogs();\n    setLogs([...newLogs]);\n  }\n  useEffect(() => {\n    Store.on(\"update-logs\", getData);\n    return () => Store.removeListener(\"update-logs\", getData);\n  }, []);\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Log Stream\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\">\n            <LogLevelSummaryChart />\n          </Col>\n          <Col md=\"2\" className=\"mb-4\">\n            <LogLevelPieChart />\n          </Col>\n        </Row>\n        <LogsTable data={logs} showLogDetails={showLogDetails} />\n      </div>\n    </Container>\n  );\n}\n\nexport { LogsView };\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nexport default function ElapsedCard({ elapsed }) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState(Store.getSettings());\n  const [updates, setUpdates] = useState({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting, value) {\n    const newUpdates = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\nexport default function StarRating({ rating, userRated, rate }) {\n  const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n  const stars = getStars(formatted, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n}\n\nconst getStars = (amount, rate) => {\n  let stars = [];\n  let integer = parseInt(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default function ImageCard({ image }) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function BuildHistory(props) {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default function ImageDetails({ image }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReadMe({ readme, documentation }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default function CopyCommand(props) {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReviewCard({ review }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default function ImageReviews({ reviews, newReview }) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nexport default function HelpCard({ title, content, icon, theme, link }) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from \"../components/Common/HelpCard\";\nimport PageTitle from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout, IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport { LogsView } from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n  },\n];\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, modalParams: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FallbackProps } from \"react-error-boundary\";\nimport PageTitle from \"./components/Common/PageTitle\";\nimport { Button } from \"shards-react\";\n\nfunction FallbackPage({ error, resetErrorBoundary }: FallbackProps) {\n  return (\n    <Container fluid className=\"main-content-container p-5\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          title=\"Error\"\n          subtitle=\"This should not have happened\"\n          className=\"text-sm-left my-3\"\n        />\n      </Row>\n      <Row noGutters className=\"page-header py-4\">\n        <Col xs=\"12\" sm=\"3\">\n          <p>Something went wrong:</p>\n          <pre>\n            <code className=\"text-warning\">{error!.message}</code>\n          </pre>\n        </Col>\n      </Row>\n      <Row noGutters className=\"page-header\">\n        <Col>\n          <Button onClick={resetErrorBoundary}>Try again</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport { FallbackPage };\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { FallbackPage } from \"./FallbackPage\";\nimport { Store } from \"./flux/\";\n\nconst App = () => {\n  return (\n    <Router basename={\"/\"}>\n      <div>\n        {routes.map((route, index) => {\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={withTracker((props) => {\n                return (\n                  <route.layout {...props}>\n                    <ErrorBoundary\n                      FallbackComponent={FallbackPage}\n                      onReset={() => Store.init()}\n                    >\n                      <route.component {...props} />\n                    </ErrorBoundary>\n                  </route.layout>\n                );\n              })}\n            />\n          );\n        })}\n      </div>\n    </Router>\n  );\n};\n\nexport { App };\n","const PERSIAN_GREEN = \"#009999\";\nconst GOLDEN_TANOI = \"#FFCC66\";\nconst BITTER_SWEET = \"#ff6666\";\nconst SCOOTER_GREEN = \"#32C8CD\";\n\nconst theme = {\n  palette: {\n    background: { default: \"#FFFFFF\" },\n    primary: {\n      main: PERSIAN_GREEN,\n    },\n    secondary: { main: GOLDEN_TANOI },\n    warning: { main: GOLDEN_TANOI },\n    error: { main: BITTER_SWEET },\n    success: { main: PERSIAN_GREEN },\n    info: { main: SCOOTER_GREEN },\n  },\n};\n\nexport { theme };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","module.exports = {\n  timeout: 15000,\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}