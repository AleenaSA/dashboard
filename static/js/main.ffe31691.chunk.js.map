{"version":3,"sources":["data/yaml.js","flux/constants.js","settings.js","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/Notifications.js","components/Layout/MainNavbar/UserActions.js","flux/dispatcher.js","helpers.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Default.jsx","components/Common/CookiesBanner.jsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/NodePort.jsx","components/FlowChart/ExampleSelection.jsx","views/FlowView.jsx","components/LogStream/LogItem.jsx","components/LogStream/LogStream.jsx","components/LogStream/ChartBase.jsx","components/LogStream/SummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/OccurenceChart.jsx","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","views/PackageView.jsx","views/LogIn.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","withTracker.js","App.js","serviceWorker.js","index.js","flux/config.js"],"names":["module","exports","pokedex","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_EXAMPLE","SHOW_POD_IN_FLOW","nodeOffset","x","y","className","toggleSidebar","onClick","connected","reconnect","pill","theme","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","Dispatcher","YAML","require","settings","propertyList","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","type","parents","Array","isArray","i","length","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","formatBytes","numBytes","parseFloat","toFixed","prop","name","logStream","taskStream","_store","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","checkConnection","connectionString","host","port","ready","startsWith","get","connect","logUpdate","taskUpdate","logString","log","close","EventSource","onopen","onmessage","m","JSON","onerror","taskString","profile","getProfile","a","result","getYAML","getImages","getImage","postRating","imageId","stars","post","postReview","content","searchHub","category","q","sort","CHART_LEVELS","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadExample","showPodByLabel","checkNetwork","prevStatus","api","init","clearIntervals","localStorage","getItem","yaml","shutdown","images","banner","flow","logs","status","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","flowchart","outPort","logSources","logLevels","occurences","current","previous","lastLog","logIndex","summaryCharts","processes","taskData","qps","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","Date","messages","bytes","selectedNode","modalParams","currentTab","startNetworkMonitor","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","checkNetworkInterval","setInterval","updateChartInterval","clearInterval","updateTaskInterval","yamlSTRING","with","board","e","parsed","handleNewLog","handleNewTaskEvent","message","formattedTimestamp","created","toLocaleString","idx","push","process","levelname","includes","task","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","map","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","level","updateSummaryCharts","numLogs","prevNum","entries","key","window","location","hash","customYAML","exampleName","exampleYAML","setItem","setTimeout","String","showError","image","reload","target","bannerTimeout","clearTimeout","hideBanner","params","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","panel","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getOccurencesByName","getTaskData","getActivePanel","path","substring","getConnectionStatus","activePanel","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","register","this","EventEmitter","MainNavbar","componentWillUnmount","Store","removeListener","getData","setState","dispatch","state","render","fluid","NavbarSpacer","navbar","Notifications","UserActions","NavbarToggle","on","React","Component","href","style","lineHeight","maxWidth","item","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","top","subItem","nav","SidebarNavItem","MainSidebar","props","onChange","getMenuState","sidebarNavItems","getSidebarItems","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","defaultProps","contained","DashboardLayout","children","noNavbar","noFooter","sm","show","acceptCookies","Button","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","inputRef","as","rows","submitReview","IconSidebarLayout","accepted","yamlString","acceptedCookies","hideLogoText","CookiesBanner","PasteYAML","WriteReview","subtitle","attrs","xs","ButtonGroup","variant","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","stringify","ChartNode","FlowChartSidebar","getInitialNodeState","newProperties","componentWillReceiveProps","nextProps","chart","searchResults","searchQuery","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","updateSearchQuery","searchProperties","query","indexProperties","search","availableProperties","lunr","field","add","renderEditNode","FormControl","spellCheck","property","deleteSelection","renderEditLink","nodeTo","choices","updateLink","choice","renderPodMenu","SidebarItem","inPort","defaultPods","hasSelected","Card","data-html2canvas-ignore","DropdownButton","Item","FlowView","componentDidMount","querySelector","addEventListener","preventDefault","extension","classList","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","updateChart","callback","newChart","cloneDeep","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","copyChartAsYAML","output","propId","formatAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","example","display","noGutters","PageTitle","ExampleSelection","CommandBar","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","reduce","action","newChartTransformer","showPodInFlow","msg","logName","levelInitial","toLowerCase","Row","Col","StreamContainer","_cache","CellMeasurerCache","defaultHeight","fixedWidth","_resultsCache","_mostRecentWidth","_mostRecentHeight","_resizeAllFlag","_startIndex","_scrollIndex","_scrollTop","_scrolledToBottom","downloadLogs","format","allLogs","filename","lineno","funcname","pathname","blob","Blob","saveAs","_list","_resizeAll","backToBottom","sources","levels","filterLogs","scrollToBottom","selectedSource","selectedLevel","scrollToLog","filter","setSelectedSource","setSelectedLevel","results","indexLogs","_resizeSearchResults","listenForEnter","charCode","scrollToRow","scrollToBottomResults","_resultsList","clearSearchResults","podLabel","renderSearchResults","height","deferredMeasurementCache","rowHeight","rowCount","rowRenderer","renderSearchResultRow","renderLogRow","isScrolling","cache","columnIndex","rowIndex","wordBreak","LogItem","showHelper","Header","source","onKeyPress","Body","onScroll","_onScroll","scrollToAlignment","_onRowsRendered","cb","startIndex","scrollTop","scrollHeight","clientHeight","difference","clearAll","recomputeRowHeights","prevQuery","_colors","INFO","background","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","ChartBase","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","gridLines","ticks","yAxes","borderDash","zeroLineColor","drawBorder","suggestedMin","chartConfig","getLabels","datasets","chartData","borderWidth","borderColor","options","ChartElement","canvasRef","activePoints","getElementsAtEvent","amount","animation","update","createRef","SummaryChart","showLog","_index","PieChart","getColor","names","mode","OccurenceChart","LogsView","Container","LogStream","ElapsedCard","ProgressCard","percent","newData","hoverBorderColor","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","suggestedMax","line","tension","scaleLabel","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","QueriesPerSecond","SettingsCard","original","updates","updateSetting","setting","form","SettingsView","Settings","rating","userRated","rate","round","getStars","integer","remainder","j","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","StarRating","HubView","sortBy","sortType","setCategory","updateSearch","ImageCard","buildHistory","build","formattedCreated","buildSize","os","architecture","version","documentation","rel","license","vendor","url","readme","copyCode","imageVar","repoTags","code","language","atomOneLight","review","newReview","ReviewCard","PackageView","getImageData","imageData","readmeHTML","CopyCommand","BuildHistory","Readme","ImageReviews","windowHash","windowParams","URLSearchParams","Login","icon","Errors","HelpCard","exact","layout","DefaultLayout","component","IconSidebar","NotFound","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","basename","routes","route","Boolean","hostname","ReactDOM","navigator","serviceWorker","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.ffe31691.chunk.js","sourcesContent":["module.exports = {\n  pokedex: `!Flow\n  with:\n    read_only: true\n    rest_api: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        chunk_seg:\n          x: 250\n          y: 268\n        tf_encode:\n          x: 250\n          y: 420\n        chunk_idx:\n          x: 250\n          y: 600\n        ranker:\n          x: 250\n          y: 836\n        doc_idx:\n          x: 249\n          y: 985\n  pods:\n    gateway: {}\n    chunk_seg:\n      uses: pods/craft.yml\n      parallel: $PARALLEL\n      needs: gateway\n    tf_encode:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 600000\n      needs: chunk_seg\n    chunk_idx:\n      uses: pods/chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      timeout_ready: 100000\n      needs: tf_encode\n    ranker:\n      uses: BiMatchRanker\n      needs: chunk_idx\n    doc_idx:\n      uses: pods/doc.yml\n      needs: ranker\n  \n  `,\n  flower: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        loader:\n          x: 250\n          y: 257\n        flipper:\n          x: 252\n          y: 407\n        normalizer:\n          x: 239\n          y: 563\n        encoder:\n          x: 252\n          y: 712\n        chunk_indexer:\n          x: 250\n          y: 872\n        ranker:\n          x: 252\n          y: 1066\n        doc_indexer:\n          x: 253\n          y: 1199\n  pods:\n    gateway: {}\n    loader:\n      uses: yaml/craft-load.yml\n      read_only: true\n      needs: gateway\n    flipper:\n      uses: yaml/craft-flip.yml\n      read_only: true\n      needs: loader\n    normalizer:\n      uses: yaml/craft-normalize.yml\n      read_only: true\n      needs: flipper\n    encoder:\n      uses: $ENCODER\n      timeout_ready: 600000\n      read_only: true\n      needs: normalizer\n    chunk_indexer:\n      uses: yaml/index-chunk.yml\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: yaml/index-doc.yml\n      needs: ranker  \n  `,\n  southpark: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 254\n          y: 147\n        splittor:\n          x: 254\n          y: 270\n        encoder:\n          x: 254\n          y: 448\n        chunk_indexer:\n          x: 251\n          y: 645\n        ranker:\n          x: 255\n          y: 862\n        doc_indexer:\n          x: 256\n          y: 1002\n  pods:\n    gateway: {}\n    splittor:\n      uses: pods/craft-split.yml\n      parallel: $PARALLEL\n      read_only: true\n      needs: gateway\n    encoder:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 60000\n      read_only: true\n      needs: splittor\n    chunk_indexer:\n      uses: pods/index-chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      reducing_uses: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: pods/index-doc.yml\n      needs: ranker\n  `,\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_EXAMPLE: \"LOAD_EXAMPLE\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n);\n","import React from \"react\";\n\nexport default ({ toggleSidebar }) => (\n  <nav className=\"nav cursor-pointer\">\n    <span\n      onClick={toggleSidebar}\n      className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n    >\n      <i className=\"material-icons\">&#xE5D2;</i>\n    </span>\n  </nav>\n);\n","import React from \"react\";\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\nexport default ({ connected, reconnect }) => {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n} from \"shards-react\";\n\nexport default ({ user, logOut, userActionsVisible, toggleUserActions }) => {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/podProperties.json\");\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\n\nexport function formatAsYAML(chart) {\n  let output = {\n    with: chart.with || {},\n    pods: {},\n  };\n  output.with.board = { canvas: {} };\n\n  Object.keys(chart.nodes).forEach((id) => {\n    let node = chart.nodes[id];\n    node.label = node.label || node.properties.name;\n    if (node.properties.name) delete node.properties.name;\n  });\n\n  Object.keys(chart.nodes).forEach((id) => {\n    const node = chart.nodes[id];\n\n    if (!node.label) return;\n\n    output.pods[node.label] = {};\n\n    Object.keys(node.properties).forEach((propId) => {\n      let type = propertyTypes[propId];\n      if (type === \"bool\") {\n        output.pods[node.label][propId] =\n          String(node.properties[propId]) === \"true\";\n      } else if (type === \"int\")\n        output.pods[node.label][propId] = parseInt(node.properties[propId]);\n      else output.pods[node.label][propId] = node.properties[propId];\n    });\n    output.with.board.canvas[node.label] = {\n      x: node.position.x,\n      y: node.position.y,\n    };\n  });\n  Object.keys(chart.links).forEach((id) => {\n    const link = chart.links[id];\n    const nodeFrom = chart.nodes[link.from.nodeId].label;\n    const nodeTo = chart.nodes[link.to.nodeId].label;\n    if (!nodeFrom || !nodeTo) return;\n    if (output.pods[nodeTo].needs) {\n      if (!Array.isArray(output.pods[nodeTo].needs))\n        output.pods[nodeTo].needs = [output.pods[nodeTo].needs];\n      output.pods[nodeTo].needs.push(nodeFrom);\n    } else output.pods[nodeTo].needs = nodeFrom;\n  });\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n","import axios from \"axios\";\nimport { hubURL } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout: 30000, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  checkConnection: (settings) => {\n    let connectionString = `${settings.host}:${settings.port}${\n      settings.ready.startsWith(\"/\") ? settings.ready : \"/\" + settings.ready\n    }`;\n    return axios.get(connectionString);\n  },\n  connect: (settings, logUpdate, taskUpdate) => {\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logUpdate({\n        type: \"connect\",\n        data: `Log connection established at ${logString}`,\n      });\n    };\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n    logStream.onerror = (data) => {\n      logUpdate({\n        type: \"error\",\n        data: `Could not get log data from ${logString}`,\n      });\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n    taskStream.onerror = (data) => {\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (connectionString) => {\n    const result = await axios.get(connectionString);\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleYAML from \"../data/yaml\";\n\nlet _store;\n\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst NUM_CHART_ELEMENTS = 60;\nconst CHART_UPDATE_INTERVAL = 1000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHECK_NETWORK_INTERVAL = 1000;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: {\n      flow: false,\n      logs: false,\n    },\n    connected: {\n      logs: false,\n      flow: false,\n      status: false,\n    },\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected: {},\n      hovered: {},\n      scale: 1,\n      nodes: {\n        gateway: {\n          id: \"gateway\",\n          label: \"gateway\",\n          ports: {\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          },\n          properties: {},\n          position: { x: 629, y: 72 },\n        },\n      },\n      links: {},\n      offset: { x: 0, y: 0 },\n    },\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    occurences: {\n      current: {},\n      previous: {},\n      lastLog: [],\n    },\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: null,\n    currentTab: \"logStream\",\n  };\n}\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_EXAMPLE:\n        this.loadExample(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      default:\n    }\n  };\n\n  checkNetwork = async () => {\n    let prevStatus = this.connected;\n    try {\n      await api.checkConnection(_store.settings);\n      this.connected = true;\n    } catch (e) {\n      this.connected = false;\n    }\n    if (prevStatus !== this.connected) return this.init();\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    this.startNetworkMonitor();\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    _store.loading = false;\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  startNetworkMonitor = async () => {\n    if (!this.checkNetworkInterval)\n      this.checkNetworkInterval = setInterval(\n        this.checkNetwork,\n        CHECK_NETWORK_INTERVAL\n      );\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async (yamlSTRING) => {\n    let flow;\n    const { settings } = _store;\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n\n    if (yamlSTRING) {\n      flow = parseYAML(yamlSTRING);\n      _store.connected.flow = false;\n    } else {\n      try {\n        let str = await api.getYAML(connectionString);\n        flow = parseYAML(str);\n        _store.connected.flow = true;\n        this.showBanner(\n          \"flow\",\n          `Getting YAML from ${connectionString}`,\n          \"success\"\n        );\n      } catch (e) {\n        _store.connected.flow = false;\n        this.showBanner(\n          \"flow\",\n          `Could not get YAML flow from ${connectionString}`,\n          \"error\"\n        );\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(_store.settings, this.handleNewLog, this.handleNewTaskEvent);\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleNewLog = (message) => {\n    const { type, data } = message;\n\n    if (type === \"connect\") {\n      _store.connected.logs = true;\n      return this.showBanner(\"logs\", data, \"success\");\n    }\n\n    if (type === \"error\") {\n      _store.connected.logs = false;\n      return this.showBanner(\"logs\", data, \"error\");\n    }\n\n    const log = data;\n\n    log.formattedTimestamp = new Date(log.created * 1000).toLocaleString();\n    log.idx = _store.logs.length;\n\n    _store.logs.push(log);\n    _store.processes[log.process] = log.name;\n    _store.logSources[log.name] = true;\n    _store.logLevels[log.levelname] = true;\n\n    if (CHART_LEVELS.includes(log.levelname)) {\n      _store.occurences.current[log.levelname]++;\n    }\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { type, data } = message;\n\n    if (type === \"connect\") {\n      _store.connected.task = true;\n      return this.showBanner(\"task\", data, \"success\");\n    }\n\n    if (type === \"error\") {\n      _store.connected.task = false;\n      return this.showBanner(\"task\", data, \"error\");\n    }\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = () => {\n    for (let i = 0; i < CHART_LEVELS.length; ++i) {\n      let level = CHART_LEVELS[i];\n      _store.occurences.current[level] = 0;\n      _store.occurences.previous[level] = 0;\n      _store.summaryCharts[level] = new Array(NUM_CHART_ELEMENTS).fill(0);\n    }\n    _store.occurences.lastLog = new Array(NUM_CHART_ELEMENTS).fill({});\n    this.updateChartInterval = setInterval(\n      this.updateSummaryCharts,\n      CHART_UPDATE_INTERVAL\n    );\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n      _store.connected.hub = true;\n    } catch (e) {\n      _store.connected.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    const { current, previous } = _store.occurences;\n    for (let i = 0; i < CHART_LEVELS.length; ++i) {\n      let level = CHART_LEVELS[i];\n      const numLogs = current[level];\n      const prevNum = previous[level];\n      _store.summaryCharts[level].push(numLogs - prevNum);\n      _store.summaryCharts[level].shift();\n      _store.occurences.previous[level] = numLogs;\n    }\n    _store.occurences.lastLog.push(_store.logs.length - 1);\n    _store.occurences.lastLog.shift();\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (index) => {\n    let logIndex = _store.occurences.lastLog[index];\n    if (!logIndex) return;\n    _store.logIndex = _store.occurences.lastLog[index];\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n      }\n    }\n    _store.flowchart.selected = selected;\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadExample = (exampleName) => {\n    const flow = exampleYAML[exampleName];\n    this.initFlowChart(flow);\n    this.emit(\"update-flowchart\");\n  };\n\n  saveSettings = (settings) => {\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(\"hub\", error);\n    }\n    if (result.error) this.showError(\"hub\", result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"hub\", \"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(\"hub\", error);\n    }\n    if (result.error) this.showError(\"hub\", result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"hub\", \"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (target, message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner[target] = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = { logs: false, flow: false };\n    this.emit(\"update-ui\");\n  };\n\n  showError = (target, message) => {\n    this.showBanner(target, message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, params } = data;\n    _store.modal = modal;\n    _store.modalParams = params;\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = \"\";\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = (panel = \"logs\") => {\n    return _store.banner[panel];\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getOccurencesByName = () => {\n    return _store.occurences.current;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    const activePanel = this.getActivePanel();\n    const status = _store.connected[activePanel];\n    return status;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarToggle from \"./NavbarToggle\";\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainNavbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userActionsVisible: false,\n      connected: Store.getConnectionStatus(),\n      user: Store.getUser(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getData);\n  };\n\n  getData = () => {\n    const connected = Store.getConnectionStatus();\n    const user = Store.getUser();\n    this.setState({ connected, user });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  toggleUserActions = () => {\n    this.setState({\n      userActionsVisible: !this.state.userActionsVisible,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n  render = () => {\n    const { connected, user, userActionsVisible } = this.state;\n    return (\n      <div className=\"main-navbar bg-white sticky-top\">\n        <Container fluid className=\"p-0\">\n          <Navbar\n            type=\"light\"\n            className=\"align-items-stretch flex-md-nowrap p-0\"\n          >\n            <NavbarSpacer />\n            <Nav navbar className=\"border-left flex-row\">\n              <Notifications reconnect={this.reconnect} connected={connected} />\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={this.toggleUserActions}\n                logOut={this.logOut}\n              />\n            </Nav>\n            <NavbarToggle toggleSidebar={this.toggleSidebar} />\n          </Navbar>\n        </Container>\n      </div>\n    );\n  };\n}\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({ menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DashboardLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default ({ show, acceptCookies }) => {\n  return (\n    <div className={`cookies-banner ${show ? \"\" : \"hidden\"}`}>\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (this.inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(this.inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (this.inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(this.inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport CookiesBanner from \"../components/Common/CookiesBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      modal: Store.getModal(),\n      loading: Store.isLoading(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    this.setState({ modal, loading });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ accepted: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const params = Store.getModalParams();\n    const { imageId } = params;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  render = () => {\n    const { modal, acceptedCookies } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar />\n            {children}\n            <CookiesBanner\n              show={!acceptedCookies}\n              acceptCookies={this.acceptCookies}\n            />\n            <MainFooter />\n          </Col>\n        </Row>\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nexport default ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n};\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default (props) => {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default (props) => {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport lunr from \"lunr\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  constructor(props) {\n    super();\n    let node = {};\n    if (props.chart.selected.id) {\n      const selectedNode = props.chart.nodes[props.chart.selected.id];\n      node = this.getInitialNodeState(selectedNode);\n    }\n\n    this.state = {\n      availableProperties: Store.getAvailableProperties(),\n      node,\n      searchResults: [],\n      searchQuery: \"\",\n    };\n  }\n\n  getInitialNodeState = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).forEach((key) => {\n      properties[key] = node.properties[key];\n    });\n\n    return { label, id: node.id, properties, newProperties };\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id) return;\n\n    this.setState({ searchResults: [], searchQuery: \"\" });\n\n    if (!id) return;\n\n    if (type === \"node\" && id !== this.state.node.id) {\n      const node = nodes[id];\n      this.setState({ node: this.getInitialNodeState(node) });\n    }\n  };\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.searchProperties);\n  };\n\n  searchProperties = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ searchResults: false });\n    this.indexProperties();\n    let searchResults = this.index.search(`${query} ${query}*`);\n    this.setState({ searchResults });\n  };\n\n  indexProperties = () => {\n    const { availableProperties } = this.state;\n    this.index = lunr(function () {\n      this.field(\"name\");\n\n      availableProperties.forEach((prop, idx) => {\n        prop.id = parseInt(idx);\n        this.add(prop);\n      });\n    });\n  };\n\n  renderEditNode = () => {\n    const {\n      availableProperties,\n      node,\n      searchQuery,\n      searchResults,\n    } = this.state;\n    let label =\n      typeof node.label === \"undefined\"\n        ? node.properties.name\n        : node.label || \"\";\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>Pod Name</b>\n          </p>\n          <FormControl\n            spellCheck={false}\n            value={label}\n            onChange={(e) => this.updateLabel(e.target.value)}\n            className=\"pod-name-input\"\n          />\n        </div>\n        <p className=\"mb-0 px-2\">\n          <b>Properties</b>\n        </p>\n        <div className=\"m-2\">\n          <FormControl\n            spellCheck={false}\n            placeholder=\"search properties...\"\n            value={searchQuery}\n            onChange={this.updateSearchQuery}\n          />\n        </div>\n        <div className=\"property-table flex-fill mx-2\">\n          {searchQuery && searchResults ? (\n            searchResults.map((result) => {\n              const property = availableProperties[result.ref];\n              const { name, type } = property;\n              const value = node.properties[name];\n\n              if (typeof value == \"undefined\")\n                return (\n                  <div key={name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={type}\n                      value={node.newProperties[name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                );\n              return (\n                <div key={name} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{name}</p>\n                  <FormControl\n                    spellCheck={false}\n                    value={value || \"\"}\n                    onChange={(e) =>\n                      this.updateExistingValue(name, e.target.value)\n                    }\n                    className=\"property-value-input\"\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              {Object.keys(node.properties).map((prop) => {\n                const value = node.properties[prop];\n                if (prop === \"name\") return \"\";\n                return (\n                  <div key={prop} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{prop}</p>\n                    <FormControl\n                      spellCheck={false}\n                      value={value || \"\"}\n                      onChange={(e) =>\n                        this.updateExistingValue(prop, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    />\n                  </div>\n                );\n              })}\n              {availableProperties.map((property) =>\n                typeof node.properties[property.name] == \"undefined\" ? (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={property.type}\n                      value={node.newProperties[property.name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(property.name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Pod\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId];\n    const nodeTo = nodes[link.to.nodeId];\n\n    let choices = Object.keys(nodes).map((id) => {\n      return { label: nodes[id].label || nodes[id].properties.name, id };\n    });\n\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Edit Connection</b>\n        </h5>\n        <div className=\"flex-fill px-2\">\n          <div className=\"p-2 mb-1\">\n            <p className=\"mb-1\">\n              <b>From</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, e.target.value, nodeTo.id)\n              }\n              value={nodeFrom.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n            <p className=\"mb-1\">\n              <b>To</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, nodeFrom.id, e.target.value)\n              }\n              value={nodeTo.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Connection\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderPodMenu = () => {\n    return (\n      <div className=\"d-flex flex-column h-100\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Add Pods</b>\n        </h5>\n        <div className=\"p-3 scrollable flex-fill\">\n          <SidebarItem\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={{}}\n          />\n          {defaultPods.map((pod, idx) => (\n            <SidebarItem\n              key={idx}\n              ports={{\n                inPort: {\n                  id: \"inPort\",\n                  type: \"input\",\n                },\n                outPort: {\n                  id: \"outPort\",\n                  type: \"output\",\n                },\n              }}\n              properties={pod}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {hasSelected\n          ? selected.type === \"link\"\n            ? this.renderEditLink(links[selected.id], nodes)\n            : this.renderEditNode(nodes[selected.id])\n          : this.renderPodMenu()}\n      </Card>\n    );\n  };\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"example-selection\">\n      <DropdownButton\n        as={ButtonGroup}\n        title=\"Load Example\"\n        id=\"bg-nested-dropdown\"\n      >\n        <Dropdown.Item onClick={() => props.loadExample(\"pokedex\")}>\n          Pokedex Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"southpark\")}>\n          South Park Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"flower\")}>\n          Flower Search Query\n        </Dropdown.Item>\n      </DropdownButton>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport ExampleSelection from \"../components/FlowChart/ExampleSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart();\n    const banner = Store.getBanner(\"flow\");\n    this.state = { chart, banner, showOverlay: false };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-flowchart\", this.getData);\n    Store.on(\"update-ui\", this.getBanner);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n    Store.removeListener(\"update-ui\", this.getBanner);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  };\n\n  getBanner = () => {\n    const banner = Store.getBanner(\"flow\");\n    this.setState({ banner });\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateChart({ ...chart, ...newChart });\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateChart = (chart) => {\n    this.setState({ chart });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId, chart }) => {\n    if (fromPortId !== \"outPort\" || toPortId !== \"inPort\") return false;\n    if (fromNodeId === toNodeId) return false;\n    return true;\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadExample = (example) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_EXAMPLE,\n      payload: example,\n    });\n  };\n\n  render = () => {\n    const { chart, banner, showOverlay } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <ExampleSelection loadExample={this.loadExample} />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nexport default ({ data, showPodInFlow }) => {\n  const { name, msg, levelname, process, formattedTimestamp, idx, pod } = data;\n  let logName = String(name);\n  logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n  let levelInitial = String(levelname)[0];\n  return (\n    <div\n      className={`log log-${String(\n        levelname\n      ).toLowerCase()} px-4 border-bottom py-1`}\n    >\n      <Row>\n        <Col\n          lg=\"2\"\n          md=\"3\"\n          className=\"log-prefix text-muted px-0 d-flex flex-row\"\n        >\n          <div className=\"text-bold mr-2\">{idx}</div>\n          <div className=\"ml-auto\">{formattedTimestamp}</div>\n        </Col>\n        <Col\n          lg=\"3\"\n          md=\"4\"\n          className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n          onClick={() => showPodInFlow(pod)}\n        >\n          {logName}@{process}[{levelInitial}]:\n        </Col>\n        <Col sm=\"12\" md=\"5\" lg=\"7\" className=\"px-0\">\n          {msg}\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Card,\n  FormControl,\n  Row,\n  Col,\n  ButtonGroup,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport LogItem from \"./LogItem\";\nimport lunr from \"lunr\";\nimport { saveAs } from \"file-saver\";\nimport { Store } from \"../../flux\";\n\nimport List from \"react-virtualized/dist/commonjs/List\";\nimport AutoSizer from \"react-virtualized/dist/commonjs/AutoSizer\";\nimport CellMeasurer, {\n  CellMeasurerCache,\n} from \"react-virtualized/dist/commonjs/CellMeasurer\";\n\nimport { Dispatcher, Constants } from \"../../flux\";\n\nclass StreamContainer extends React.Component {\n  _cache = new CellMeasurerCache({ defaultHeight: 10, fixedWidth: true });\n  _resultsCache = new CellMeasurerCache({\n    defaultHeight: 10,\n    fixedWidth: true,\n  });\n\n  _mostRecentWidth = 0;\n  _mostRecentHeight = 0;\n  _resizeAllFlag = false;\n  _startIndex = 0;\n  _scrollIndex = 0;\n  _scrollTop = 0;\n  _scrolledToBottom = true;\n\n  constructor() {\n    super();\n\n    this.state = {\n      allLogs: Store.getLogs(),\n      logs: Store.getLogs(),\n      sources: Store.getLogSources(),\n      levels: Store.getLogLevels(),\n      searchQuery: \"\",\n      prevQuery: \"\",\n      results: [],\n      showHelper: false,\n      selectedSource: false,\n      selectedLevel: false,\n    };\n\n    Store.on(\"update-logs\", this.getData);\n    Store.on(\"show-log\", this.getIndexedLog);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-logs\", this.getData);\n    Store.removeListener(\"show-log\", this.getIndexedLog);\n  };\n\n  downloadLogs = (format) => {\n    let logs = this.state.allLogs;\n    let content = \"\";\n    if (format === \"json\") content = \"[\\n\";\n    else if (format === \"csv\")\n      content =\n        \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n\n    for (let i = 0; i < logs.length; ++i) {\n      let log = logs[i];\n      if (format === \"json\")\n        content +=\n          JSON.stringify(logs[i]) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n      else if (format === \"csv\")\n        content += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n      else\n        content += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    }\n    if (format === \"json\") content += \"]\";\n\n    let filename = `jina-logs-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  };\n\n  componentDidMount = () => {\n    setTimeout(() => {\n      if (this._list) {\n        this._resizeAll();\n        this.backToBottom();\n      }\n    }, 1);\n  };\n\n  getData = () => {\n    const allLogs = Store.getLogs();\n    const sources = Store.getLogSources();\n    const levels = Store.getLogLevels();\n    this.setState({ sources, levels, allLogs }, this.filterLogs);\n    if (this._scrolledToBottom && this._list) this.scrollToBottom();\n  };\n\n  getIndexedLog = () => {\n    const index = Store.getIndexedLog();\n    const selectedSource = false;\n    const selectedLevel = false;\n    const logs = this.state.allLogs;\n    this.setState({ selectedSource, selectedLevel, logs });\n    this.scrollToLog(index);\n  };\n\n  filterLogs = () => {\n    let { allLogs, selectedSource, selectedLevel } = this.state;\n    if (selectedSource === \"false\") selectedSource = false;\n    if (selectedLevel === \"false\") selectedLevel = false;\n\n    if (!selectedSource && !selectedLevel)\n      return this.setState({ logs: allLogs });\n    let logs = allLogs.filter((log) => {\n      if (selectedSource && selectedLevel)\n        return log.levelname === selectedLevel && log.name === selectedSource;\n      else if (selectedSource) return log.name === selectedSource;\n      else if (selectedLevel) return log.levelname === selectedLevel;\n      return false;\n    });\n\n    this.setState({ logs }, this._resizeAll);\n  };\n\n  setSelectedSource = (selectedSource) => {\n    this.setState({ selectedSource }, this.filterLogs);\n  };\n\n  setSelectedLevel = (selectedLevel) => {\n    this.setState({ selectedLevel }, this.filterLogs);\n  };\n\n  search = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ results: false }, this._resizeAll);\n    this.indexLogs();\n    let results = this.index.search(`${query}*`);\n    this.setState({ results }, this._resizeSearchResults);\n  };\n\n  listenForEnter = (key) => {\n    if (parseInt(key.charCode) === 13) {\n      this.search();\n    }\n  };\n\n  indexLogs = () => {\n    const { logs } = this.state;\n    this.index = lunr(function () {\n      this.field(\"filename\");\n      this.field(\"funcName\");\n      this.field(\"msg\");\n      this.field(\"name\");\n      this.field(\"module\");\n      this.field(\"pathname\");\n\n      logs.forEach((log, idx) => {\n        log.id = parseInt(idx);\n        this.add(log);\n      });\n    });\n  };\n\n  scrollToLog = (index) => {\n    this._list.scrollToRow(index);\n  };\n\n  scrollToBottom = () => {\n    this._list.scrollToRow(this.state.logs.length);\n    this._scrolledToBottom = true;\n  };\n\n  scrollToBottomResults = () => {\n    this._resultsList.scrollToRow(this.state.results.length);\n    this._scrolledToBottom = true;\n  };\n\n  backToBottom = () => {\n    this.scrollToBottom();\n    setTimeout(this.scrollToBottom, 1);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.search);\n  };\n\n  clearSearchResults = () => {\n    this.setState({\n      results: false,\n      searchQuery: \"\",\n    });\n  };\n\n  showPodInFlow = (podLabel) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_POD_IN_FLOW,\n      payload: podLabel,\n    });\n  };\n\n  renderSearchResults = () => {\n    const { results } = this.state;\n    return (\n      <AutoSizer>\n        {({ height, width }) => {\n          if (this._mostRecentWidth !== width) {\n            this._mostRecentWidth = width;\n            setTimeout(this._resizeSearchResults, 0);\n          }\n          if (this._mostRecentHeight !== height) {\n            this._mostRecentHeight = height;\n            setTimeout(this._resizeSearchResults, 0);\n          }\n          return (\n            <List\n              width={width}\n              height={height}\n              ref={(ref) => (this._resultsList = ref)}\n              deferredMeasurementCache={this._resultsCache}\n              rowHeight={this._resultsCache.rowHeight}\n              rowCount={results.length}\n              rowRenderer={this.renderSearchResultRow}\n            />\n          );\n        }}\n      </AutoSizer>\n    );\n  };\n\n  renderLogRow = ({ index, isScrolling, key, parent, style }) => {\n    const log = this.state.logs[index];\n    return (\n      <CellMeasurer\n        cache={this._cache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <div\n          style={{\n            ...style,\n            wordBreak: \"break-word\",\n          }}\n        >\n          <LogItem\n            showPodInFlow={this.showPodInFlow}\n            index={index}\n            data={log}\n          />\n        </div>\n      </CellMeasurer>\n    );\n  };\n\n  renderSearchResultRow = ({ index, isScrolling, key, parent, style }) => {\n    const result = this.state.results[index];\n    const log = this.state.logs[result.ref];\n    return (\n      <CellMeasurer\n        cache={this._resultsCache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <div\n          style={{\n            ...style,\n            wordBreak: \"break-word\",\n          }}\n        >\n          <LogItem showPodInFlow={this.showPodInFlow} data={log} />\n        </div>\n      </CellMeasurer>\n    );\n  };\n\n  render = () => {\n    const {\n      results,\n      searchQuery,\n      logs,\n      showHelper,\n      sources,\n      levels,\n    } = this.state;\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header className=\"p-3\">\n          <Row>\n            <Col md=\"8\" xs=\"6\">\n              <FormControl\n                as=\"select\"\n                onChange={(e) => this.setSelectedSource(e.target.value)}\n                className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              >\n                <option value={false}>All Logs</option>\n                {Object.keys(sources).map((source) => (\n                  <option key={source} value={source}>\n                    {source}\n                  </option>\n                ))}\n              </FormControl>\n              <FormControl\n                as=\"select\"\n                onChange={(e) => this.setSelectedLevel(e.target.value)}\n                className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              >\n                <option value={false}>All Levels</option>\n                {Object.keys(levels).map((level) => (\n                  <option key={level} value={level}>\n                    {level}\n                  </option>\n                ))}\n              </FormControl>\n              <DropdownButton\n                as={ButtonGroup}\n                title=\"Download Logs\"\n                id=\"bg-nested-dropdown\"\n              >\n                <Dropdown.Item onClick={() => this.downloadLogs(\"csv\")}>\n                  Download as CSV\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => this.downloadLogs(\"json\")}>\n                  Download as JSON\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => this.downloadLogs(\"txt\")}>\n                  Download as TXT\n                </Dropdown.Item>\n              </DropdownButton>\n            </Col>\n            <Col md=\"4\" xs=\"6\">\n              <FormControl\n                placeholder=\"search logs...\"\n                onKeyPress={this.listenForEnter}\n                onChange={this.updateSearchQuery}\n                value={searchQuery}\n              />\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body\n          className=\"log-stream-container p-1 border-top\"\n          id=\"log-stream-container\"\n        >\n          {searchQuery && results ? (\n            \"\"\n          ) : (\n            <div\n              onClick={this.backToBottom}\n              className={`back-to-bottom ${showHelper && \"active\"}`}\n            >\n              <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n            </div>\n          )}\n          {searchQuery && results ? (\n            this.renderSearchResults()\n          ) : (\n            <AutoSizer>\n              {({ height, width }) => {\n                if (this._mostRecentWidth !== width) {\n                  this._mostRecentWidth = width;\n                  setTimeout(this._resizeAll, 0);\n                  setTimeout(this.backToBottom, 1);\n                }\n                if (this._mostRecentHeight !== height) {\n                  this._mostRecentHeight = height;\n                  setTimeout(this._resizeAll, 0);\n                  setTimeout(this.backToBottom, 1);\n                }\n                return (\n                  <List\n                    width={width}\n                    height={height}\n                    ref={(ref) => (this._list = ref)}\n                    deferredMeasurementCache={this._cache}\n                    rowHeight={this._cache.rowHeight}\n                    rowCount={logs.length}\n                    rowRenderer={this.renderLogRow}\n                    onScroll={this._onScroll}\n                    scrollToAlignment=\"center\"\n                  />\n                );\n              }}\n            </AutoSizer>\n          )}\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  _onRowsRendered = (data, cb) => {\n    const { startIndex } = data;\n    this._startIndex = startIndex;\n  };\n\n  _onScroll = (data) => {\n    const { scrollTop, scrollHeight, clientHeight } = data;\n    this._scrollTop = scrollTop;\n    let difference = scrollHeight - (scrollTop + clientHeight);\n\n    if (difference < 10) this._scrolledToBottom = true;\n    else {\n      this._scrolledToBottom = false;\n    }\n\n    if (difference > 75 && !this.state.showHelper)\n      this.setState({ showHelper: true });\n    else if (difference <= 75 && this.state.showHelper)\n      this.setState({ showHelper: false });\n  };\n\n  _resizeAll = () => {\n    this._resizeAllFlag = false;\n    this._cache.clearAll();\n    if (this._list) {\n      this._list.recomputeRowHeights();\n    }\n  };\n\n  _resizeSearchResults = () => {\n    this._resizeAllFlag = false;\n    this._resultsCache.clearAll();\n    if (this._resultsList) {\n      this._resultsList.recomputeRowHeights();\n    }\n  };\n}\n\nexport default StreamContainer;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = {\n  INFO: {\n    border: \"#009999\",\n    background: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    border: \"#32c8cd\",\n    background: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    border: \"#ffcc66\",\n    background: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    border: \"#ff6666\",\n    background: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    border: \"#ff4540\",\n    background: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    border: \"#6E7278\",\n    background: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass ChartBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"bottom\",\n        labels: {\n          padding: 10,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: false,\n            color: \"red\",\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: Object.keys(data).map((level) => {\n          const chartData = data[level];\n          return {\n            label: level,\n            fill: \"start\",\n            borderWidth: 1.5,\n            borderColor: _colors[level].border,\n            backgroundColor: _colors[level].background,\n            data: chartData,\n          };\n        }),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: Object.keys(data).map((level) => {\n        const chartData = data[level];\n        return {\n          label: level,\n          fill: \"start\",\n          borderWidth: 1.5,\n          borderColor: _colors[level].border,\n          backgroundColor: _colors[level].background,\n          data: chartData,\n        };\n      }),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass SummaryChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getSummaryCharts(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    let index = activePoints[0] && activePoints[0]._index;\n    if (index && typeof index !== \"undefined\");\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_LOG_AT_INDEX,\n      payload: index,\n    });\n  };\n\n  getData = () => {\n    const chartData = Store.getSummaryCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Body className=\"d-none d-md-block pb-2\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default SummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport ChartBase from \"./PieChart\";\n\nclass OccurenceChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getOccurencesByName(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getOccurencesByName();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Body>\n          <ChartBase data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default OccurenceChart;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport LogStream from \"../components/LogStream/LogStream\";\nimport SummaryChart from \"../components/LogStream/SummaryChart\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport OccurenceChart from \"../components/LogStream/OccurenceChart\";\n\nclass LogsView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      banner: Store.getBanner(\"logs\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n  getData = () => {\n    const banner = Store.getBanner(\"logs\");\n    this.setState({ banner });\n  };\n  render = () => {\n    const { banner } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Log Stream\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"10\" className=\"mb-4\">\n              <SummaryChart />\n            </Col>\n            <Col md=\"2\" className=\"mb-4\">\n              <OccurenceChart />\n            </Col>\n          </Row>\n          <LogStream />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default LogsView;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nclass ElapsedCard extends React.Component {\n  render() {\n    const { elapsed } = this.props;\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n          <b>{elapsed.task_name}</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          Elapsed Time\n        </h6>\n      </Card>\n    );\n  }\n}\n\nexport default ElapsedCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n      banner: Store.getBanner(\"task\"),\n    };\n    Store.on(\"update-task\", this.getData);\n    Store.on(\"update-ui\", this.getBanner);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n    Store.removeListener(\"update-ui\", this.getBanner);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  getBanner = () => {\n    const banner = Store.getBanner(\"task\");\n    this.setState({ banner });\n  };\n  render = () => {\n    const { taskData, banner } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Form,\n  FormInput,\n  Button,\n} from \"shards-react\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\n\nclass SettingsCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      original: Store.getSettings(),\n      updates: {},\n    };\n    Store.on(\"update-settings\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-settings\", this.getData);\n  };\n\n  getData = () => {\n    const original = Store.getSettings();\n    this.setState({ original, updates: {} });\n  };\n\n  updateSetting = (setting, value) => {\n    this.setState((prevState) => {\n      let { updates } = prevState;\n      updates[setting] = value;\n      return { updates };\n    });\n  };\n\n  saveChanges = () => {\n    const { original, updates } = this.state;\n\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  };\n\n  render = () => {\n    const { original, updates } = this.state;\n    return (\n      <Card small className=\"mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Connection Preferences</h6>\n        </CardHeader>\n        <CardBody>\n          <Form>\n            <Row form>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Host</label>\n                <FormInput\n                  placeholder=\"0.0.0.0\"\n                  value={\"host\" in updates ? updates.host : original.host}\n                  onChange={(e) => this.updateSetting(\"host\", e.target.value)}\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Port</label>\n                <FormInput\n                  placeholder=\"5000\"\n                  value={\"port\" in updates ? updates.port : original.port}\n                  onChange={(e) => this.updateSetting(\"port\", e.target.value)}\n                />\n              </Col>\n            </Row>\n            <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n            <Row form>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Log</label>\n                <FormInput\n                  placeholder=\"/stream/log\"\n                  value={\"log\" in updates ? updates.log : original.log}\n                  onChange={(e) => this.updateSetting(\"log\", e.target.value)}\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Profile</label>\n                <FormInput\n                  placeholder=\"/stream/profile\"\n                  value={\n                    \"profile\" in updates ? updates.profile : original.profile\n                  }\n                  onChange={(e) =>\n                    this.updateSetting(\"profile\", e.target.value)\n                  }\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>YAML</label>\n                <FormInput\n                  placeholder=\"/data/yaml\"\n                  value={\"yaml\" in updates ? updates.yaml : original.yaml}\n                  onChange={(e) => this.updateSetting(\"yaml\", e.target.value)}\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Shutdown</label>\n                <FormInput\n                  placeholder=\"/action/shutdown\"\n                  value={\n                    \"shutdown\" in updates ? updates.shutdown : original.shutdown\n                  }\n                  onChange={(e) =>\n                    this.updateSetting(\"shutdown\", e.target.value)\n                  }\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Ready</label>\n                <FormInput\n                  placeholder=\"/status/isready\"\n                  value={\"ready\" in updates ? updates.ready : original.ready}\n                  onChange={(e) => this.updateSetting(\"ready\", e.target.value)}\n                />\n              </Col>\n            </Row>\n          </Form>\n          <Button theme=\"primary\" onClick={this.saveChanges}>\n            Save Settings\n          </Button>\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\nexport default ({ rating, userRated, rate }) => {\n  const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n  const stars = getStars(formatted, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n};\n\nconst getStars = (amount, rate) => {\n  let stars = [];\n  let integer = parseInt(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default ({ image }) => {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      banner: Store.getBanner(\"hub\"),\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  getData = () => {\n    const banner = Store.getBanner(\"hub\");\n    this.setState({ banner });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { banner, images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default (props) => {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default ({ image }) => {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default ({ readme, documentation }) => {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default (props) => {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default ({ review }) => {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default ({ reviews, newReview }) => {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      banner: {},\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getData();\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  getData = () => {\n    const banner = Store.getBanner(\"hub\");\n    this.setState({ banner });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"hub\", \"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, params: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { banner, imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nexport default ({ title, content, icon, theme, link }) => {\n  return (\n    <a className=\"unstyled-link\" href={link}>\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from \"../components/Common/HelpCard\";\nimport PageTitle from \"../components/Common/PageTitle\";\n\nconst Errors = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Errors;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout, IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport LogsView from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n  },\n];\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nexport default () => (\n  <Router basename={\"/\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker((props) => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}