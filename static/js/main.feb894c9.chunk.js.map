{"version":3,"sources":["images/jina-light.svg","settings.js","flux/constants.js","flux/dispatcher.js","helpers.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","modals/PasteYAML.jsx","layouts/Default.jsx","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarNav/Notifications.js","components/Layout/MainNavbar/NavbarNav/UserActions.js","components/Layout/MainNavbar/NavbarNav/NavbarNav.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Dashboard.jsx","modals/WriteReview.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/NodePort.jsx","views/FlowView.jsx","components/LogStream/LogItem.jsx","components/LogStream/LogStream.jsx","components/LogStream/ChartBase.jsx","components/LogStream/SummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/OccurenceChart.jsx","views/LogsView.jsx","components/Settings/Settings.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","views/PackageView.jsx","views/LogIn.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","withTracker.js","App.js","serviceWorker.js","index.js","flux/config.js"],"names":["module","exports","nodeOffset","x","y","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","Dispatcher","YAML","require","settings","propertyList","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","replace","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","prevNode","Object","keys","map","id","pod","node","label","ports","needs","send_to","position","properties","type","parents","Array","isArray","i","length","nodeFrom","linkId","link","color","from","nodeId","portId","to","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","formatBytes","numBytes","parseFloat","toFixed","prop","name","logStream","taskStream","hubAPI","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","connect","logUpdate","taskUpdate","logString","host","port","log","startsWith","console","EventSource","onopen","onmessage","m","JSON","onerror","close","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","content","searchHub","category","q","sort","logOut","_store","getInitialStore","CHART_LEVELS","localStorage","getItem","yaml","shutdown","ready","images","hub","banner","flow","logs","connected","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","flowchart","all","logSources","occurences","current","previous","lastLog","logIndex","summaryCharts","processes","taskData","qps","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","Date","messages","bytes","selectedNode","modalParams","currentTab","registerActions","actionType","payload","Constants","toggleSidebar","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","reconnect","init","updateChartInterval","clearInterval","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","yamlSTRING","api","with","board","e","parsed","handleNewLog","handleNewTaskEvent","updateTaskInterval","setInterval","message","formattedTimestamp","created","toLocaleString","idx","push","source","process","includes","levelname","task","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","thread","index","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","level","updateSummaryCharts","user","indeces","numLogs","prevNum","customYAML","key","setItem","setTimeout","window","location","hash","String","showError","image","reload","target","theme","hideBanner","params","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","panel","getModal","getModalParams","getLogs","getLogSources","getSummaryCharts","getOccurencesByName","getTaskData","getActivePanel","path","substring","getConnectionStatus","activePanel","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","register","this","EventEmitter","PasteYAML","state","style","overlay","backgroundColor","border","bottom","maxHeight","left","padding","right","top","transform","width","maxWidth","overflow","listenForEnter","charCode","importYAML","yamlString","inputRef","dispatch","render","open","props","ariaHideApp","isOpen","contentLabel","className","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","onClick","Form","Group","Label","Control","placeholder","ref","as","rows","Button","Component","React","Notifications","Store","componentWillMount","on","getData","componentWillUnmount","removeListener","setState","toggleNotifications","pill","UserActions","visible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","DropdownMenu","small","Link","navbar","NavbarToggle","handleClick","bind","MainNavbar","layout","stickyTop","classes","classNames","fluid","NavbarSpacer","NavbarNav","SidebarMainNavbar","handleToggleSidebar","hideLogoText","href","lineHeight","SidebarNavItem","toggleDropdown","item","TOGGLE_SIDEBAR_DROPDOWN","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","subItem","SidebarNavItems","getSidebarItems","onChange","nav","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainFooter","contained","menuItems","copyright","defaultProps","DefaultLayout","children","noNavbar","noFooter","sm","WriteReview","submitReview","IconSidebarLayout","PageTitle","subtitle","attrs","xs","SidebarItem","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","stringify","FlowChartSidebar","availableProperties","componentWillReceiveProps","nextProps","chart","setInitialNode","newProperties","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","renderEditNode","FormControl","spellCheck","property","variant","deleteSelection","renderEditLink","nodeTo","renderInstructions","inPort","outPort","hasSelected","Card","ChartNode","getPropertiesString","propId","concat","getIcons","icons","isSpecial","isGateway","replicas","Badge","FlowTab","updateChart","callback","newChart","cloneDeep","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","copyChartAsYAML","output","formatAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","reduce","action","newChartTransformer","LogItem","msg","logName","levelInitial","toLowerCase","Row","Col","StreamContainer","_cache","CellMeasurerCache","defaultHeight","fixedWidth","_resultsCache","_mostRecentWidth","_mostRecentHeight","_resizeAllFlag","_startIndex","_scrollIndex","_scrollTop","_scrolledToBottom","logData","sources","searchQuery","prevQuery","results","showHelper","selectedSource","componentDidMount","_list","_resizeAll","backToBottom","scrollToBottom","scrollToLog","setSelectedSource","search","query","indexLogs","_resizeSearchResults","lunr","field","add","scrollToRow","scrollToBottomResults","_resultsList","updateSearchQuery","clearSearchResults","renderSearchResults","height","deferredMeasurementCache","rowHeight","rowCount","rowRenderer","renderSearchResultRow","renderLogRow","isScrolling","cache","columnIndex","rowIndex","wordBreak","Header","onKeyPress","Body","onScroll","_onScroll","scrollToAlignment","_onRowsRendered","cb","startIndex","scrollTop","scrollHeight","clientHeight","difference","clearAll","recomputeRowHeights","_colors","INFO","background","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","Chart","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","gridLines","ticks","display","yAxes","borderDash","zeroLineColor","drawBorder","suggestedMin","chartConfig","getLabels","datasets","chartData","borderWidth","borderColor","options","ChartElement","canvasRef","activePoints","getElementsAtEvent","amount","animation","update","createRef","SummaryChart","showLog","_index","ChartBase","getColor","names","mode","OccurenceChart","LogsView","Container","LogStream","SettingsCard","original","updates","updateSetting","setting","form","class","ElapsedCard","SingleGoal","percent","newData","hoverBorderColor","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","suggestedMax","line","tension","scaleLabel","percentage","increase","decrease","chartLabels","ProcessReport","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QPSCard","TaskView","ProgressCard","QueriesPerSecond","BarChartCard","Settings","StarRating","newUser","getStars","integer","remainder","rate","j","rating","userRated","round","ImageCard","totalStars","official","author","description","totalRatings","numReviews","Footer","getNumReviews","reviews","HubView","sortType","sortBy","setCategory","updateSearch","BuildHistory","buildHistory","build","formattedCreated","os","architecture","Readme","version","documentation","license","vendor","url","readme","CopyCommand","copy","repoTags","ReviewCard","review","newReview","getImageData","imageData","readmeHTML","userReviewed","ImageReviews","windowHash","windowParams","URLSearchParams","Login","code","testAuthentication","xhr","XMLHttpRequest","onload","status","send","icon","Errors","HelpCard","exact","DashboardLayout","component","IconSidebar","FlowView","NotFound","PackageView","LogIn","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","pathname","currentPage","nextPage","basename","routes","route","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.feb894c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jina-light.07aba578.svg\";","module.exports = {\n\tnodeOffset:{\n\t\tx:250,\n\t\ty:150\n\t}\n}","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS:\"SAVE_SETTINGS\",\n  RECONNECT:\"RECONNECT\",\n  POST_REVIEW:\"POST_REVIEW\",\n  POST_RATING:\"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB:\"SEARCH_HUB\",\n  SHOW_BANNER:\"SHOW_BANNER\"\n}","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();","const YAML = require('yaml');\nconst settings = require('./settings');\nconst propertyList = require('./data/properties.json');\n\nconst propertyTypes = {};\npropertyList.map(prop => propertyTypes[prop.name] = prop.type);\n\nexport function copyToClipboard(str) {\n\tconst temp = document.createElement('textarea');\n\ttemp.value = str;\n\tdocument.body.appendChild(temp);\n\ttemp.select();\n\tdocument.execCommand('copy');\n\tdocument.body.removeChild(temp);\n\treturn;\n}\nexport function parseYAML(yamlSTR) {\n\ttry {\n\t\tyamlSTR = yamlSTR.replace(\"!Flow\", \"\")\n\t\tconst data = YAML.parse(yamlSTR);\n\t\treturn { data };\n\t}\n\tcatch (error) {\n\t\talert('Error Parsing YAML:\\n' + error);\n\t\treturn { error };\n\t}\n}\nexport function formatForFlowchart(pods, canvas) {\n\tconst formatted = {\n\t\toffset: {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t},\n\t\tnodes: {},\n\t\tlinks: {},\n\t\tselected: {},\n\t\thovered: {},\n\t}\n\n\tlet nodes = {};\n\tlet links = {};\n\n\tlet prevNode = false;\n\n\tObject.keys(pods).map(id => {\n\t\tconst pod = pods[id] || {};\n\t\tlet node = {\n\t\t\tid,\n\t\t\tlabel: id,\n\t\t\tports: {},\n\t\t\tneeds: {},\n\t\t\tsend_to: {},\n\t\t\tposition: {},\n\t\t\tproperties: { ...pod }\n\t\t}\n\n\t\tif (node.properties.needs)\n\t\t\tdelete node.properties.needs\n\n\t\tnode.ports['inPort'] = { id: 'inPort', type: 'input', }\n\t\tnode.ports['outPort'] = { id: 'outPort', type: 'output', }\n\n\t\tif (prevNode && !pod.needs)\n\t\t\tpod.needs = prevNode;\n\n\t\tif (pod.needs) {\n\t\t\tlet parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n\t\t\tfor (let i = 0; i < parents.length; ++i) {\n\t\t\t\tlet nodeFrom = parents[i];\n\t\t\t\tnode.needs[nodeFrom] = true;\n\n\t\t\t\tlet linkId = `${nodeFrom}-to-${id}`;\n\t\t\t\tlet link = {\n\t\t\t\t\tcolor: 'red',\n\t\t\t\t\tid: linkId,\n\t\t\t\t\tfrom: { nodeId: nodeFrom, portId: 'outPort' },\n\t\t\t\t\tto: { nodeId: id, portId: 'inPort' }\n\t\t\t\t}\n\t\t\t\tlinks[linkId] = link;\n\t\t\t}\n\t\t}\n\n\t\tif (canvas && canvas[id]) {\n\t\t\tconst { x, y } = canvas[id];\n\t\t\tnode.position = { x: parseInt(x), y: parseInt(y) };\n\t\t}\n\n\t\tnodes[id] = node;\n\t\tprevNode = id;\n\t});\n\n\tconst depthPopulation = {}; //how many nodes at each depth\n\tconst offsetX = settings.nodeOffset.x;\n\tconst offsetY = settings.nodeOffset.y;\n\n\t//fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n\tObject.keys(nodes).map(id => {\n\t\tlet depth = getNodeDepth(nodes, id, 0);\n\t\tnodes[id].depth = depth;\n\n\t\tif (depthPopulation[depth] >= 0)\n\t\t\tdepthPopulation[depth]++;\n\t\telse\n\t\t\tdepthPopulation[depth] = 0;\n\n\t\tif (!nodes[id].position.x)\n\t\t\tnodes[id].position = { y: (depth * offsetY) + offsetY, x: (depthPopulation[depth] * offsetX) + offsetX };\n\t});\n\n\tformatted.nodes = nodes;\n\tformatted.links = links;\n\n\treturn formatted;\n}\n\nexport function formatAsYAML(chart) {\n\tconsole.log('formatAsYAML input: ', chart)\n\tlet output = {\n\t\twith: chart.with || {},\n\t\tpods: {}\n\t}\n\toutput.with.board = { canvas: {} };\n\tObject.keys(chart.nodes).map(id => {\n\t\tconst node = chart.nodes[id];\n\n\t\tif (!node.label)\n\t\t\treturn;\n\n\t\toutput.pods[node.label] = {};\n\n\t\tObject.keys(node.properties).map(propId => {\n\t\t\tlet type = propertyTypes[propId];\n\t\t\tif (type === 'bool') {\n\t\t\t\toutput.pods[node.label][propId] = node.properties[propId] == 'true';\n\t\t\t}\n\t\t\telse if (type === 'int')\n\t\t\t\toutput.pods[node.label][propId] = parseInt(node.properties[propId]);\n\t\t\telse\n\t\t\t\toutput.pods[node.label][propId] = node.properties[propId];\n\t\t})\n\t\toutput.with.board.canvas[node.label] = {\n\t\t\tx: node.position.x,\n\t\t\ty: node.position.y\n\t\t}\n\t});\n\tObject.keys(chart.links).map(id => {\n\t\tconst link = chart.links[id];\n\t\tconst nodeFrom = chart.nodes[link.from.nodeId].label;\n\t\tconst nodeTo = chart.nodes[link.to.nodeId].label;\n\t\tif (!nodeFrom || !nodeTo)\n\t\t\treturn;\n\t\tif (output.pods[nodeTo].needs) {\n\t\t\tif (!Array.isArray(output.pods[nodeTo].needs))\n\t\t\t\toutput.pods[nodeTo].needs = [output.pods[nodeTo].needs]\n\t\t\toutput.pods[nodeTo].needs.push(nodeFrom)\n\t\t}\n\t\telse\n\t\t\toutput.pods[nodeTo].needs = nodeFrom;\n\t});\n\treturn `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds){\n\tlet minute = 60;\n\tlet hour = 60 * 60;\n\n\tif (numSeconds < minute)\n\t\treturn `${numSeconds}s`\n\tif (numSeconds < hour)\n\t\treturn `${parseInt(numSeconds / minute)}m ${parseInt(numSeconds % minute)}s`\n\telse\n\t\treturn `${parseInt(numSeconds / (hour))}h ${parseInt((numSeconds % hour) / minute)}m ${parseInt(numSeconds % minute)}s`\n}\n\nexport function formatBytes(numBytes){\n\tif (numBytes < 1024)\n\t\treturn `${numBytes} Bytes`\n\tif (numBytes < 1024 ** 2)\n\t\treturn `${parseFloat(numBytes).toFixed(1)} KB`\n\tif (numBytes < 1024 ** 3)\n\t\treturn `${parseFloat(numBytes/(1024 ** 2)).toFixed(1)} MB`\n\treturn `${parseFloat(numBytes/(1024 ** 3)).toFixed(1)} GB`\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n\tlet parents = Object.keys(nodes[currentId].needs);\n\tlet longestDepth = 0;\n\n\tfor (let i = 0; i < parents.length; ++i) {\n\t\tlet parent = parents[i];\n\t\tlet depth;\n\t\tif (nodes[parent].depth)\n\t\t\tdepth = nodes[parent].depth + 1;\n\t\telse\n\t\t\tdepth = getNodeDepth(nodes, parent, 1);\n\t\tif (depth > longestDepth)\n\t\t\tlongestDepth = depth;\n\t}\n\n\treturn currentDepth + longestDepth;\n}","import axios from 'axios';\nimport { hubURL } from './config'\nlet logStream;\nlet taskStream;\n\nconst hubAPI = axios.create({\n\tbaseURL: hubURL,\n\twithCredentials: true,\n\ttimeout: 30000, // 30 secs\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t\tAccept: 'application/json',\n\t},\n});\n\nexport default {\n\tconnect: (settings, logUpdate,taskUpdate) => {\n\t\tconst logString = `${settings.host}:${settings.port}${settings.log.startsWith('/') ? settings.log : '/' + settings.log}`;\n\t\tconsole.log('logs connectionString: ', logString)\n\t\tlogStream = new EventSource(logString);\n\n\t\tlogStream.onopen = () => {\n\t\t\tlogUpdate({ type: 'connect', data: `Log connection established at ${logString}` })\n\t\t}\n\t\tlogStream.onmessage = (m) => {\n\t\t\tlogUpdate({ type: 'log', data: JSON.parse(m.data) });\n\t\t}\n\t\tlogStream.onerror = (data) => {\n\t\t\tlogUpdate({ type: 'error', data: `Could not get log data from ${logString}` });\n\t\t\tlogStream.close()\n\t\t}\n\n\t\tconst taskString = `${settings.host}:${settings.port}${settings.profile.startsWith('/') ? settings.profile : '/' + settings.profile}`;\n\t\tconsole.log('task connectionString:',taskString);\n\t\ttaskStream = new EventSource(taskString);\n\t\t\n\t\ttaskStream.onopen = () => {\n\t\t\ttaskUpdate({ type: 'connect', data: `Task connection established at ${taskString}` })\n\t\t}\n\t\ttaskStream.onmessage = (m) => {\n\t\t\ttaskUpdate({ type: 'event', data: JSON.parse(m.data) });\n\t\t}\n\t\ttaskStream.onerror = (data) => {\n\t\t\ttaskUpdate({ type: 'error', data: `Could not get profile data from ${taskString}` });\n\t\t\ttaskStream.close()\n\t\t}\n\n\t},\n\tgetProfile: async () => {\n\t\tconst result = await hubAPI.get('profile');\n\t\treturn result.data;\n\t},\n\tgetYAML: async (connectionString) => {\n\t\tconsole.log('YAML connectionString: ', connectionString)\n\t\tconst result = await axios.get(connectionString);\n\t\treturn result.data;\n\t},\n\tgetImages: async () => {\n\t\tconsole.log('get images...')\n\t\tconst result = await hubAPI.get('images');\n\t\treturn result.data;\n\t},\n\tgetImage: async (id) => {\n\t\tconsole.log('get image', id);\n\t\tconst result = await hubAPI.get(`/images/${id}`);\n\t\treturn result.data;\n\t},\n\tpostRating: async (imageId, stars) => {\n\t\tconsole.log('post rating', imageId, stars);\n\t\tconst result = await hubAPI.post(`/images/${imageId}/ratings`, { stars })\n\t\treturn result.data;\n\t},\n\tpostReview: async (imageId, content) => {\n\t\tconsole.log('post review', imageId, content);\n\t\tconst result = await hubAPI.post(`/images/${imageId}/reviews`, { content })\n\t\treturn result.data;\n\t},\n\tsearchHub: async (category, q, sort) => {\n\t\tconsole.log('search hub', category, q, sort);\n\t\tconst result = await hubAPI.get(`/images?category=${category}&q=${q}&sort=${sort}`)\n\t\treturn result.data;\n\t},\n\tlogOut: async () => {\n\t\tconst result = await hubAPI.post('/auth/logout')\n\t\treturn result.data;\n\t}\n}","import { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport propertyList from '../data/properties.json';\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nconst HIDE_BANNER_TIMEOUT = 5000;\n\nlet _store = getInitialStore();\n\nconst NUM_CHART_ELEMENTS = 60;\nconst CHART_UPDATE_INTERVAL = 1000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = ['INFO', 'SUCCESS', 'WARNING', 'ERROR', 'CRITICAL', 'DEBUG']\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem('preferences-host') || 'http://localhost',\n      port: localStorage.getItem('preferences-port') || 5000,\n      log: localStorage.getItem('preferences-log') || '/stream/log',\n      profile: localStorage.getItem('preferences-profile') || '/stream/profile',\n      yaml: localStorage.getItem('preferences-yaml') || '/data/yaml',\n      shutdown: localStorage.getItem('preferences-shutdown') || '/action/shutdown',\n      ready: localStorage.getItem('preferences-ready') || '/status/ready',\n    },\n    images: {},\n    hub: [],\n    banner: {\n      flow: false,\n      logs: false,\n    },\n    connected: {\n      logs: false,\n      flow: false\n    },\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected: {},\n      hovered: {},\n      nodes: {},\n      links: {},\n      offset: { x: 0, y: 0 },\n    },\n    logs: {\n      all: [],\n    },\n    logSources: {},\n    occurences: {\n      current: {},\n      previous: {},\n      lastLog: [],\n    },\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: (new Array(30)).fill(0)\n      },\n      elapsed: {\n        task_name: 'No Current Task',\n        seconds: '0s',\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: 'units',\n        history: (new Array(30)).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: null,\n    currentTab: 'logStream',\n  }\n}\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init()\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      default:\n    }\n  }\n\n  init = async () => {\n    if (this.updateChartInterval)\n      clearInterval(this.updateChartInterval)\n    _store = getInitialStore();\n    console.log('store settings: ', _store.settings);\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    _store.loading = false;\n    this.emit('update-ui');\n    this.emit('update-settings');\n  }\n\n  initFlowChart = async (yamlSTRING) => {\n    let flow;\n    const { settings } = _store;\n    const connectionString = `${settings.host}:${settings.port}${settings.yaml.startsWith('/') ? settings.yaml : '/' + settings.yaml}`;\n\n    if (yamlSTRING) {\n      flow = parseYAML(yamlSTRING);\n      _store.connected.flow = false;\n    }\n    else {\n      try {\n        let str = await api.getYAML(connectionString);\n        flow = parseYAML(str);\n        _store.connected.flow = true;\n        this.showBanner('flow', `Getting YAML from ${connectionString}`, 'success')\n      }\n      catch (e) {\n        _store.connected.flow = false;\n        this.showBanner('flow', `Could not get YAML flow from ${connectionString}`, 'error')\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    }\n    catch (e) {\n      console.log('could not find canvas');\n      canvas = {};\n    }\n    console.log('pods: ', flow.data.pods)\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    console.log('parsed: ', parsed);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit('update-ui');\n    this.emit('update-flowchart')\n  }\n\n  initLogStream = () => {\n    api.connect(_store.settings, this.handleNewLog, this.handleNewTaskEvent)\n    this.updateTaskInterval = setInterval(() => this.emit('update-task'), TASK_UPDATE_INTERVAL)\n  }\n\n  handleNewLog = (message) => {\n    const { type, data } = message;\n\n    if (type === 'connect') {\n      _store.connected.logs = true;\n      return this.showBanner('logs', data, 'success')\n    }\n\n    if (type === 'error') {\n      _store.connected.logs = false;\n      return this.showBanner('logs', data, 'error')\n    }\n\n    const log = data;\n\n    log.formattedTimestamp = (new Date(log.created * 1000)).toLocaleString()\n    log.idx = _store.logs.all.length;\n    _store.logs.all.push(log);\n\n    const source = log.name;\n\n    _store.processes[log.process] = log.name;\n\n    if (_store.logs[source])\n      _store.logs[source].push(log);\n    else\n      _store.logs[source] = [log];\n\n    _store.logSources[source] = true;\n\n    if (CHART_LEVELS.includes(log.levelname)) {\n      _store.occurences.current[log.levelname]++;\n    }\n    // console.log('occurences: ',_store.occurences)\n    this.emit('update-logs');\n  }\n\n  handleNewTaskEvent = (message) => {\n    const { type, data } = message;\n\n    if (type === 'connect') {\n      _store.connected.task = true;\n      return this.showBanner('task', data, 'success')\n    }\n\n    if (type === 'error') {\n      _store.connected.task = false;\n      return this.showBanner('task', data, 'error')\n    }\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n      thread\n    } = event;\n\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages.map((obj) => obj.process).indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process]\n      }\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process]\n      }\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      }\n      else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages.sort((a, b) => (b.sent + b.received) - (a.sent + a.received)).slice(0,20)\n      _store.taskData.bytes = _store.taskData.bytes.sort((a, b) => (b.sent + b.received) - (a.sent + a.received)).slice(0,20)\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  }\n\n\n  initCharts = () => {\n    CHART_LEVELS.map(level => {\n      _store.occurences.current[level] = 0;\n      _store.occurences.previous[level] = 0;\n      _store.summaryCharts[level] = (new Array(NUM_CHART_ELEMENTS)).fill(0);\n    });\n    _store.occurences.lastLog = (new Array(NUM_CHART_ELEMENTS)).fill({});\n    console.log('initial Occurences: ', _store.occurences);\n    console.log('initial summary charts: ', _store.summaryCharts);\n    this.updateChartInterval = setInterval(this.updateSummaryCharts, CHART_UPDATE_INTERVAL);\n  }\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n      _store.connected.hub = true;\n    }\n    catch (e) {\n      _store.connected.hub = false\n    }\n    this.emit('update-hub');\n  }\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    console.log('user', user);\n    _store.user = user;\n    this.emit('update-user');\n  }\n\n  updateSummaryCharts = () => {\n    const { current, previous, indeces } = _store.occurences;\n    CHART_LEVELS.map(level => {\n      const numLogs = current[level];\n      const prevNum = previous[level];\n      _store.summaryCharts[level].push(numLogs - prevNum);\n      _store.summaryCharts[level].shift();\n      _store.occurences.previous[level] = numLogs;\n    });\n    _store.occurences.lastLog.push(_store.logs.all.length - 1);\n    _store.occurences.lastLog.shift();\n    // console.log('summaryCharts:', _store.summaryCharts);\n    this.emit('update-summary-chart');\n  }\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit('update-ui');\n  }\n\n  showLogAtIndex = (index) => {\n    console.log('index: ', index);\n    let logIndex = _store.occurences.lastLog[index];\n    console.log('logIndex: ', logIndex);\n    if (!logIndex)\n      return;\n    _store.logIndex = _store.occurences.lastLog[index];\n    this.emit('show-log');\n  }\n\n  importCustomYAML = (customYAML) => {\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit('update-flowchart')\n  }\n\n  saveSettings = (settings) => {\n    Object.keys(settings).map(key => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  }\n\n  postRating = async ({ imageId, stars }) => {\n    console.log('posting rating: ', imageId, stars);\n    if (!_store.user)\n      return window.location.hash = '#/login'\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    }\n    catch (e) {\n      if (String(e).includes('409'))\n        e = 'Already Rated';\n      return this.showError('hub', e);\n    }\n    if (result.error)\n      this.showError('hub', result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner('hub', 'Rating successfully posted', 'success')\n    }\n    this.emit('update-hub');\n  }\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal()\n      return window.location.hash = '#/login'\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    }\n    catch (e) {\n      if (String(e).includes('409'))\n        e = 'Already Reviewed';\n      return this.showError('hub', e);\n    }\n    if (result.error)\n      this.showError('hub', result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner('hub', 'Review successfully posted', 'success')\n    }\n    this.emit('update-hub');\n  }\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload()\n  }\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    console.log('found', images.length, 'images')\n    _store.hub = images;\n    this.emit('update-hub')\n  }\n\n  showBanner = (target, message, theme) => {\n    _store.banner[target] = { message: String(message), theme };\n    setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit('update-ui');\n  }\n\n  hideBanner = () => {\n    _store.banner = { logs: false, flow: false };\n    this.emit('update-ui');\n  }\n\n  showError = (target, message) => {\n    this.showBanner(target, message, 'error');\n  }\n\n  showModal = (data) => {\n    const { modal, params } = data;\n    _store.modal = modal;\n    _store.modalParams = params;\n    this.emit('update-ui');\n  }\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = '';\n    this.emit('update-ui');\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  }\n\n  getUser = () => {\n    return _store.user;\n  }\n\n  getHubImages = () => {\n    return _store.hub;\n  }\n\n  getHubImage = async imageId => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  }\n\n  getSettings = () => {\n    return _store.settings;\n  }\n\n  getBanner = (panel = 'logs') => {\n    return _store.banner[panel];\n  }\n\n  getModal = () => {\n    return _store.modal;\n  }\n\n  getModalParams = () => {\n    return _store.modalParams;\n  }\n\n  getLogs = () => {\n    return _store.logs;\n  }\n\n  getLogSources = () => {\n    return _store.logSources;\n  }\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  }\n\n  getOccurencesByName = () => {\n    let occurences = {};\n    Object.keys(_store.logs).map(name => {\n      if (name === 'all')\n        return;\n      else\n        occurences[name] = _store.logs[name].length;\n    })\n    return occurences;\n  }\n\n  getTaskData = () => {\n    return _store.taskData;\n  }\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith('flow'))\n      return 'flow';\n    if (path.startsWith('logs'))\n      return 'logs';\n    if (path.startsWith('hub') || path.startsWith('package'))\n      return 'hub';\n    if (path.startsWith('task'))\n      return 'task';\n    return 'neither'\n  }\n\n  getConnectionStatus = () => {\n    const activePanel = this.getActivePanel();\n    const status = _store.connected[activePanel];\n    return status;\n  }\n\n  isLoading = () => {\n    return _store.loading;\n  }\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  }\n\n  getAvailableProperties = () => {\n    return propertyList;\n  }\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  }\n}\n\nexport default new Store();","export default function () {\n  return [{\n    title: 'Navigation',\n    items: [{\n      title: 'Home',\n      to: '/home',\n      htmlBefore: '<i class=\"material-icons\">home</i>',\n      htmlAfter: '',\n      matches:['home']\n    },\n    {\n      title: 'Log Stream',\n      to: '/logs',\n      htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n      htmlAfter: '',\n      matches:['logs']\n    },\n    {\n      title: 'Task',\n      to: '/task',\n      htmlBefore: '<i class=\"material-icons\">assessment</i>',\n      htmlAfter: '',\n      matches:['task']\n    },\n    {\n      title: 'Flow Design',\n      to: '/flow',\n      htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n      htmlAfter: '',\n      matches:['flow']\n    },\n    {\n      title: 'Hub',\n      to: '/hub',\n      htmlBefore: '<i class=\"material-icons\">store</i>',\n      htmlAfter: '',\n      matches:['hub','package']\n    },\n    {\n      title: 'Settings',\n      to: '/settings',\n      htmlBefore: '<i class=\"material-icons\">settings</i>',\n      htmlAfter: '',\n      matches:['settings']\n    },\n    {\n      title: 'Help',\n      to: '/help',\n      htmlBefore: '<i class=\"material-icons\">help</i>',\n      htmlAfter: '',\n      matches:['help']\n    }\n    ],\n  }];\n}\n","import React, { Component } from 'react';\nimport { Button,Form } from 'react-bootstrap';\nimport ReactModal from 'react-modal';\nimport { Dispatcher, Constants,Store } from \"../flux\";\n\nclass PasteYAML extends Component {\n\tstate={}\n  style = {\n    overlay: {\n      backgroundColor: 'rgba(38, 50, 56, 0.5)'\n    },\n    content: {\n      border: 'none',\n      bottom: 'auto',\n      maxHeight: '80%',  // set height\n      left: '50%',\n      padding: '2rem',\n      position: 'fixed',\n      right: 'auto',\n      top: '50%', // start from center\n      transform: 'translate(-50%,-50%)', // adjust top \"up\" based on height\n      width: '90%',\n      maxWidth: '800px',\n\t\t\toverflow: 'hidden',\n    }\n  };\n\n  listenForEnter= (key) => {\n    if (key.charCode==13) {\n      this.importYAML()\n    }\n\t}\n\t\n\timportYAML = () =>{\n\t\tconst yamlString = this.inputRef.value;\n\t\tDispatcher.dispatch({\n\t\t\tactionType:Constants.IMPORT_CUSTOM_YAML,\n\t\t\tpayload: yamlString\n\t\t})\n  }\n  \n  close = () =>{\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL\n    })\n  }\n\n  render = () => {\n    const { open } = this.props;\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={open}\n        contentLabel=\"Action Modal\"\n        className='modal-content tiny-modal px-4 pt-3 pb-4'\n        shouldCloseOnOverlayClick={true}\n        style={this.style}\n        onRequestClose={this.close}\n        closeTimeoutMS={100}\n      >\n        <div className=\"modal-header p-0\">\n          <h4><b>Import YAML</b></h4>\n          <h4><span className=\"float-right close-icon\"><i className=\"material-icons\" onClick={this.close}>close</i></span></h4>\n        </div>\n        <div className=\"modal-body px-0 pb-0\">\n          <Form.Group>\n            <Form.Label>Custom YAML:</Form.Label>\n            <Form.Control placeholder=\"Paste Here\" ref={ref=>this.inputRef = ref} as=\"textarea\" rows=\"10\" />\n          </Form.Group>\n        </div>\n        <Button className=\"btn-primary\" onClick={this.importYAML}>Continue</Button>\n      </ReactModal>\n    )\n  }\n}\n\nexport default PasteYAML;\n","import React from \"react\";\nimport { Container, Alert,Col,Row,} from \"react-bootstrap\";\n\n// import Navbar from '../components/Layout/Navbar';\n// import Footer from '../components/Layout/Footer';\nimport PasteYAML from '../modals/PasteYAML';\n\n\nimport { Store, Constants } from '../flux';\n\nclass DefaultLayout extends React.Component {\n  state = {\n    modal: Store.getModal(),\n    loading: Store.isLoading(),\n  }\n\n  componentWillMount = () => {\n    Store.on('update-ui',this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-ui',this.getData);\n  }\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    this.setState({ modal,loading });\n  }\n\n  render = () => {\n    const { banner, loading, modal } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid>\n        <Row>\n          {/* <Sidebar /> */}\n          <Col\n            className=\"main-content p-0\"\n            sm=\"12\"\n            tag=\"main\"\n          >\n            {/* <Navbar /> */}\n            {\n              banner &&\n              <Alert theme={banner.variant} className=\"alert-bar py-1\">{banner.text}</Alert>\n            }\n            {\n              loading ?\n                <Container fluid className=\"main-content-container px-4\">\n                  <div className=\"error\">\n                    <div className=\"loader\"></div>\n                  </div>\n                </Container>\n                :\n                children\n            }\n            {/* <Footer /> */}\n          </Col>\n        </Row>\n        <PasteYAML open={modal==='import'}/>\n      </Container>\n    )\n  }\n}\n\nexport default DefaultLayout;\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\">\n\n  </div>\n);\n","import React from \"react\";\nimport { NavItem, NavLink, Badge, Collapse, DropdownItem } from \"shards-react\";\nimport { Store, Constants,Dispatcher } from '../../../../flux';\n\nexport default class Notifications extends React.Component {\n  state = {\n    connected: Store.getConnectionStatus()\n  }\n\n  componentWillMount = () => {\n    Store.on('update-ui',this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-ui',this.getData);\n  }\n\n  getData = () =>{\n    const connected = Store.getConnectionStatus();\n    this.setState({connected});\n  }\n\n  reconnect = () =>{\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT\n    })\n  }\n\n  render() {\n    const { connected } = this.state;\n    return (\n      <NavItem className=\"border-right dropdown notifications\" onClick={this.reconnect}>\n        <NavLink\n          className=\"nav-link-icon text-center\"\n          onClick={this.toggleNotifications}\n        >\n          <div className=\"nav-link-icon__wrapper\">\n            <i className=\"material-icons\">language</i>\n            {\n              connected ?\n                <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n                  <i className=\"material-icons\">done</i>\n                </Badge>\n                :\n                <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n                  <i className=\"material-icons\">close</i>\n                </Badge>\n            }\n\n          </div>\n        </NavLink>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button\n} from \"shards-react\";\nimport { Store, Dispatcher, Constants } from '../../../../flux';\n\nexport default class UserActions extends React.Component {\n  state = {\n    visible: false,\n    user: Store.getUser()\n  }\n  componentWillMount = () => {\n    Store.on('update-user', this.getData)\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-user', this.getData)\n  }\n\n  getData = () => {\n    const user = Store.getUser();\n    this.setState({ user });\n  }\n\n  toggleUserActions = () => {\n    this.setState({\n      visible: !this.state.visible\n    });\n  }\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT\n    })\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        {\n          user ?\n            <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n              <img\n                className=\"user-avatar rounded-circle mr-2\"\n                src={user._json.avatar_url}\n                alt=\"User Avatar\"\n              />{\" \"}\n              <span className=\"d-none d-md-inline-block\">{user.username}</span>\n            </DropdownToggle>\n            :\n            <Link to=\"/login\" className=\"nav-link px-3\">\n              <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n            </Link>\n        }\n\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem tag={Link} to=\"/\" className=\"text-danger\" onClick={this.logOut}>\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nexport default () => (\n  <Nav navbar className=\"border-left flex-row\">\n    <Notifications />\n    <UserActions />\n  </Nav>\n);\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav cursor-pointer\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <span onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </span>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Container, Navbar, NavbarBrand } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const isHeaderNav = false;\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container fluid={!isHeaderNav || null} className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          {isHeaderNav && (\n            <NavbarBrand href=\"#\" style={{ lineHeight: \"25px\" }}>\n              <div className=\"d-table m-auto\">\n                <img\n                  id=\"main-logo\"\n                  className=\"d-inline-block align-top mr-1 ml-3\"\n                  style={{ maxWidth: \"25px\" }}\n                  src={require('../../../images/jina-light.svg')}\n                  alt=\"Jina.ai\"\n                />\n                <span className=\"d-none d-md-inline ml-1\">\n                  Dashboard\n                </span>\n              </div>\n            </NavbarBrand>\n          )}\n          <NavbarSpacer />\n          <NavbarNav />\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top\"\n                style={{ maxWidth: \"50px\" }}\n                src={require('../../../images/jina-light.svg')}\n                alt=\"Jina Dashboard\"\n              />\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse\n} from \"shards-react\";\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarNavItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n  }\n\n  toggleDropdown(item) {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR_DROPDOWN,\n      payload: item\n    });\n  }\n\n  render() {\n    const { item } = this.props;\n    const hasSubItems = item.items && item.items.length;\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    let active = false\n    item.matches.map(match => {\n      if (path.startsWith(match))\n        active = true\n    })\n\n\n    return (\n      <NavItem style={{ position: \"relative\" }}>\n        <NavLink\n          className={hasSubItems && \"dropdown-toggle\"}\n          tag={RouteNavLink}\n          to={item.to}\n          active={active}\n          onClick={() => this.toggleDropdown(item)}\n        >\n          {item.htmlBefore && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n            />\n          )}\n          {item.title && <span>{item.title}</span>}\n          {item.htmlAfter && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n            />\n          )}\n        </NavLink>\n        {hasSubItems && (\n          <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n            {item.items.map((subItem, idx) => (\n              <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n                {subItem.title}\n              </DropdownItem>\n            ))}\n          </Collapse>\n        )}\n      </NavItem>\n    );\n  }\n}\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { Store } from \"../../../flux\";\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      navItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.on('update-ui', this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener('update-ui', this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        {items.map((nav, idx) => (\n          <div key={idx}>\n            <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n            {typeof nav.items !== \"undefined\" && nav.items.length && (\n              <Nav className=\"nav--no-borders flex-column\">\n                {nav.items.map((item, idx) => (\n                  <SidebarNavItem key={idx} item={item} />\n                ))}\n              </Nav>\n            )}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: false,\n      sidebarNavItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.on('update-ui',this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener('update-ui',this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        {/* <SidebarSearch /> */}\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav, NavItem, NavLink } from \"shards-react\";\nimport { Link } from \"react-router-dom\";\n\nconst MainFooter = ({ contained, menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\"\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\"\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\"\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\"\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\"\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\"\n    }\n  ]\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DefaultLayout;\n","import React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport ReactModal from 'react-modal';\nimport { Dispatcher, Constants, Store } from \"../flux\";\n\nclass WriteReview extends Component {\n  state = {}\n  style = {\n    overlay: {\n      backgroundColor: 'rgba(38, 50, 56, 0.5)'\n    },\n    content: {\n      border: 'none',\n      bottom: 'auto',\n      maxHeight: '80%',  // set height\n      left: '50%',\n      padding: '2rem',\n      position: 'fixed',\n      right: 'auto',\n      top: '50%', // start from center\n      transform: 'translate(-50%,-50%)', // adjust top \"up\" based on height\n      width: '90%',\n      maxWidth: '800px',\n      overflow: 'hidden',\n    }\n  };\n\n  listenForEnter = (key) => {\n    if (key.charCode == 13) {\n      this.importYAML()\n    }\n  }\n\n  submitReview = () => {\n    const params = Store.getModalParams();\n    const {imageId} = params;\n    const content = this.inputRef.value;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId }\n    })\n  }\n\n  close = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL\n    })\n  }\n\n  render = () => {\n    const { open } = this.props;\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={open}\n        contentLabel=\"Action Modal\"\n        className='modal-content tiny-modal px-4 pt-3 pb-4'\n        shouldCloseOnOverlayClick={true}\n        style={this.style}\n        onRequestClose={this.close}\n        closeTimeoutMS={100}\n      >\n        <div className=\"modal-header p-0\">\n          <h4><b>Write a Review</b></h4>\n          <h4><span className=\"float-right close-icon\"><i className=\"material-icons\" onClick={this.close}>close</i></span></h4>\n        </div>\n        <div className=\"modal-body px-0 pb-0\">\n          <Form.Group>\n            <Form.Control placeholder=\"Tell the world about your experience\" ref={ref => this.inputRef = ref} as=\"textarea\" rows=\"10\" />\n          </Form.Group>\n        </div>\n        <Button className=\"btn-primary\" onClick={this.submitReview}>Submit</Button>\n      </ReactModal>\n    )\n  }\n}\n\nexport default WriteReview;\n","import React from \"react\";\nimport { Container, Row, Col, Alert } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nimport PasteYAML from '../modals/PasteYAML';\nimport WriteReview from '../modals/WriteReview';\n\nimport { Store } from '../flux';\n\nclass IconSidebarLayout extends React.Component {\n  state = {\n    modal: Store.getModal(),\n    loading: Store.isLoading(),\n  }\n\n  componentWillMount = () => {\n    Store.on('update-ui', this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-ui', this.getData);\n  }\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    this.setState({ modal, loading });\n  }\n\n  render = () => {\n    const { modal, loading } = this.state;\n    const { noNavbar, children, noFooter } = this.props;\n    return (<Container fluid className=\"icon-sidebar-nav\">\n      <Row>\n        <MainSidebar hideLogoText />\n        <Col className=\"main-content col\" tag=\"main\">\n          {!noNavbar && <MainNavbar />}\n          {children}\n          {!noFooter && <MainFooter />}\n        </Col>\n      </Row>\n      <PasteYAML open={modal === 'import'} />\n      <WriteReview open={modal === 'review'} />\n    </Container>)\n  }\n}\n\nIconSidebarLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nexport default PageTitle;\n","\nimport * as React from 'react'\nimport { REACT_FLOW_CHART } from '@mrblenny/react-flow-chart'\n\nclass SidebarItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n  render = () => {\n    const { label, type, ports, properties } = this.props;\n    return (\n      <div\n        ref={this.ref}\n        className=\"draggable-item\"\n        draggable={true}\n        onDragStart={(event) => {\n          event.dataTransfer.setData(REACT_FLOW_CHART, JSON.stringify({ label,type, ports, properties, }))\n        }}\n      >\n        {type}\n        \n      </div>\n    )\n  }\n}\n\nexport default SidebarItem;","import React from \"react\";\nimport SidebarItem from './SidebarItem';\nimport { Button, FormControl,Card} from 'react-bootstrap';\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  state = {\n    availableProperties: Store.getAvailableProperties(),\n    node: {},\n  }\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id)\n      return;\n\n    if (!id)\n      return;\n\n    if (type === 'node' && id != this.state.node.id) {\n      const node = nodes[id];\n      this.setInitialNode(node);\n    }\n  }\n\n  setInitialNode = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).map(key => {\n      properties[key] = node.properties[key];\n    });\n\n    this.setState({ node: { label, id: node.id, properties, newProperties } });\n  }\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    },this.saveChanges);\n  }\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    },this.saveChanges);\n  }\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    },this.saveChanges);\n  }\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  }\n\n  renderEditNode = () => {\n    const { availableProperties, node } = this.state;\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\"><b>Pod Name</b></p>\n          <FormControl spellCheck={false} value={node.label || \"\"} onChange={(e) => this.updateLabel(e.target.value)} className=\"pod-name-input\" />\n        </div>\n        <p className=\"mb-1 px-2\"><b>Properties</b></p>\n        <div className=\"property-table flex-fill mx-2\">\n          {\n            Object.keys(node.properties).map(prop => {\n              const value = node.properties[prop];\n              return (\n                <div key={prop} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{prop}</p>\n                  <FormControl spellCheck={false} value={value || \"\"} onChange={(e) => this.updateExistingValue(prop, e.target.value)} className=\"property-value-input\" />\n                </div>\n\n              )\n            })\n          }\n          {\n            availableProperties.map(property => {\n              if (typeof node.properties[property.name] == 'undefined')\n                return (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl spellCheck={false} placeholder={property.type} value={node.newProperties[property.name] || ''} onChange={(e) => this.updateNewValue(property.name, e.target.value)} className=\"property-value-input\"></FormControl>\n                  </div>\n                )\n            })\n          }\n        </div>\n        <div className=\"p-2\">\n          <Button variant=\"danger\" className=\"w-100\" onClick={this.props.deleteSelection}>Delete Pod</Button>\n        </div>\n      </div>\n    )\n  }\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId].label;\n    const nodeTo = nodes[link.to.nodeId].label;\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"flex-fill\">\n          <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\"><b>Type</b></p>\n            <h5>Connection</h5>\n            <p className=\"mb-1\"><b>From</b></p>\n            <h5>{nodeFrom}</h5>\n            <p className=\"mb-1\"><b>To</b></p>\n            <h5>{nodeTo}</h5>\n          </div>\n        </div>\n        <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={this.props.deleteSelection}>Delete Connection</Button>\n        </div>\n      </div>\n    )\n  }\n\n  renderInstructions = () => {\n    return (\n      <div className=\"sidebar-instructions text-muted\">\n        <h4>Select a pod to edit properties</h4>\n        <p>or</p>\n        <h4 className=\"mb-4\">Drag a new pod:</h4>\n        <SidebarItem\n          type=\"New Pod\"\n          ports={{\n            inPort: {\n              id: 'inPort',\n              type: 'input',\n            },\n            outPort: {\n              id: 'outPort',\n              type: 'output',\n            },\n          }}\n          label=\"tests\"\n          properties={{}}\n        />\n\n      </div>\n    )\n  }\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {\n          hasSelected ?\n            selected.type === 'link' ?\n              this.renderEditLink(links[selected.id], nodes)\n              :\n              this.renderEditNode(nodes[selected.id])\n            :\n            this.renderInstructions()\n        }\n      </Card>\n    )\n  }\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nclass ChartNode extends React.Component {\n  getPropertiesString = () => {\n    const properties = this.props.node.properties || {};\n    let str = ''\n    Object.keys(properties).map(propId => {\n      str = str.concat(`pod-${propId}-${properties[propId]} `);\n    })\n    return str;\n  }\n  getIcons = () => {\n    const { properties } = this.props.node;\n    let icons = [];\n    Object.keys(properties).map(prop => {\n      if (prop == 'image' && properties[prop])\n        icons.push(<span className=\"fab fa-docker mx-1\" />)\n      if (prop == 'num_part' && properties[prop])\n        icons.push(<span className=\"fas fa-code-branch mx-1\" />)\n      if (prop == 'read_only' && properties[prop])\n        icons.push(<span className=\"fas fa-lock mx-1\" />)\n      if (prop == 'host' && properties[prop])\n        icons.push(<span className=\"fas fa-network-wired mx-1\" />)\n      if (prop == 'separated_workspace' && properties[prop])\n        icons.push(<span className=\"fas fa-columns mx-1\" />)\n      if (prop == 'py_modules' && properties[prop])\n        icons.push(<span className=\"fab fa-python mx-1\" />)\n    })\n    return icons;\n  }\n  render = () => {\n    const { label, type, properties } = this.props.node;\n    const propSTR = this.getPropertiesString();\n    const icons = this.getIcons();\n    const isSpecial = Object.keys(properties).length>0;\n    const isGateway = label==='gateway';\n    return (\n      <div className={`chart-node ${isSpecial?'special':''} ${properties.replicas ? 'stacked' : ''} ${isGateway ? 'gateway' : ''}`}>\n        <div className=\"p-2\">\n          <p className=\"m-1\"><b>{label || <span className=\"text-warning\">Unnamed Pod</span>}</b><Badge variant=\"primary\" className=\"ml-2 mt-1\">{properties.replicas}</Badge></p>\n        </div>\n        {\n          icons.length > 0 &&\n          <div className=\"node-icons\">\n            {icons}\n          </div>\n        }\n      </div>\n    )\n  }\n}\n\nexport default ChartNode;\n","import React from \"react\";\nimport {Badge} from \"react-bootstrap\";\n\nclass ChartNode extends React.Component {\n  render = () => {\n    return (\n      <div className=\"node-port\">\n        <i className=\"fa fa-chevron-down\"></i>\n      </div>\n    )\n  }\n}\n\nexport default ChartNode;\n","import React from \"react\";\nimport { cloneDeep } from 'lodash';\nimport { FlowChart } from '@mrblenny/react-flow-chart';\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, ButtonGroup, Button, Card, Col, NavLink } from 'shards-react';\nimport { Dispatcher, Constants, Store } from '../flux';\nimport PageTitle from '../components/Common/PageTitle';\n\nimport Sidebar from '../components/FlowChart/Sidebar';\nimport CustomNode from '../components/FlowChart/ChartNode';\nimport CustomPort from '../components/FlowChart/NodePort';\nimport { formatAsYAML, copyToClipboard } from '../helpers';\n\nclass FlowTab extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart();\n    const banner = Store.getBanner('flow');\n    this.state = { chart,banner };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n  }\n\n  componentWillMount = () => {\n    Store.on('update-flowchart', this.getData);\n    Store.on('update-ui',this.getBanner);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-flowchart', this.getData);\n    Store.removeListener('update-ui',this.getBanner);\n  }\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  }\n\n  getBanner = () =>{\n    const banner = Store.getBanner('flow');\n    this.setState({banner});\n  }\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    console.log('newChart: ', newChart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties\n    }\n\n    Object.keys(props).map(id => {\n      if (props[id] == \"\" || typeof props[id] == 'undefined') {\n        delete props[id]\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  }\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({})\n  }\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  }\n\n  updateChart = (chart) => {\n    this.setState({ chart })\n  }\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId\n    })\n  }\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert('Chart copied to clipboard as YAML')\n  }\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId, chart }) => {\n    if (fromPortId != 'outPort' || toPortId != 'inPort')\n      return false;\n    if (fromNodeId == toNodeId)\n      return false;\n    return true;\n  }\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: 'import' }\n    })\n  }\n\n\n  render = () => {\n    const { chart,banner } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {\n          banner &&\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n\n        }\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle title=\"Flow Design\" subtitle=\"Local Network\" className=\"text-sm-left mb-3\" />\n            <Col className=\"col d-flex align-items-right\">\n              <div className=\"d-none d-md-block flex-fill\" />\n              <ButtonGroup className=\"d-inline-flex mb-3 mb-sm-0 mx-auto py-0\">\n                <Button theme=\"white\" to=\"/analytics\" onClick={this.showImportModal}>Import YAML</Button>\n                <Button theme=\"white\" to=\"/ecommerce\" onClick={this.copyChartAsYAML}>Copy YAML</Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <div className=\"chart-container\">\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    validateLink: this.validateLink\n                  }} />\n              </div>\n            </Card>\n            <Sidebar chart={chart} cancelChanges={this.cancelChanges} deleteSelection={this.deleteSelection} updateNode={this.updateNode} />\n          </div >\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default FlowTab;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nclass LogItem extends React.Component {\n\trender = () => {\n\t\tconst { data } = this.props;\n\t\tconst { name, msg, levelname, process, formattedTimestamp, idx } = data;\n\t\tlet logName = String(name)\n\t\tlogName = logName.length > 20 ? logName.substring(0, 20) : logName;\n\t\tlet levelInitial = String(levelname)[0];\n\t\treturn (\n\t\t\t<div className={`log log-${String(levelname).toLowerCase()} px-4 border-bottom py-1`}>\n\t\t\t\t<Row >\n\t\t\t\t\t<Col lg=\"2\" md=\"3\" className=\"log-prefix text-muted px-0 d-flex flex-row\">\n\t\t\t\t\t\t<div className=\"text-bold mr-2\">{idx}</div>\n\t\t\t\t\t\t<div className=\"ml-auto\">{formattedTimestamp}</div>\n\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg=\"3\" md=\"3\" className=\"log-prefix px-0 text-left text-md-right text-bold\">\n\t\t\t\t\t\t{logName}@{process}[{levelInitial}]:\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col className=\"px-0\">\n\t\t\t\t\t\t{msg}\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default LogItem;\n","import React from \"react\";\nimport { Card, FormControl, Row, Col } from 'react-bootstrap';\nimport LogItem from './LogItem';\nimport lunr from 'lunr';\nimport { Store } from '../../flux';\n\nimport List from 'react-virtualized/dist/commonjs/List';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport CellMeasurer, {\n\tCellMeasurerCache,\n} from 'react-virtualized/dist/commonjs/CellMeasurer';\n\nclass StreamContainer extends React.Component {\n\t_cache = new CellMeasurerCache({ defaultHeight: 10, fixedWidth: true });\n\t_resultsCache = new CellMeasurerCache({ defaultHeight: 10, fixedWidth: true });\n\n\t_mostRecentWidth = 0;\n\t_mostRecentHeight = 0;\n\t_resizeAllFlag = false;\n\t_startIndex = 0;\n\t_scrollIndex = 0;\n\t_scrollTop = 0;\n\t_scrolledToBottom = true;\n\n\tstate = {\n\t\tlogData: Store.getLogs(),\n\t\tlogs: Store.getLogs().all,\n\t\tsources: Store.getLogSources(),\n\t\tsearchQuery: \"\",\n\t\tprevQuery: \"\",\n\t\tresults: [],\n\t\tshowHelper: false,\n\t\tselectedSource: 'all',\n\t}\n\n\tcomponentWillMount = () => {\n\t\tStore.on('update-logs', this.getData);\n\t\tStore.on('show-log', this.getIndexedLog);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-logs', this.getData);\n\t\tStore.removeListener('show-log', this.getIndexedLog);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tsetTimeout(() => {\n\t\t\tif (this._list) {\n\t\t\t\tthis._resizeAll();\n\t\t\t\tthis.backToBottom();\n\t\t\t}\n\t\t}, 1)\n\t}\n\n\tgetData = () => {\n\t\tconst logData = Store.getLogs();\n\t\tconst sources = Store.getLogSources();\n\t\tconst logs = logData[this.state.selectedSource];\n\t\tthis.setState({ logs, sources, logData });\n\t\tif (this._scrolledToBottom && this._list)\n\t\t\tthis.scrollToBottom();\n\t}\n\n\tgetIndexedLog = () => {\n\t\tconst index = Store.getIndexedLog();\n\t\tconst selectedSource = 'all';\n\t\tconst logs = this.state.logData[selectedSource];\n\t\tthis.setState({ selectedSource, logs });\n\t\tconsole.log('scrolling to index: ', index);\n\t\tthis.scrollToLog(index);\n\t}\n\n\tsetSelectedSource = (selectedSource) => {\n\t\tconst { logData } = this.state;\n\t\tconst logs = logData[selectedSource];\n\t\tthis.setState({ logs, selectedSource }, () => {\n\t\t\tthis._resizeAll();\n\t\t\tthis.backToBottom();\n\t\t})\n\t}\n\n\tsearch = () => {\n\t\tconst query = this.state.searchQuery;\n\t\tconsole.log('search query: ', query)\n\t\tif (!query)\n\t\t\treturn this.setState({ results: false },this._resizeAll)\n\t\tthis.indexLogs();\n\t\tlet results = this.index.search(`${query}*`)\n\t\tthis.setState({ results }, this._resizeSearchResults);\n\t\tconsole.log('search results: ', results)\n\t}\n\n\tlistenForEnter = (key) => {\n\t\tif (key.charCode == 13) {\n\t\t\tthis.search()\n\t\t}\n\t}\n\n\tindexLogs = () => {\n\t\tconst { logs } = this.state;\n\t\tconsole.log('indexing', logs.length, 'logs for search')\n\t\tthis.index = lunr(function () {\n\t\t\tthis.field('filename');\n\t\t\tthis.field('funcName');\n\t\t\tthis.field('msg');\n\t\t\tthis.field('name');\n\t\t\tthis.field('module');\n\t\t\tthis.field('pathname');\n\n\t\t\tlogs.map((log, idx) => {\n\t\t\t\tlog.id = parseInt(idx);\n\t\t\t\tthis.add(log);\n\t\t\t});\n\t\t})\n\t}\n\n\tscrollToLog = (index) => {\n\t\tthis._list.scrollToRow(index);\n\t}\n\n\tscrollToBottom = () => {\n\t\tthis._list.scrollToRow(this.state.logs.length);\n\t\tthis._scrolledToBottom = true;\n\t}\n\n\tscrollToBottomResults = () => {\n\t\tthis._resultsList.scrollToRow(this.state.results.length);\n\t\tthis._scrolledToBottom = true;\n\t}\n\n\tbackToBottom = () => {\n\t\tthis.scrollToBottom();\n\t\tsetTimeout(this.scrollToBottom, 1);\n\t}\n\n\tupdateSearchQuery = (e) => {\n\t\tthis.setState({ searchQuery: e.target.value }, this.search);\n\t}\n\n\tclearSearchResults = () => {\n\t\tthis.setState({\n\t\t\tresults: false,\n\t\t\tsearchQuery: \"\"\n\t\t})\n\t}\n\n\trenderSearchResults = () => {\n\t\tconst { results } = this.state;\n\t\treturn (\n\t\t\t<AutoSizer>\n\t\t\t\t{({ height, width }) => {\n\t\t\t\t\tif (this._mostRecentWidth !== width) {\n\t\t\t\t\t\tthis._mostRecentWidth = width;\n\t\t\t\t\t\tsetTimeout(this._resizeSearchResults, 0);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._mostRecentHeight !== height) {\n\t\t\t\t\t\tthis._mostRecentHeight = height;\n\t\t\t\t\t\tsetTimeout(this._resizeSearchResults, 0);\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<List\n\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\tref={ref => this._resultsList = ref}\n\t\t\t\t\t\t\tdeferredMeasurementCache={this._resultsCache}\n\t\t\t\t\t\t\trowHeight={this._resultsCache.rowHeight}\n\t\t\t\t\t\t\trowCount={results.length}\n\t\t\t\t\t\t\trowRenderer={this.renderSearchResultRow}\n\t\t\t\t\t\t/>)\n\t\t\t\t}\n\t\t\t\t}\n\t\t\t</AutoSizer>\n\t\t)\n\t}\n\n\trenderLogRow = ({ index, isScrolling, key, parent, style }) => {\n\t\tconst log = this.state.logs[index];\n\t\treturn (\n\t\t\t<CellMeasurer\n\t\t\t\tcache={this._cache}\n\t\t\t\tcolumnIndex={0}\n\t\t\t\tkey={key}\n\t\t\t\tparent={parent}\n\t\t\t\trowIndex={index}\n\t\t\t>\n\t\t\t\t<div style={{\n\t\t\t\t\t...style,\n\t\t\t\t\twordBreak: 'break-word',\n\t\t\t\t}}>\n\t\t\t\t\t<LogItem index={index} data={log} />\n\t\t\t\t</div>\n\t\t\t</CellMeasurer>\n\t\t)\n\t};\n\n\trenderSearchResultRow = ({ index, isScrolling, key, parent, style }) => {\n\t\tconst result = this.state.results[index];\n\t\tconst log = this.state.logs[result.ref];\n\t\treturn (\n\t\t\t<CellMeasurer\n\t\t\t\tcache={this._resultsCache}\n\t\t\t\tcolumnIndex={0}\n\t\t\t\tkey={key}\n\t\t\t\tparent={parent}\n\t\t\t\trowIndex={index}\n\t\t\t>\n\t\t\t\t<div style={{\n\t\t\t\t\t...style,\n\t\t\t\t\twordBreak: 'break-word',\n\t\t\t\t}}>\n\t\t\t\t\t<LogItem data={log} />\n\t\t\t\t</div>\n\t\t\t</CellMeasurer>\n\t\t)\n\t};\n\n\trender = () => {\n\t\tconst { results, searchQuery, logs, showHelper, sources } = this.state;\n\t\treturn (\n\t\t\t<Card className=\"mb-4\">\n\t\t\t\t<Card.Header className=\"p-3\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"4\" xs=\"6\">\n\t\t\t\t\t\t\t<FormControl as=\"select\" onChange={(e) => this.setSelectedSource(e.target.value)}>\n\t\t\t\t\t\t\t\t<option value=\"all\">All Logs</option>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tObject.keys(sources).map(source =>\n\t\t\t\t\t\t\t\t\t\t<option key={source} value={source}>{source}</option>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"4\" className=\"d-none d-md-inline-block\" />\n\t\t\t\t\t\t<Col md=\"4\" xs=\"6\">\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tplaceholder=\"search logs...\"\n\t\t\t\t\t\t\t\tonKeyPress={this.listenForEnter}\n\t\t\t\t\t\t\t\tonChange={this.updateSearchQuery}\n\t\t\t\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Body className=\"log-stream-container p-1 border-top\" id=\"log-stream-container\">\n\t\t\t\t\t{\n\t\t\t\t\t\tsearchQuery && results ?\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div onClick={this.backToBottom} className={`back-to-bottom ${showHelper && 'active'}`}><i className=\"material-icons\">arrow_downward</i> Back to Bottom</div>\n\t\t\t\t\t}\n\t\t\t\t\t{\n\t\t\t\t\t\tsearchQuery && results ?\n\t\t\t\t\t\t\tthis.renderSearchResults()\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<AutoSizer>\n\t\t\t\t\t\t\t\t{({ height, width }) => {\n\t\t\t\t\t\t\t\t\tif (this._mostRecentWidth !== width) {\n\t\t\t\t\t\t\t\t\t\tthis._mostRecentWidth = width;\n\t\t\t\t\t\t\t\t\t\tsetTimeout(this._resizeAll, 0);\n\t\t\t\t\t\t\t\t\t\tsetTimeout(this.backToBottom, 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (this._mostRecentHeight !== height) {\n\t\t\t\t\t\t\t\t\t\tthis._mostRecentHeight = height;\n\t\t\t\t\t\t\t\t\t\tsetTimeout(this._resizeAll, 0);\n\t\t\t\t\t\t\t\t\t\tsetTimeout(this.backToBottom, 1);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\t\t\t\twidth={width}\n\t\t\t\t\t\t\t\t\t\t\theight={height}\n\t\t\t\t\t\t\t\t\t\t\tref={ref => this._list = ref}\n\t\t\t\t\t\t\t\t\t\t\tdeferredMeasurementCache={this._cache}\n\t\t\t\t\t\t\t\t\t\t\trowHeight={this._cache.rowHeight}\n\t\t\t\t\t\t\t\t\t\t\trowCount={logs.length}\n\t\t\t\t\t\t\t\t\t\t\trowRenderer={this.renderLogRow}\n\t\t\t\t\t\t\t\t\t\t\tonScroll={this._onScroll}\n\t\t\t\t\t\t\t\t\t\t\tscrollToAlignment=\"center\"\n\t\t\t\t\t\t\t\t\t\t/>)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</AutoSizer>\n\t\t\t\t\t}\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t)\n\t}\n\n\t_onRowsRendered = (data, cb) => {\n\t\tconst { startIndex } = data;\n\t\tthis._startIndex = startIndex;\n\t}\n\n\t_onScroll = (data) => {\n\t\tconst { scrollTop, scrollHeight, clientHeight } = data;\n\t\tthis._scrollTop = scrollTop;\n\t\tlet difference = scrollHeight - (scrollTop + clientHeight);\n\n\t\tif (difference < 10)\n\t\t\tthis._scrolledToBottom = true;\n\t\telse {\n\t\t\tthis._scrolledToBottom = false;\n\t\t}\n\n\t\tif (difference > 75 && !this.state.showHelper)\n\t\t\tthis.setState({ showHelper: true })\n\t\telse if (difference <= 75 && this.state.showHelper)\n\t\t\tthis.setState({ showHelper: false });\n\t}\n\n\t_resizeAll = () => {\n\t\tthis._resizeAllFlag = false;\n\t\tthis._cache.clearAll();\n\t\tif (this._list) {\n\t\t\tthis._list.recomputeRowHeights();\n\t\t}\n\t};\n\n\t_resizeSearchResults = () => {\n\t\tthis._resizeAllFlag = false;\n\t\tthis._resultsCache.clearAll();\n\t\tif (this._resultsList) {\n\t\t\tthis._resultsList.recomputeRowHeights();\n\t\t}\n\t};\n}\n\nexport default StreamContainer;\n","import React from \"react\";\nimport ChartElement from 'chart.js';\n\nconst _colors = {\n  INFO: {\n    border: '#009999',\n    background: 'rgba(0, 153, 153, 0.9)'\n  },\n  SUCCESS: {\n    border: '#32c8cd',\n    background: 'rgba(50, 200, 205, 0.9)'\n  },\n  WARNING: {\n    border: '#ffcc66',\n    background: 'rgba(255, 204, 102, 0.9)'\n  },\n  ERROR: {\n    border: '#ff6666',\n    background: 'rgba(255, 102, 102, 0.9)'\n  },\n  CRITICAL: {\n    border: '#ff4540',\n    background: 'rgba(255, 70, 64, 0.9)'\n  },\n  DEBUG: {\n    border: '#6E7278',\n    background: 'rgba(110, 114, 120, 0.9)'\n  },\n}\n\nclass Chart extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  }\n\n  renderChart = () => {\n    const { data } = this.props;\n    const chartOptions = {\n      events: ['click'],\n      onClick:this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n\t\t\t\tposition: \"bottom\",\n\t\t\t\tlabels: {\n\t\t\t\t\tpadding: 10,\n\t\t\t\t\tboxWidth: 20\n\t\t\t\t}\n\t\t\t},\n      tooltips: {\n        enabled: false,\n        custom: false\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius:10,\n        }\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: false,\n            color: 'red',\n            ticks: {\n              display: false,\n            }\n          }\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              borderDash: [2.5, 5],\n              // zeroLineBorderDash: [5,5],\n              zeroLineColor: '#6c757d',\n              drawBorder: false,\n              color: '#6c757d'\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n            }\n          }\n        ]\n      }\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: Object.keys(data).map(level => {\n          const chartData = data[level];\n          return {\n            label: level,\n            fill: \"start\",\n            borderWidth: 1.5,\n            borderColor: _colors[level].border,\n            backgroundColor: _colors[level].background,\n            data: chartData\n          }\n        })\n      },\n      options: chartOptions,\n      ...this.props.chartConfig\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  }\n\n  onClick = (e) =>{\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  }\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  }\n\n  updateChart = () => {\n    const { data } = this.props;\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: Object.keys(data).map(level => {\n        const chartData = data[level];\n        return {\n          label: level,\n          fill: \"start\",\n          borderWidth: 1.5,\n          borderColor: _colors[level].border,\n          backgroundColor: _colors[level].background,\n          data: chartData\n        }\n      })\n    }\n    this.chart.data = chartData;\n    this.chart.options.animation = false\n    this.chart.update();\n  }\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Chart;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from './ChartBase';\n\nclass SummaryChart extends React.Component {\n\tstate = {\n\t\tchartData: Store.getSummaryCharts(),\n\t}\n\tcomponentWillMount = () => {\n\t\tStore.on('update-summary-chart', this.getData);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-summary-chart', this.getData);\n\t}\n\n\tshowLog = (activePoints) => {\n\t\tlet index = activePoints[0] && activePoints[0]._index;\n\t\tif (index && typeof index !== 'undefined');\n\t\tDispatcher.dispatch({\n\t\t\tactionType: Constants.SHOW_LOG_AT_INDEX,\n\t\t\tpayload: index\n\t\t})\n\t}\n\n\tgetData = () => {\n\t\tconst chartData = Store.getSummaryCharts();\n\t\tthis.setState({ chartData });\n\t}\n\n\trender = () => {\n\t\tconst { chartData } = this.state;\n\t\treturn (\n\t\t\t<Card className=\"h-100\">\n\t\t\t\t<Card.Body className=\"d-none d-md-block pb-2\">\n\t\t\t\t\t<ChartBase data={chartData} height={10} width={70} onClick={this.showLog} />\n\t\t\t\t</Card.Body>\n\t\t\t\t<Card.Body className=\"d-md-none pb-2\">\n\t\t\t\t\t<ChartBase data={chartData} height={20} width={50} onClick={this.showLog} />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default SummaryChart;\n","import React from \"react\";\nimport ChartElement from 'chart.js';\n\nconst _colors = [\n\t{\n\t\tborder: '#fff',\n\t\tbackground: 'rgba(0, 153, 153, 0.85)'\n\t},\n\t{\n\t\tborder: '#fff',\n\t\tbackground: 'rgba(0, 153, 153, 0.75)'\n\t},\n\t{\n\t\tborder: '#fff',\n\t\tbackground: 'rgba(0, 153, 153, 0.65)'\n\t},\n\t{\n\t\tborder: '#fff',\n\t\tbackground: 'rgba(0, 153, 153, 0.55)'\n\t},\n\t{\n\t\tborder: '#fff',\n\t\tbackground: 'rgba(0, 153, 153, 0.45)'\n\t},\n\t{\n\t\tborder: '#fff',\n\t\tbackground: 'rgba(0, 153, 153, 0.35)'\n\t},\n\t{\n\t\tborder: '#fff',\n\t\tbackground: 'rgba(0, 153, 153, 0.25)'\n\t},\n\t{\n\t\tborder: '#fff',\n\t\tbackground: 'rgba(0, 153, 153, 0.15)'\n\t},\n\t{\n\t\tborder: '#fff',\n\t\tbackground: 'rgba(0, 153, 153, 0.05)'\n\t},\n]\n\nclass Chart extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.canvasRef = React.createRef();\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.renderChart();\n\t}\n\n\tgetColor = (index) => {\n\t\tlet color = false;\n\t\twhile (!color) {\n\t\t\tif (_colors[index])\n\t\t\t\tcolor = _colors[index];\n\t\t\telse\n\t\t\t\tindex -= (_colors.length);\n\t\t}\n\t\treturn color;\n\t}\n\n\trenderChart = () => {\n\t\tconst { data } = this.props;\n\t\tconst names = Object.keys(data);\n\t\tconst chartOptions = {\n\t\t\tlegend: {\n\t\t\t\tdisplay: false,\n\t\t\t\tposition: \"bottom\",\n\t\t\t\tlabels: {\n\t\t\t\t\tpadding: 25,\n\t\t\t\t\tboxWidth: 20\n\t\t\t\t}\n\t\t\t},\n\t\t\ttooltips: {\n\t\t\t\tcustom: false,\n\t\t\t\tmode: \"index\",\n\t\t\t\tposition: \"nearest\"\n\t\t\t},\n\t\t};\n\n\t\tconst chartConfig = {\n\t\t\ttype: \"pie\",\n\t\t\tlabels: names,\n\t\t\tdata: {\n\t\t\t\tdatasets: [{\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdata: names.map(name => data[name]),\n\t\t\t\t\tborderColor: names.map((name,idx)=>this.getColor(idx).border),\n\t\t\t\t\tbackgroundColor: names.map((name,idx)=>this.getColor(idx).background),\n\t\t\t\t}]\n\t\t\t},\n\t\t\toptions: chartOptions,\n\t\t\t...this.props.chartConfig\n\t\t};\n\n\t\tthis.chart = new ChartElement(this.canvasRef.current, chartConfig);\n\t}\n\n\tupdateChart = () => {\n\t\tconst { data } = this.props;\n\t\tconst names = Object.keys(data);\n\t\tconst chartData = {\n\t\t\tlabels: names,\n\t\t\tdatasets: [{\n\t\t\t\tborderWidth: 1,\n\t\t\t\tdata: names.map(name => data[name]),\n\t\t\t\tborderColor: names.map((name,idx)=>this.getColor(idx).border),\n\t\t\t\tbackgroundColor: names.map((name,idx)=>this.getColor(idx).background),\n\t\t\t}]\n\t\t}\n\t\tthis.chart.data = chartData;\n\t\tthis.chart.options.animation = false\n\t\tthis.chart.update();\n\t}\n\n\trender = () => {\n\t\tif (this.canvasRef.current && this.chart) this.updateChart();\n\t\tconst { width, height } = this.props;\n\t\treturn (\n\t\t\t<div className=\"graph-container\">\n\t\t\t\t<canvas\n\t\t\t\t\theight={height || 50}\n\t\t\t\t\twidth={width || 50}\n\t\t\t\t\tref={this.canvasRef}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Chart;\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from './PieChart';\n\nclass OccurenceChart extends React.Component {\n\tstate = {\n\t\tchartData: Store.getOccurencesByName(),\n\t}\n\tcomponentWillMount = () => {\n\t\tStore.on('update-summary-chart', this.getData);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-summary-chart', this.getData);\n\t}\n\n\tgetData = () => {\n\t\tconst chartData = Store.getOccurencesByName();\n\t\tthis.setState({ chartData });\n\t}\n\n\trender = () => {\n\t\tconst { chartData } = this.state;\n\t\treturn (\n\t\t\t<Card className=\"h-100\">\n\t\t\t\t<Card.Body>\n\t\t\t\t\t<ChartBase data={chartData} />\n\t\t\t\t</Card.Body>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default OccurenceChart;\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Alert } from 'shards-react'\nimport { Dispatcher, Constants, Store } from '../flux';\nimport LogStream from '../components/LogStream/LogStream';\nimport SummaryChart from '../components/LogStream/SummaryChart';\nimport PageTitle from '../components/Common/PageTitle';\nimport OccurenceChart from \"../components/LogStream/OccurenceChart\";\n\nclass LogsView extends React.Component {\n  state={\n    banner: Store.getBanner('logs')\n  }\n  componentWillMount = () => {\n    Store.on('update-ui', this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener('update-ui', this.getData);\n  }\n  getData = () =>{\n    const banner = Store.getBanner('logs');\n    this.setState({banner});\n  }\n  render = () => {\n    const {banner} = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {\n          banner &&\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n\n        }\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle title=\"Log Stream\" subtitle=\"Local Network\" className=\"text-sm-left mb-3\" />\n          </Row>\n          <Row>\n            <Col md=\"10\" className=\"mb-4\"><SummaryChart /></Col>\n            <Col md=\"2\" className=\"mb-4\"><OccurenceChart /></Col>\n          </Row>\n          <LogStream />\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default LogsView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n\tCard,\n\tCardHeader,\n\tCardBody,\n\tRow,\n\tCol,\n\tForm,\n\tFormInput,\n\tButton\n} from \"shards-react\";\n\nimport { Store, Dispatcher, Constants } from '../../flux';\n\nclass SettingsCard extends React.Component {\n\tstate = {\n\t\toriginal: Store.getSettings(),\n\t\tupdates: {}\n\t}\n\n\tcomponentWillMount = () => {\n\t\tStore.on('update-settings', this.getData);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-settings', this.getData);\n\t}\n\n\tgetData = () => {\n\t\tconst original = Store.getSettings();\n\t\tthis.setState({ original, updates: {} });\n\t}\n\n\tupdateSetting = (setting, value) => {\n\t\tthis.setState((prevState) => {\n\t\t\tlet { updates } = prevState;\n\t\t\tupdates[setting] = value;\n\t\t\treturn { updates }\n\t\t})\n\t\tconsole.log('updates: ', this.state.updates)\n\t}\n\n\tsaveChanges = () => {\n\t\tconst { original, updates } = this.state;\n\n\t\tconst settings = { ...original, ...updates }\n\n\t\tDispatcher.dispatch({\n\t\t\tactionType: Constants.SAVE_SETTINGS,\n\t\t\tpayload: settings\n\t\t})\n\t}\n\n\trender = () => {\n\t\tconst { original, updates } = this.state;\n\t\treturn (<Card small className=\"mb-4\">\n\t\t\t<CardHeader className=\"border-bottom\">\n\t\t\t\t<h6 className=\"m-0\">Connection Preferences</h6>\n\t\t\t</CardHeader>\n\t\t\t<CardBody>\n\t\t\t\t<Form>\n\t\t\t\t\t<Row form>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Host</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"0.0.0.0\"\n\t\t\t\t\t\t\t\tvalue={'host' in updates ? updates.host : original.host}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('host', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Port</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"5000\"\n\t\t\t\t\t\t\t\tvalue={'port' in updates ? updates.port : original.port}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('port', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<strong class=\"text-muted d-block mb-3\">Endpoints</strong>\n\t\t\t\t\t<Row form>\n\t\t\t\t\t\t{/* Email */}\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Log</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/stream/log\"\n\t\t\t\t\t\t\t\tvalue={'log' in updates ? updates.log : original.log}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('log', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t{/* Password */}\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Profile</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/stream/profile\"\n\t\t\t\t\t\t\t\tvalue={'profile' in updates ? updates.profile : original.profile}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('profile', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>YAML</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/data/yaml\"\n\t\t\t\t\t\t\t\tvalue={'yaml' in updates ? updates.yaml : original.yaml}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('yaml', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Shutdown</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/action/shutdown\"\n\t\t\t\t\t\t\t\tvalue={'shutdown' in updates ? updates.shutdown : original.shutdown}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('shutdown', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t<Col md=\"6\" className=\"form-group\">\n\t\t\t\t\t\t\t<label>Ready</label>\n\t\t\t\t\t\t\t<FormInput\n\t\t\t\t\t\t\t\tplaceholder=\"/status/isready\"\n\t\t\t\t\t\t\t\tvalue={'ready' in updates ? updates.ready : original.ready}\n\t\t\t\t\t\t\t\tonChange={(e) => this.updateSetting('ready', e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Form>\n\t\t\t\t<Button theme=\"primary\" onClick={this.saveChanges}>Save Settings</Button>\n\t\t\t</CardBody>\n\t\t</Card>)\n\t}\n}\n\n\nexport default SettingsCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Col } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ElapsedCard extends React.Component {\n  render() {\n    const { elapsed } = this.props;\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0\"><b>{elapsed.task_name}</b></h6>\n          <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n          <h6 className=\"stats-small__label text-uppercase text-center\">Elapsed Time</h6>\n      </Card>\n    );\n  }\n}\n\nexport default ElapsedCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Col } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SingleGoal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\n              '#32c8cd',\n              '#E9ECEF'\n            ]\n          }\n        ],\n        labels: [\"Label 1\", \"Label 2\"]\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false\n      }\n    });\n  }\n\n  updateChart = () =>{\n    const {progress} = this.props;\n    const percent = (progress.num_bars/progress.bar_len||1)*100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100-percent],\n          backgroundColor: [\n            '#32c8cd',\n            '#E9ECEF'\n          ]\n        }\n      ],\n      labels: [\"Label 1\", \"Label 2\"]\n    }\n    this.chart.data = newData;\n    this.chart.update();\n  }\n\n  render() {\n    const { progress } = this.props;\n    if(this.chart)\n      this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\"><b>Progress</b></h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">Request</h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default SingleGoal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Col } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + (difference * .1),\n                suggestedMin: minValue - (difference * .1)\n              }\n            }\n          ]\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: (new Array(history.length)).fill(null)\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history\n              }\n            ]\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history\n          }\n        ]\n      }\n    }\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax = maxValue + (difference * .1);\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin = minValue - (difference * .1);\n    this.chart.data = newChartData;\n    this.chart.update();\n  }\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart)\n      this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\"><b>Speed</b></h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">{speed.unit}/Second</h6>\n        </div>\n        <canvas\n          height=\"100\"\n          ref={this.canvasRef}\n          className={`stats-small-1`}\n        />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.propTypes = {\n  /**\n   * The goal object.\n   */\n  goal: PropTypes.object\n};\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8]\n    }\n  ]\n}\n\nexport default SpeedCard;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col, ButtonGroup, Button } from \"shards-react\";\nimport { formatBytes } from '../../helpers';\nimport Chart from \"chart.js\";\n\nclass ProcessReport extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.legendRef = React.createRef();\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: 'messages',\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate != prevProps.lastUpdate)\n      this.updateChart();\n  }\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        // legend: false,\n        // Uncomment the next line in order to disable the animations.\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${tab === 'bytes' ? formatBytes(tooltipItem.value):tooltipItem.value}`\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab]\n              let text = '\\nProcess ID: ' + chartData[tooltipItem.index].process\n              return text;\n            }\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false\n            }\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel\n              }\n            }\n          ]\n        }\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map(d => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map(d => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map(d => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5\n          }\n        ]\n      }\n    });\n  }\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map(d => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map(d => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map(d => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5\n        }\n      ]\n    }\n    this.chart.update()\n  }\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === 'bytes')\n      return formatBytes(label)\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  }\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  }\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button theme=\"white\" active={tab === 'messages'} onClick={() => this.setTab('messages')}>Messages</Button>\n                <Button theme=\"white\" active={tab === 'bytes'} onClick={() => this.setTab('bytes')}>Bytes</Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          {/* <div ref={this.legendRef} /> */}\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default ProcessReport;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Col } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QPSCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          enabled: false,\n          custom: false\n        },\n        elements: {\n          point: {\n            radius: 0\n          },\n          line: {\n            tension: 0.33\n          }\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false\n              }\n            }\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + (difference * .1),\n                suggestedMin: minValue - (difference * .1)\n              }\n            }\n          ]\n        }\n      },\n      ...this.props.chartOptions\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: (new Array(history.length)).fill(null)\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history\n              }\n            ]\n          }\n        },\n        options: chartOptions\n      },\n      ...this.props.chartConfig\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history\n          }\n        ]\n      }\n    }\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax = maxValue + (difference * .1);\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin = minValue - (difference * .1);\n    this.chart.data = newChartData;\n    this.chart.update();\n  }\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart)\n      this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\"><b>QPS</b></h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">Queries/Second</h6>\n        </div>\n        <canvas\n          height=\"100\"\n          ref={this.canvasRef}\n          className={`stats-small-1`}\n        />\n      </Card>\n    );\n  }\n}\n\nQPSCard.propTypes = {\n  /**\n   * The goal object.\n   */\n  goal: PropTypes.object\n};\n\nQPSCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8]\n    }\n  ]\n}\n\nexport default QPSCard;\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Dispatcher, Constants, Store } from '../flux';\nimport PageTitle from '../components/Common/PageTitle';\nimport SettingsCard from '../components/Settings/Settings';\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from '../components/Task/QueriesPerSecond';\n\n\nclass TaskView extends React.Component {\n  state = {\n    taskData: Store.getTaskData(),\n    banner: Store.getBanner('task'),\n  }\n  componentWillMount = () => {\n    Store.on('update-task', this.getData);\n    Store.on('update-ui', this.getBanner);\n  }\n  componentWillUnmount = () => {\n    Store.removeListener('update-task', this.getData);\n    Store.removeListener('update-ui', this.getBanner);\n  }\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  }\n  getBanner = () => {\n    const banner = Store.getBanner('task');\n    this.setState({ banner });\n  }\n  render = () => {\n    const { taskData,banner} = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {\n          banner &&\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n\n        }\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle title=\"Task\" subtitle=\"Local Network\" className=\"text-sm-left mb-3\" />\n          </Row>\n          <Row >\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard messages={taskData.messages} bytes={taskData.bytes} lastUpdate={taskData.lastUpdateChart} />\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default TaskView;\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Dispatcher, Constants, Store } from '../flux';\nimport PageTitle from '../components/Common/PageTitle';\nimport SettingsCard from '../components/Settings/Settings';\n\nclass LogsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle title=\"Settings\" subtitle=\"Local Network\" className=\"text-sm-left mb-3\" />\n        </Row>\n\t\t\t\t<SettingsCard/>\n      </Container>\n    )\n  }\n}\n\nexport default LogsView;\n","import React from \"react\";\nimport { Row, Col, Collapse, Form, InputGroup, Button, Carousel, Card } from \"react-bootstrap\"\nimport { copyToClipboard } from \"../../helpers\";\nimport { Dispatcher, Constants } from \"../../flux\";\n\nclass StarRating extends React.Component {\n\tstate = {\n\t\tisOpen: false,\n\t\tnewUser: ''\n\t}\n\n\tgetStars = (amount) => {\n\t\tlet stars = [];\n\t\tlet integer = parseInt(amount);\n\t\tlet remainder = amount - integer;\n\t\tlet i;\n\t\tfor (i = 0; i < integer; ++i) {\n\t\t\tlet index = i;\n\t\t\tstars.push(<i key={i} className=\"material-icons\" onClick={()=>this.rate(index)}>star</i>);\n\t\t}\n\t\tif (remainder>=.8){\n\t\t\tlet index = i;\n\t\t\tstars.push(<i key={i++} className=\"material-icons\" onClick={()=>this.rate(index)}>star</i>);\n\t\t}\n\t\telse if(remainder>=.25){\n\t\t\tlet index = i;\n\t\t\tstars.push(<i key={i++} className=\"material-icons\" onClick={()=>this.rate(index)}>star_half</i>);\n\t\t}\n\n\t\tfor(let j=stars.length;j<5;++j){\n\t\t\tlet index = i;\n\t\t\tstars.push(<i key={i++} className=\"material-icons\" onClick={()=>this.rate(index)}>star_outline</i>);\n\t\t}\n\t\t\treturn stars;\n\t}\n\n\trate=(index)=>{\n\t\tif(this.props.rate)\n\t\t\tthis.props.rate(index+1);\n\t}\n\n\trender = () => {\n\t\tconst { rating,userRated } = this.props;\n\t\tconst formatted = parseFloat(Math.round(rating*10 ||0)/10).toFixed(1);\n\t\tconst stars = this.getStars(formatted);\n\t\treturn (\n\t\t\t<span className={`app-rating ${rating?'existing':''} ${userRated?'userRated':''} text-muted`}>\n\t\t\t\t<span className=\"text-faded\">{userRated?'You Rated: ':''}</span><span className=\"rating-num\">{rating?formatted:''}</span>{stars}\n\t\t\t</span>\n\t\t)\n\t}\n}\n\nexport default StarRating;\n","import React from \"react\";\nimport { Row, Col, Collapse, Form, InputGroup, Button, Carousel, Card } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\";\nimport StarRating from './StarRating';\nimport { Dispatcher, Constants } from \"../../flux\";\n\nclass ImageCard extends React.Component {\n\tstate = {\n\t\tisOpen: false,\n\t\tnewUser: ''\n\t}\n\n\trender = () => {\n\t\tconst { image } = this.props;\n\t\tlet { name, official, author, description, totalStars, totalRatings, numReviews } = image;\n\t\tlet rating;\n\t\tif (image.totalStars && image.totalRatings) {\n\t\t\trating = totalStars / totalRatings\n\t\t}\n\t\treturn (\n\t\t\t<Link className=\"unstyled-link\" to={`/package?id=${image.id}`}>\n\t\t\t\t<Card className=\"clickable mb-4 h-100\">\n\t\t\t\t\t<Card.Body className=\"pb-0 mb-0 pt-3\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col xs=\"12\" className=\"px-0\">\n\t\t\t\t\t\t\t\t<div className=\"app-title\">\n\t\t\t\t\t\t\t\t\t{image.name}\n\t\t\t\t\t\t\t\t\t{image.official && <span title=\"Official Package\" className=\"float-right\"><i className=\"ml-2 material-icons verified-icon\">verified_user</i></span>}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"app-subtitle\">{image.author}</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n\t\t\t\t\t\t\t\t<div className=\"description-container\">\n\t\t\t\t\t\t\t\t\t<div className=\"description-overlay\" />\n\t\t\t\t\t\t\t\t\t<div className=\"app-description\">{image.description}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Card.Body>\n\t\t\t\t\t<Card.Footer className=\"pt-0 px-3 pb-3\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.getNumReviews(numReviews)\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trating &&\n\t\t\t\t\t\t\t<StarRating rating={rating} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</Card.Footer>\n\t\t\t\t</Card>\n\t\t\t</Link>\n\t\t)\n\t}\n\n\tgetNumReviews(reviews) {\n\t\tif (!reviews)\n\t\t\treturn <span className=\"text-muted\">no reviews</span>\n\n\t\tif (reviews > 1)\n\t\t\treturn <span>{reviews} reviews</span>\n\n\t\treturn <span>{reviews} review</span>\n\t}\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button, FormControl } from 'react-bootstrap';\nimport { Alert, FormInput, InputGroup, InputGroupAddon, InputGroupText, FormSelect } from 'shards-react'\nimport { Dispatcher, Constants, Store } from '../flux';\nimport PageTitle from '../components/Common/PageTitle';\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n\tstate = {\n\t\tbanner: Store.getBanner('hub'),\n\t\timages: Store.getHubImages(),\n\t\tsortType: 'suggested',\n\t\tcategory: 'all',\n\t\tsearchQuery: ''\n\t}\n\tcomponentWillMount = () => {\n\t\tStore.on('update-ui', this.getData);\n\t\tStore.on('update-hub', this.getHubImages);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-ui', this.getData);\n\t\tStore.removeListener('update-hub', this.getHubImages);\n\t}\n\n\tgetHubImages = () => {\n\t\tconst images = Store.getHubImages();\n\t\tthis.setState({ images });\n\t}\n\n\tgetData = () => {\n\t\tconst banner = Store.getBanner('hub');\n\t\tthis.setState({ banner });\n\t}\n\n\tsortBy = (sortType) => {\n\t\tthis.setState({ sortType },this.search);\n\t}\n\n\tsetCategory = (category) => {\n\t\tthis.setState({ category },this.search);\n\t}\n\n\tupdateSearch = (searchQuery) => {\n\t\tthis.setState({ searchQuery }, this.search);\n\t}\n\n\tsearch = () => {\n\t\tconst { category, searchQuery, sortType } = this.state;\n\t\tDispatcher.dispatch({\n\t\t\tactionType: Constants.SEARCH_HUB,\n\t\t\tpayload: { category, q: searchQuery, sort: sortType }\n\t\t})\n\t}\n\n\trender = () => {\n\t\tconst { banner, images, sortType, category,searchQuery } = this.state;\n\t\treturn (\n\t\t\t<Container fluid className=\"main-content-container px-0\">\n\t\t\t\t{\n\t\t\t\t\tbanner &&\n\t\t\t\t\t<div className=\"mr-4\">\n\t\t\t\t\t\t<div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n\t\t\t\t\t\t\t{banner.message}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t}\n\t\t\t\t<div className=\"px-4\">\n\t\t\t\t\t<Row className=\"page-header py-4\">\n\t\t\t\t\t\t<PageTitle title=\"Jina Hub\" subtitle=\"Community\" className=\"text-sm-left mb-3\" />\n\t\t\t\t\t\t<Col md=\"3\" className=\"py-sm-2\">\n\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t<InputGroupAddon type=\"prepend\">\n\t\t\t\t\t\t\t\t\t<InputGroupText>Categories</InputGroupText>\n\t\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t\t<FormSelect onChange={(e) => this.setCategory(e.target.value)} value={category}>\n\t\t\t\t\t\t\t\t\t<option value=\"all\">All Categories</option>\n\t\t\t\t\t\t\t\t\t<option value=\"highestRated\">Search</option>\n\t\t\t\t\t\t\t\t\t<option value=\"newest\">Configurations</option>\n\t\t\t\t\t\t\t\t</FormSelect>\n\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col md=\"3\" className=\"py-sm-2\">\n\t\t\t\t\t\t\t<InputGroup>\n\t\t\t\t\t\t\t\t<InputGroupAddon type=\"prepend\">\n\t\t\t\t\t\t\t\t\t<InputGroupText>Sort By</InputGroupText>\n\t\t\t\t\t\t\t\t</InputGroupAddon>\n\t\t\t\t\t\t\t\t<FormSelect onChange={(e) => this.sortBy(e.target.value)} value={sortType}>\n\t\t\t\t\t\t\t\t\t<option value=\"suggested\">Suggested</option>\n\t\t\t\t\t\t\t\t\t<option value=\"highestRated\">Highest Rated</option>\n\t\t\t\t\t\t\t\t\t<option value=\"newest\">Newest</option>\n\t\t\t\t\t\t\t\t</FormSelect>\n\t\t\t\t\t\t\t</InputGroup>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col md=\"3\" className=\"py-sm-2\">\n\t\t\t\t\t\t\t<FormInput placeholder=\"search images...\" className=\"mb-3 mb-sm-0 ml-auto py-2\" value={searchQuery} onChange={(e)=>this.updateSearch(e.target.value)} />\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.keys(images).map(imageId =>\n\t\t\t\t\t\t\t\t<Col key={imageId} md=\"3\" className=\"mb-4\">\n\t\t\t\t\t\t\t\t\t<ImageCard image={images[imageId]} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t</Row>\n\n\t\t\t\t</div>\n\t\t\t</Container >\n\t\t)\n\t}\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Badge } from 'shards-react';\n\nclass BuildHistory extends React.Component {\n\trender = () => {\n\t\tconst { buildHistory } = this.props.image;\n\t\treturn (\n\t\t\t<Card className=\"readme-container mb-4\">\n\t\t\t\t<CardHeader className=\"border-bottom d-flex flex-row\">\n\t\t\t\t\t<h6 className=\"m-0 d-inline-block\">Build History</h6>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody className=\"p-0 build-history\">\n\t\t\t\t\t{\n\t\t\t\t\t\tbuildHistory && buildHistory.map((build,idx) =>{\n\t\t\t\t\t\t\tconst formattedCreated = (new Date(build.created)).toLocaleString();\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div key={idx} className=\"user-activity__item pr-3 py-3\">\n\t\t\t\t\t\t\t\t<div className=\"user-activity__item__icon mt-2\">\n\t\t\t\t\t\t\t\t\t<i className=\"material-icons\">build</i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"user-activity__item__content\">\n\t\t\t\t\t\t\t\t\t<span className=\"text-light\">{formattedCreated}</span>\n\t\t\t\t\t\t\t\t\t<p>[{build.os}/{build.architecture}] {parseFloat(build.size/1e6).toFixed(2)} MB</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default BuildHistory;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from 'shards-react';\n\nclass Readme extends React.Component {\n\trender = () => {\n\t\tconst { image } = this.props;\n\t\treturn (\n\t\t\t<Card className=\"readme-container mb-4\">\n\t\t\t\t<CardHeader className=\"border-bottom d-flex flex-row\">\n\t\t\t\t\t<h6 className=\"m-0 d-inline-block\">Image Details</h6>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody className=\"pt-0 pb-2\">\n\t\t\t\t\t<Row className=\"border-bottom py-2\">\n\t\t\t\t\t\t<Col>Name</Col>\n\t\t\t\t\t\t<Col>{image.name}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"border-bottom py-2\">\n\t\t\t\t\t\t<Col>Version</Col>\n\t\t\t\t\t\t<Col>{image.version}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"border-bottom py-2\">\n\t\t\t\t\t\t<Col>Author</Col>\n\t\t\t\t\t\t<Col>{image.author}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"border-bottom py-2\">\n\t\t\t\t\t\t<Col>Description</Col>\n\t\t\t\t\t\t<Col>{image.description}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"border-bottom py-2\">\n\t\t\t\t\t\t<Col>Documentation</Col>\n\t\t\t\t\t\t<Col><a href={image.documentation} target=\"_blank\">{image.documentation}</a></Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"border-bottom py-2\">\n\t\t\t\t\t\t<Col>Source</Col>\n\t\t\t\t\t\t<Col><a href={image.source} target=\"_blank\">{image.source}</a></Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"border-bottom py-2\">\n\t\t\t\t\t\t<Col>License</Col>\n\t\t\t\t\t\t<Col>{image.license}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"border-bottom py-2\">\n\t\t\t\t\t\t<Col>Vendor</Col>\n\t\t\t\t\t\t<Col>{image.vendor}</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row className=\"py-2\">\n\t\t\t\t\t\t<Col>URL</Col>\n\t\t\t\t\t\t<Col><a href={image.url} target=\"_blank\">{image.url}</a></Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default Readme;","import React from \"react\";\nimport { Card, CardHeader, CardBody } from 'shards-react';\n\nclass Readme extends React.Component {\n\trender = () => {\n\t\tconst {readme,documentation} = this.props;\n\t\treturn (\n\t\t\t<Card className=\"readme-container mb-4\">\n\t\t\t\t<CardHeader className=\"border-bottom d-flex flex-row\">\n\t\t\t\t\t<h6 className=\"m-0 d-inline-block\">README.MD</h6>\n\t\t\t\t\t<div className=\"flex-fill d-inline-block\" />\n\t\t\t\t\t<a href={documentation} target=\"_blank\" className=\"cursor-pointer text-primary\"><i className=\"fa fa-github\"></i> View on GitHub</a>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody>\n\t\t\t\t\t{\n\t\t\t\t\t\treadme ?\n\t\t\t\t\t\t\t<div className=\"markup\" dangerouslySetInnerHTML={{ __html: readme }} />\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t''\n\t\t\t\t\t}\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default Readme;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody,Row,Col,Button } from 'shards-react';\nimport {copyToClipboard} from '../../helpers';\nimport {Dispatcher, Constants} from '../../flux';\n\nclass CopyCommand extends React.Component {\n\tcopy = () =>{\n\t\tconst {image} = this.props;\n\t\tlet content= '';\n\t\timage.repoTags.map(tag=>{\n\t\t\tcontent = content.concat(tag);\n\t\t})\n\t\tcopyToClipboard(content)\n\t\tDispatcher.dispatch({\n\t\t\tactionType: Constants.SHOW_BANNER,\n\t\t\tpayload:['hub','Command copied to clipboard','success']\n\t\t})\n\t}\n\trender = () => {\n\t\tconst { image } = this.props;\n\t\treturn (\n\t\t\t<Card className=\"mb-4\">\n\t\t\t\t<CardHeader className=\"border-bottom d-flex flex-row\">\n\t\t\t\t\t<h6 className=\"m-0 d-inline-block\">Docker Installation</h6>\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody className=\"installation-command py-2\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col md=\"9\" className=\"py-2\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\timage.repoTags &&\n\t\t\t\t\t\t\timage.repoTags.map(\n\t\t\t\t\t\t\t\t(tag,idx) =>\n\t\t\t\t\t\t\t\t\t<p key={idx}>{tag}</p>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}</Col>\n\t\t\t\t\t\t<Col md=\"3\" className=\"py-2\">\n\t\t\t\t\t\t\t<Button theme=\"light\" className=\"w-100 h-100\" onClick={this.copy}><i className=\"material-icons\">file_copy</i> Copy</Button>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default CopyCommand;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from 'shards-react';\nimport StarRating from \"./StarRating\";\n\nclass ReviewCard extends React.Component {\n\trender = () => {\n\t\tconst {review} = this.props;\n\t\treturn (\n\t\t\t<Card className=\"readme-container mb-4\">\n\t\t\t\t<CardHeader className=\"border-bottom d-flex flex-row\">\n\t\t\t\t\t<h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n\t\t\t\t\t<div className=\"flex-fill d-inline-block\" />\n\t\t\t\t\t{/* <h6 className=\"m-0\"><StarRating rating={4.5}/></h6> */}\n\t\t\t\t</CardHeader>\n\t\t\t\t<CardBody className=\"py-3\">\n\t\t\t\t\t{review.content}\n\t\t\t\t</CardBody>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nexport default ReviewCard;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Button } from 'shards-react';\nimport ReviewCard from \"./ReviewCard\";\nimport { Dispatcher, Constants } from \"../../flux\";\n\nclass Readme extends React.Component {\n\tnewReview = () =>{\n\t\tconst {imageId} = this.props;\n\t\tconst modal = 'review';\n\t\tDispatcher.dispatch({\n\t\t\tactionType: Constants.SHOW_MODAL,\n\t\t\tpayload: {modal,params:{imageId}}\n\t\t})\n\t}\n\trender = () => {\n\t\tconst { reviews } = this.props;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"border-bottom d-flex flex-row mb-4\">\n\t\t\t\t\t<h3 className=\"flex-fill\">Reviews</h3>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Button onClick={this.newReview}><i className=\"material-icons mr-2\">add_comment</i>New Review</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{\n\t\t\t\t\treviews.map((review,idx) => \n\t\t\t\t\t\t<ReviewCard key={idx} review={review}/>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\nexport default Readme;\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\nimport { Dispatcher, Constants, Store } from '../flux';\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from '../components/Common/PageTitle';\nimport Details from '../components/Hub/ImageDetails';\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from '../components/Hub/ImageReviews';\n\nclass HubView extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\tlet windowHash = window.location.hash;\n\t\tconst windowParams = windowHash.substring(windowHash.indexOf('?'), windowHash.length);\n\t\tconst params = new URLSearchParams(windowParams);\n\t\tconst imageId = params.get('id');\n\t\tthis.state = {\n\t\t\timageId,\n\t\t\tloading: true,\n\t\t\tbanner: {},\n\t\t\timageData:{}\n\t\t}\n\t}\n\n\tcomponentDidMount = ()=>{\n\t\tthis.getData();\n\t\tthis.getImageData();\n\t}\n\n\tcomponentWillMount = () => {\n\t\tStore.on('update-ui', this.getData);\n\t\tStore.on('update-hub', this.getImageData);\n\t}\n\n\tcomponentWillUnmount = () => {\n\t\tStore.removeListener('update-ui', this.getData);\n\t\tStore.removeListener('update-hub', this.getImageData);\n\t}\n\n\tgetImageData = async () => {\n\t\tconst imageData = await Store.getHubImage(this.state.imageId) || {}\n\t\tthis.setState({ imageData, loading: false });\n\t}\n\n\tgetData = () => {\n\t\tconst banner = Store.getBanner('hub');\n\t\tthis.setState({ banner });\n\t}\n\n\trate = (stars) =>{\n\t\tconst {imageId} = this.state;\n\t\tDispatcher.dispatch({\n\t\t\tactionType: Constants.POST_RATING,\n\t\t\tpayload: {imageId,stars}\n\t\t})\n\t}\n\n\trender = () => {\n\t\tconst { banner, imageData,loading } = this.state;\n\t\tconst {name,readmeHTML,documentation,totalStars,totalRatings,userRated,userReviewed,reviews} = imageData;\n\t\tlet rating;\n\t\tif(totalStars && totalRatings){\n\t\t\trating = totalStars/totalRatings;\n\t\t}\n\t\treturn (\n\t\t\t<Container fluid className=\"main-content-container px-0\">\n\t\t\t\t{\n\t\t\t\t\tbanner &&\n\t\t\t\t\t<div className=\"mr-4\">\n\t\t\t\t\t\t<div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n\t\t\t\t\t\t\t{banner.message}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tloading ?\n\t\t\t\t\t\t<div className=\"error\">\n\t\t\t\t\t\t\t<div className=\"loader\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<div className=\"px-4\">\n\t\t\t\t\t\t\t<Row noGutters className=\"page-header py-4\">\n\t\t\t\t\t\t\t\t<PageTitle title={imageData.name} subtitle=\"Image\" className=\"text-sm-left mb-3\" />\n\t\t\t\t\t\t\t\t<Col md=\"6\" />\n\t\t\t\t\t\t\t\t<Col md=\"3\" className=\"py-sm-2\">\n\t\t\t\t\t\t\t\t\t<h3><StarRating rating={userRated||rating} rate={this.rate} userRated={userRated} /></h3>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col md=\"8\">\n\t\t\t\t\t\t\t\t\t<Readme readme={imageData.readmeHTML} documentation={imageData.documentation} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col md=\"4\">\n\t\t\t\t\t\t\t\t\t<CopyCommand image={imageData} />\n\t\t\t\t\t\t\t\t\t<Details image={imageData} />\n\t\t\t\t\t\t\t\t\t<BuildHistory image={imageData} />\n\t\t\t\t\t\t\t\t\t<ImageReviews reviews={reviews} imageId={imageData.id} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default HubView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport {hubURL} from '../flux/config';\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n\tContainer,\n\tRow,\n\tCol,\n\tCard,\n\tCardBody,\n} from \"shards-react\";\n\nclass Login extends React.Component {\n\tcomponentDidMount = () => {\n\t\tlet hash = window.location.href;\n\t\tif (hash.indexOf('code') > 0) {\n\t\t\tconsole.log('hash: ', hash);\n\t\t\tlet code = hash.substring(hash.indexOf('code') + 5, hash.length);\n\t\t\tconsole.log('code:', code);\n\t\t\twindow.location = `${hubURL}/auth/github/callback?code=${code}`\n\t\t}\n\t}\n\ttestAuthentication = () => {\n\t\tconst xhr = new XMLHttpRequest();\n\t\tconst connectionString = `${hubURL}/auth/test`\n\t\tconsole.log('test connectionString: ', connectionString)\n\t\txhr.open('POST', connectionString);\n\t\txhr.timeout = 5000;\n\t\txhr.withCredentials = true;\n\t\txhr.onload = function () {\n\t\t\tif (this.status >= 200 && this.status < 300) {\n\t\t\t\tconsole.log('test: SUCCESS')\n\t\t\t} else {\n\t\t\t\tconsole.log('test: FAIL')\n\t\t\t}\n\t\t}\n\t\txhr.onerror = function () {\n\t\t\tconsole.log('test: ERROR')\n\t\t};\n\t\txhr.send();\n\t}\n\trender = () => {\n\t\treturn (\n\t\t\t<Container fluid className=\"main-content-container px-0\">\n\t\t\t\t<Row noGutters className=\"h-100\">\n\t\t\t\t\t<Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tonClick={this.testAuthentication}\n\t\t\t\t\t\t\t\t\tclassName=\"auth-form__logo d-table mx-auto mb-3\"\n\t\t\t\t\t\t\t\t\tsrc={require('../images/jina-light.svg')}\n\t\t\t\t\t\t\t\t\tstyle={{ maxWidth: \"100px\" }}\n\t\t\t\t\t\t\t\t\talt=\"Jina\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n\t\t\t\t\t\t\t\t<a href={`${hubURL}/auth/github`} id=\"github-button\" className=\"btn btn-block btn-social btn-github\">\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-github\"></i> Sign in with GitHub\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t)\n\t}\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nclass ChartNode extends React.Component {\n\trender = () => {\n\t\tconst { title, content, icon, theme, link } = this.props;\n\t\treturn (\n\t\t\t<a className=\"unstyled-link\" href={link}>\n\t\t\t\t<Card className=\"h-100\">\n\t\t\t\t\t<Card.Body className=\"pt-3\">\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col xs=\"8\" className=\"pr-0\">\n\t\t\t\t\t\t\t\t<h4>{title}</h4>\n\t\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col xs=\"4\" className=\"pl-0\">\n\t\t\t\t\t\t\t\t<h1 className=\"mt-4 ml-4\"><span className={`${icon} log-${theme}`} /></h1>\n\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Card.Body>\n\n\t\t\t\t</Card>\n\t\t\t</a>\n\t\t)\n\t}\n}\n\nexport default ChartNode;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from '../components/Common/HelpCard';\nimport PageTitle from '../components/Common/PageTitle';\n\nconst Errors = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle title=\"Resources\" subtitle=\"Jina.ai\" className=\"text-sm-left mb-3\" />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Visit us on Github!'\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='We are hiring!'\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n\n  </Container>\n);\n\nexport default Errors;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DashboardLayout,IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport LogsView from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DashboardLayout,\n    component: () => <Redirect to=\"/logs\" />\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn\n  },\n];\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = page => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nexport default () => (\n  <Router basename={\"/\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker(props => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n\thubURL: 'https://hub.jina.ai',\n\t// hubURL:'http://localhost:3040'\n}"],"sourceRoot":""}