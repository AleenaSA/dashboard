{"version":3,"sources":["data/yaml.js","flux/constants.js","settings.js","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/Notifications.js","components/Layout/MainNavbar/UserActions.js","flux/dispatcher.js","helpers.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Default.jsx","components/Common/CookiesBanner.jsx","components/Common/InfoBanner.jsx","components/Common/ConnectionBanner.jsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/NodePort.jsx","components/FlowChart/ExampleSelection.jsx","views/FlowView.jsx","components/LogStream/ChartBase.jsx","components/LogStream/SummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/OccurenceChart.jsx","components/Common/MultiFilterSelect.tsx","components/LogStream/useFilters.ts","components/LogStream/LogItem.tsx","components/LogStream/LogsTable.tsx","components/LogStream/usePrevious.ts","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/options.js","components/Settings/FormItem.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","views/PackageView.jsx","views/LogIn.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","withTracker.js","App.js","serviceWorker.js","index.js","flux/config.js"],"names":["module","exports","pokedex","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_EXAMPLE","SHOW_POD_IN_FLOW","nodeOffset","x","y","className","toggleSidebar","onClick","connected","reconnect","pill","theme","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","Dispatcher","YAML","require","settings","propertyList","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","type","parents","Array","isArray","i","length","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","formatBytes","numBytes","parseFloat","toFixed","prop","name","logStream","taskStream","_store","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","log","startsWith","close","EventSource","onopen","onmessage","m","JSON","onerror","console","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","content","searchHub","category","q","sort","CHART_LEVELS","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadExample","showPodByLabel","init","clearIntervals","localStorage","getItem","yaml","shutdown","ready","images","banner","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","flowchart","outPort","logs","logSources","logLevels","occurences","current","previous","lastLog","logIndex","summaryCharts","processes","taskData","qps","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","Date","messages","bytes","selectedNode","modalParams","currentTab","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","updateChartInterval","clearInterval","updateTaskInterval","yamlSTRING","flow","api","with","board","e","parsed","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","setInterval","status","message","nanoid","formattedTimestamp","created","toLocaleString","idx","push","process","levelname","includes","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","map","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","level","updateSummaryCharts","numLogs","prevNum","entries","key","window","location","hash","customYAML","exampleName","exampleYAML","setItem","setTimeout","String","showError","image","reload","bannerTimeout","clearTimeout","hideBanner","params","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getOccurencesByName","getTaskData","getActivePanel","path","substring","getConnectionStatus","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","register","peakLogs","peakStore","this","EventEmitter","MainNavbar","componentWillUnmount","Store","removeListener","getData","setState","dispatch","state","render","fluid","NavbarSpacer","navbar","Notifications","UserActions","NavbarToggle","on","React","Component","href","style","lineHeight","maxWidth","item","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","top","subItem","nav","SidebarNavItem","MainSidebar","props","onChange","getMenuState","sidebarNavItems","getSidebarItems","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","defaultProps","contained","DashboardLayout","children","noNavbar","noFooter","sm","show","acceptCookies","Button","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","inputRef","as","rows","submitReview","IconSidebarLayout","accepted","yamlString","acceptedCookies","hideLogoText","InfoBanner","ConnectionBanner","CookiesBanner","PasteYAML","WriteReview","subtitle","attrs","xs","ButtonGroup","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","stringify","ChartNode","FlowChartSidebar","getInitialNodeState","newProperties","componentWillReceiveProps","nextProps","chart","searchResults","searchQuery","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","updateSearchQuery","searchProperties","query","indexProperties","search","availableProperties","lunr","field","add","renderEditNode","FormControl","spellCheck","property","deleteSelection","renderEditLink","nodeTo","choices","updateLink","choice","renderPodMenu","SidebarItem","inPort","defaultPods","hasSelected","Card","data-html2canvas-ignore","DropdownButton","Item","FlowView","componentDidMount","querySelector","addEventListener","preventDefault","extension","classList","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","updateChart","callback","newChart","cloneDeep","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","copyChartAsYAML","output","propId","formatAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","example","display","noGutters","PageTitle","ExampleSelection","CommandBar","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","reduce","action","newChartTransformer","_colors","INFO","background","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","ChartBase","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","gridLines","ticks","yAxes","borderDash","zeroLineColor","drawBorder","suggestedMin","chartConfig","getLabels","datasets","chartData","borderWidth","borderColor","options","ChartElement","canvasRef","activePoints","getElementsAtEvent","amount","animation","update","height","createRef","SummaryChart","showLog","_index","Body","PieChart","getColor","names","mode","OccurenceChart","customStyles","container","provided","selectProps","MultiFilterSelect","onFilterChange","rest","val","isMulti","styles","LogItem","memo","columns","msg","logName","levelInitial","firstCol","secondCol","thirdCol","toLowerCase","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","levels","miniSearchOptions","fields","itemKey","toOption","arrayLike","LogsTable","downloadLogs","useState","scrolledToBottom","setScrolledToBottom","windowListRef","useRef","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","searchString","setSearchString","useMiniSearch","addAllAsync","previousLength","useEffect","usePrevious","resultData","filter","filters","acc","curr","sources","Set","scrollToItem","Header","onScroll","scrollOffset","itemCount","itemSize","itemData","LogsView","format","filename","lineno","funcname","pathname","blob","Blob","saveAs","Container","ElapsedCard","ProgressCard","percent","newData","hoverBorderColor","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","difference","suggestedMax","line","tension","scaleLabel","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","QueriesPerSecond","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","original","setOriginal","updates","setUpdates","expanded","setExpanded","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","rating","userRated","rate","round","getStars","integer","remainder","j","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","StarRating","HubView","sortBy","sortType","setCategory","updateSearch","ImageCard","buildHistory","build","formattedCreated","buildSize","os","architecture","version","documentation","source","license","vendor","url","readme","copyCode","imageVar","repoTags","code","language","atomOneLight","review","newReview","ReviewCard","PackageView","getImageData","imageData","readmeHTML","CopyCommand","BuildHistory","Readme","ImageReviews","windowHash","windowParams","URLSearchParams","Login","icon","Errors","HelpCard","exact","layout","DefaultLayout","component","IconSidebar","NotFound","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","basename","routes","route","Boolean","hostname","ReactDOM","navigator","serviceWorker","registration","unregister","catch"],"mappings":"w9CAAAA,EAAOC,QAAU,CACfC,QAAQ,kgCAoDRC,OAAO,+uCA8DPC,UAAU,shC,+9BCnHZJ,EAAOC,QAAU,CACfI,eAAgB,iBAChBC,gBAAiB,kBACjBC,YAAa,cACbC,mBAAoB,qBACpBC,WAAY,aACZC,YAAa,cACbC,kBAAmB,oBACnBC,cAAe,gBACfC,UAAW,YACXC,YAAa,cACbC,YAAa,cACbC,QAAS,UACTC,WAAY,aACZC,YAAa,cACbC,aAAc,eACdC,iBAAkB,qB,kBChBpBpB,EAAOC,QAAU,CACfoB,WAAY,CACVC,EAAG,IACHC,EAAG,O,wKCDQ,oBACb,yBAAKC,UAAU,0DCDF,kBAAGC,EAAH,EAAGA,cAAH,OACb,yBAAKD,UAAU,sBACb,0BACEE,QAASD,EACTD,UAAU,uFAEV,uBAAGA,UAAU,kBAAb,aCLS,cAA+B,IAA5BG,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAC3B,OACE,kBAAC,IAAD,CACEJ,UAAU,sCACVE,QAASE,GAET,kBAAC,IAAD,CAASJ,UAAU,6BACjB,yBAAKA,UAAU,0BACb,uBAAGA,UAAU,kBAAb,YACCG,EACC,kBAAC,IAAD,CAAOE,MAAI,EAACC,MAAM,UAAUN,UAAU,4BACpC,uBAAGA,UAAU,kBAAb,SAGF,kBAAC,IAAD,CAAOK,MAAI,EAACC,MAAM,SAASN,UAAU,4BACnC,uBAAGA,UAAU,kBAAb,cCLC,cAA8D,IAA3DO,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,mBAAoBC,EAAwB,EAAxBA,kBAClD,OACE,kBAAC,IAAD,CAASC,IAAKC,IAAUC,OAAK,EAACC,OAAQJ,GACnCH,EACC,kBAAC,IAAD,CAAgBM,OAAK,EAACF,IAAKI,IAASf,UAAU,oBAC5C,yBACEA,UAAU,kCACVgB,IAAKT,EAAKU,MAAMC,WAChBC,IAAI,gBACH,IACH,0BAAMnB,UAAU,4BAA4BO,EAAKa,WAGnD,kBAAC,IAAD,CAAMC,GAAG,SAASrB,UAAU,iBAC1B,kBAAC,IAAD,CAAQA,UAAU,yBAAlB,WAIJ,kBAAC,IAAD,CAAUW,IAAKW,IAAcC,OAAK,EAACC,OAAK,EAACC,KAAMhB,GAC7C,kBAAC,IAAD,CACEE,IAAKe,IACLL,GAAG,IACHrB,UAAU,cACVE,QAASM,GAET,uBAAGR,UAAU,8BAAb,UANF,cC9BO,M,OAAI2B,Y,4FCFbC,EAAOC,EAAQ,KACfC,EAAWD,EAAQ,KACnBE,EAAeF,EAAQ,KAEvBG,EAAgB,GAGf,SAASC,EAAgBC,GAC9B,IAAMC,EAAOC,SAASC,cAAc,YACpCF,EAAKG,MAAQJ,EACbE,SAASG,KAAKC,YAAYL,GAC1BA,EAAKM,SACLL,SAASM,YAAY,QACrBN,SAASG,KAAKI,YAAYR,GAGrB,SAASS,EAAUC,GACxB,IAEE,MAAO,CAAEC,KADIlB,EAAKmB,MAAMF,IAExB,MAAOG,GAEP,OADAC,MAAM,wBAA0BD,GACzB,CAAEA,UAGN,SAASE,EAAmBC,EAAMC,GACvC,IAAMC,EAAY,CAChBC,OAAQ,CACNxD,EAAG,EACHC,EAAG,GAELwD,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,QAAS,GACTC,MAAO,GAGLJ,EAAQ,GACRC,EAAQ,GAERI,GAAW,EAEf,IAAKT,EAAKU,QAAS,CACjB,IAAIC,EACJA,EAAO,aACLD,QAAS,MACNV,GAELA,EAAOW,EAGTC,OAAOC,KAAKb,GAAMc,SAAQ,SAACC,GACzB,IAAMC,EAAMhB,EAAKe,IAAO,GACpBE,EAAO,CACTF,KACAG,MAAOH,EACPI,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,WAAW,eAAMP,IAUnB,GAPIC,EAAKM,WAAWH,cAAcH,EAAKM,WAAWH,MAElDH,EAAKE,MAAL,OAAuB,CAAEJ,GAAI,SAAUS,KAAM,SAC7CP,EAAKE,MAAL,QAAwB,CAAEJ,GAAI,UAAWS,KAAM,UAE3Cf,IAAaO,EAAII,OAAgB,YAAPL,IAAkBC,EAAII,MAAQX,GAExDO,EAAII,MAGN,IAFA,IAAIK,EAAUC,MAAMC,QAAQX,EAAII,OAASJ,EAAII,MAAQ,CAACJ,EAAII,OAEjDQ,EAAI,EAAGA,EAAIH,EAAQI,SAAUD,EAAG,CACvC,IAAIE,EAAWL,EAAQG,GACvBX,EAAKG,MAAMU,IAAY,EAEvB,IAAIC,EAAM,UAAMD,EAAN,eAAqBf,GAC3BiB,EAAO,CACTC,MAAO,MACPlB,GAAIgB,EACJG,KAAM,CAAEC,OAAQL,EAAUM,OAAQ,WAClClE,GAAI,CAAEiE,OAAQpB,EAAIqB,OAAQ,WAE5B/B,EAAM0B,GAAUC,EAIpB,GAAI/B,GAAUA,EAAOc,GAAK,CAAC,IAAD,EACPd,EAAOc,GAAhBpE,EADgB,EAChBA,EAAGC,EADa,EACbA,EACXqE,EAAKK,SAAW,CAAE3E,EAAG0F,SAAS1F,GAAIC,EAAGyF,SAASzF,IAGhDwD,EAAMW,GAAME,EACZR,EAAWM,KAGb,IAAMuB,EAAkB,GAClBC,EAAU5D,EAASjC,WAAWC,EAC9B6F,EAAU7D,EAASjC,WAAWE,EAoBpC,OAjBAgE,OAAOC,KAAKT,GAAOU,SAAQ,SAACC,GAC1B,IAAI0B,EA0FR,SAASC,EAAatC,EAAOuC,EAAWC,GAItC,IAHA,IAAInB,EAAUb,OAAOC,KAAKT,EAAMuC,GAAWvB,OACvCyB,EAAe,EAEVjB,EAAI,EAAGA,EAAIH,EAAQI,SAAUD,EAAG,CACvC,IAAIkB,EAASrB,EAAQG,GACjBa,OAAK,GACgBA,EAArBrC,EAAM0C,GAAQL,MAAerC,EAAM0C,GAAQL,MAAQ,EAC1CC,EAAatC,EAAO0C,EAAQ,IAC7BD,IAAcA,EAAeJ,GAG3C,OAAOG,EAAeC,EAtGRH,CAAatC,EAAOW,EAAI,GACpCX,EAAMW,GAAI0B,MAAQA,EAEdH,EAAgBG,IAAU,EAAGH,EAAgBG,KAC5CH,EAAgBG,GAAS,EAEzBrC,EAAMW,GAAIO,SAAS3E,IACtByD,EAAMW,GAAIO,SAAW,CACnB1E,EAAG6F,EAAQD,EAAUA,EACrB7F,EAAG2F,EAAgBG,GAASF,EAAUA,OAI5CrC,EAAUE,MAAQA,EAClBF,EAAUG,MAAQA,EAEXH,EAkEF,SAAS6C,EAAYC,GAC1B,OAAIA,EAAW,KAAY,GAAN,OAAUA,EAAV,UACjBA,EAAQ,SAAG,KAAQ,GAAS,GAAN,OAAUC,WAAWD,GAAUE,QAAQ,GAAvC,OACtBF,EAAQ,SAAG,KAAQ,GACf,GAAN,OAAUC,WAAWD,EAAQ,SAAG,KAAQ,IAAGE,QAAQ,GAAnD,OACI,GAAN,OAAUD,WAAWD,EAAQ,SAAG,KAAQ,IAAGE,QAAQ,GAAnD,OA1LFtE,EAAakC,SAAQ,SAACqC,GAAD,OAAWtE,EAAcsE,EAAKC,MAAQD,EAAK3B,Q,ICH5D6B,EACAC,ECOAC,E,0BDLEC,EAAMC,IAAMC,OAAO,CACvBC,QAASC,SACTC,iBAAiB,EACjBC,kBACAC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAIG,GACbC,QAAS,SAACtF,EAAUuF,EAAkBC,EAAWC,GAC/C,IAAMC,EAAS,UAAM1F,EAAS2F,KAAf,YAAuB3F,EAAS4F,MAAhC,OACb5F,EAAS6F,IAAIC,WAAW,KAAO9F,EAAS6F,IAAM,IAAM7F,EAAS6F,KAE3DnB,GAAWA,EAAUqB,SACzBrB,EAAY,IAAIsB,YAAYN,IAElBO,OAAS,WACjBV,EACE,YADc,8CAEyBvF,EAAS2F,KAFlC,YAE0C3F,EAAS4F,QAIrElB,EAAUwB,UAAY,SAACC,GACrBX,EAAU,CAAE3C,KAAM,MAAO7B,KAAMoF,KAAKnF,MAAMkF,EAAEnF,SAG9C0D,EAAU2B,QAAU,SAACrF,GACnBuE,EACE,SADc,4CAEuBvF,EAAS2F,KAFhC,YAEwC3F,EAAS4F,OAEjEU,QAAQpF,MAAM,cAAeF,GAC7B0D,EAAUqB,SAGZ,IAAMQ,EAAU,UAAMvG,EAAS2F,KAAf,YAAuB3F,EAAS4F,MAAhC,OACd5F,EAASwG,QAAQV,WAAW,KACxB9F,EAASwG,QACT,IAAMxG,EAASwG,SAEjB7B,GAAYA,EAAWoB,SAC3BpB,EAAa,IAAIqB,YAAYO,IAElBN,OAAS,WAClBR,EAAW,CACT5C,KAAM,UACN7B,KAAK,kCAAD,OAAoCuF,MAI5C5B,EAAWuB,UAAY,SAACC,GACtBV,EAAW,CAAE5C,KAAM,QAAS7B,KAAMoF,KAAKnF,MAAMkF,EAAEnF,SAGjD2D,EAAW0B,QAAU,SAACrF,GACpByE,EAAW,CACT5C,KAAM,QACN7B,KAAK,mCAAD,OAAqCuF,KAE3CD,QAAQpF,MAAM,cAAeF,GAC7B2D,EAAWoB,UAGfU,WAAW,WAAD,4BAAE,4BAAAC,EAAA,sEACW7B,EAAI8B,IAAI,WADnB,cACJC,EADI,yBAEHA,EAAO5F,MAFJ,2CAAF,kDAAC,GAIX6F,QAAQ,WAAD,4BAAE,WAAOC,GAAP,eAAAJ,EAAA,sEACc5B,IAAM6B,IAAIG,EAAkB,CAAE3B,oBAD5C,cACDyB,EADC,yBAEAA,EAAO5F,MAFP,2CAAF,mDAAC,GAIR+F,UAAU,WAAD,4BAAE,4BAAAL,EAAA,sEACY7B,EAAI8B,IAAI,UADpB,cACHC,EADG,yBAEFA,EAAO5F,MAFL,2CAAF,kDAAC,GAIVgG,SAAS,WAAD,4BAAE,WAAO5E,GAAP,eAAAsE,EAAA,sEACa7B,EAAI8B,IAAJ,kBAAmBvE,IADhC,cACFwE,EADE,yBAEDA,EAAO5F,MAFN,2CAAF,mDAAC,GAITiG,WAAW,WAAD,4BAAE,WAAOC,EAASC,GAAhB,eAAAT,EAAA,sEACW7B,EAAIuC,KAAJ,kBAAoBF,EAApB,YAAuC,CAAEC,UADpD,cACJP,EADI,yBAEHA,EAAO5F,MAFJ,2CAAF,qDAAC,GAIXqG,WAAW,WAAD,4BAAE,WAAOH,EAASI,GAAhB,eAAAZ,EAAA,sEACW7B,EAAIuC,KAAJ,kBAAoBF,EAApB,YAAuC,CAAEI,YADpD,cACJV,EADI,yBAEHA,EAAO5F,MAFJ,2CAAF,qDAAC,GAIXuG,UAAU,WAAD,4BAAE,WAAOC,EAAUC,EAAGC,GAApB,eAAAhB,EAAA,sEACY7B,EAAI8B,IAAJ,2BACCa,EADD,cACeC,EADf,iBACyBC,IAFrC,cACHd,EADG,yBAIFA,EAAO5F,MAJL,2CAAF,uDAAC,GAMVtC,OAAO,WAAD,4BAAE,4BAAAgI,EAAA,sEACe7B,EAAIuC,KAAK,gBADxB,cACAR,EADA,yBAECA,EAAO5F,MAFR,2CAAF,kDAAC,I,2BCrFH2G,EAAe,CACnB,OACA,UACA,UACA,QACA,WACA,S,IA4kBa,M,kDAvfb,aAAe,IAAD,8BACZ,gBAOFC,gBAAkB,YAA8B,IAAD,EAA1BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAC/B,OAAQD,GACN,KAAKE,IAAUhL,eACb,EAAKoB,gBACL,MACF,KAAK4J,IAAU5K,WACb,EAAK6K,UAAUF,GACf,MACF,KAAKC,IAAUnK,aACb,KAAKqK,WAAL,oBAAmBH,IACnB,MACF,KAAKC,IAAU7K,mBACb,EAAKgL,iBAAiBJ,GACtB,MACF,KAAKC,IAAU3K,YACb,EAAK+K,aACL,MACF,KAAKJ,IAAU1K,kBACb,EAAK+K,eAAeN,GACpB,MACF,KAAKC,IAAUzK,cACb,EAAK+K,aAAaP,GAClB,MACF,KAAKC,IAAUxK,UACb,EAAKe,UAAUwJ,GACf,MACF,KAAKC,IAAUtK,YACb,EAAKwJ,WAAWa,GAChB,MACF,KAAKC,IAAUvK,YACb,EAAK6J,WAAWS,GAChB,MACF,KAAKC,IAAUpK,WACb,EAAK4J,UAAUO,GACf,MACF,KAAKC,IAAUrK,QACb,EAAKgB,SACL,MACF,KAAKqJ,IAAUlK,aACb,EAAKyK,YAAYR,GACjB,MACF,KAAKC,IAAUjK,iBACb,EAAKyK,eAAeT,KAlDZ,EAwDdU,KAxDc,sBAwDP,sBAAA9B,EAAA,6DACL,EAAK+B,iBACL7D,EA3IK,CACL5E,SAAU,CACR2F,KAAM+C,aAAaC,QAAQ,qBAAuB,mBAClD/C,KAAM8C,aAAaC,QAAQ,qBAAuB,IAClD9C,IAAK6C,aAAaC,QAAQ,oBAAsB,cAChDnC,QAASkC,aAAaC,QAAQ,wBAA0B,kBACxDC,KAAMF,aAAaC,QAAQ,qBAAuB,aAClDE,SACEH,aAAaC,QAAQ,yBAA2B,mBAClDG,MAAOJ,aAAaC,QAAQ,sBAAwB,iBAEtDI,OAAQ,GACRlE,IAAK,GACLmE,QAAQ,EACR3K,WAAW,EACX4K,SAAS,EACTC,OAAO,EACPC,aAAa,EACbC,SC3CK,CACL,CACEC,MAAO,aACPC,MAAO,CACL,CACED,MAAO,OACP9J,GAAI,QACJgK,WAAY,qCACZC,UAAW,GACXC,QAAS,CAAC,SAEZ,CACEJ,MAAO,aACP9J,GAAI,QACJgK,WAAY,+CACZC,UAAW,GACXC,QAAS,CAAC,SAEZ,CACEJ,MAAO,OACP9J,GAAI,QACJgK,WAAY,2CACZC,UAAW,GACXC,QAAS,CAAC,SAEZ,CACEJ,MAAO,cACP9J,GAAI,QACJgK,WAAY,2CACZC,UAAW,GACXC,QAAS,CAAC,SAEZ,CACEJ,MAAO,MACP9J,GAAI,OACJgK,WAAY,sCACZC,UAAW,GACXC,QAAS,CAAC,MAAO,YAEnB,CACEJ,MAAO,WACP9J,GAAI,YACJgK,WAAY,yCACZC,UAAW,GACXC,QAAS,CAAC,aAEZ,CACEJ,MAAO,OACP9J,GAAI,QACJgK,WAAY,qCACZC,UAAW,GACXC,QAAS,CAAC,YDPhBC,UAAW,CACT/H,SAAU,GACVC,QAAS,GACTC,MAAO,EACPJ,MAAO,CACLM,QAAS,CACPK,GAAI,UACJG,MAAO,UACPC,MAAO,CACLmH,QAAS,CACPvH,GAAI,UACJS,KAAM,WAGVD,WAAY,GACZD,SAAU,CAAE3E,EAAG,IAAKC,EAAG,MAG3ByD,MAAO,GACPF,OAAQ,CAAExD,EAAG,EAAGC,EAAG,IAErB2L,KAAM,GACNC,WAAY,GACZC,UAAW,GACXC,WAAY,CACVC,QAAS,GACTC,SAAU,GACVC,QAAS,IAEXC,UAAU,EACVC,cAAe,GACfC,UAAW,GACXC,SAAU,CACRC,IAAK,CACHP,QAAS,EACTQ,QAAS,IAAIzH,MAAM,IAAI0H,KAAK,IAE9BC,QAAS,CACPC,UAAW,kBACXC,QAAS,MAEXC,SAAU,CACRC,eAAgB,EAChBC,QAAS,EACTC,SAAU,GAEZC,MAAO,CACLjB,QAAS,EACTkB,KAAM,QACNV,QAAS,IAAIzH,MAAM,IAAI0H,KAAK,IAE9BU,gBAAiB,IAAIC,KACrBC,SAAU,GACVC,MAAO,IAETC,aAAc,KACdC,YAAa,KACbC,WAAY,aA6DP,SAIC,EAAKC,gBAJN,OAKL,EAAKC,gBACL,EAAKC,aACL,EAAKC,UACL,EAAKC,WAEL,EAAKC,KAAK,aACV,EAAKA,KAAK,mBAXL,4CAxDO,EAsEdtD,eAAiB,WACX,EAAKuD,qBAAqBC,cAAc,EAAKD,qBAC7C,EAAKE,oBAAoBD,cAAc,EAAKC,qBAxEpC,EA2EdR,cA3Ec,uCA2EE,WAAOS,GAAP,yBAAAzF,EAAA,yDAEN1G,EAAa4E,EAAb5E,SACF8G,EAHQ,UAGc9G,EAAS2F,KAHvB,YAG+B3F,EAAS4F,MAHxC,OAIZ5F,EAAS4I,KAAK9C,WAAW,KAAO9F,EAAS4I,KAAO,IAAM5I,EAAS4I,OAG7DuD,EAPU,gBAQZC,EAAOtL,EAAUqL,GARL,gDAWME,EAAIxF,QAAQC,GAXlB,OAWN1G,EAXM,OAYVgM,EAAOtL,EAAUV,GAZP,oFAkBd,IACEkB,EAAS8K,EAAKpL,KAAKsL,KAAKC,MAAMjL,OAC9B,MAAOkL,GACPlL,EAAS,IAELmL,EAASrL,EAAmBgL,EAAKpL,KAAKK,KAAMC,IAC3CgL,KAAOF,EAAKpL,KAAKsL,KACxB1H,EAAO8E,UAAY+C,EACnB,EAAKV,KAAK,aACV,EAAKA,KAAK,oBA3BI,0DA3EF,wDAyGdJ,cAAgB,WACdU,EAAI/G,QACFV,EAAO5E,SACP,EAAK0M,0BACL,EAAKC,aACL,EAAKC,oBAEP,EAAKV,mBAAqBW,aACxB,kBAAM,EAAKd,KAAK,iBA7MO,MA4Fb,EAsHdW,0BAA4B,SAACI,EAAQC,GAEnC,OADAnI,EAAOqE,SAAU,EACF,cAAX6D,GACFlI,EAAOvG,WAAY,EACZ,EAAK4J,WAAW8E,EAAS,aAEhCnI,EAAOvG,WAAY,EACZ,EAAK4J,WAAW8E,EAAS,WA7HtB,EAiIdJ,aAAe,SAACI,GACd,IAAM3K,EAAK4K,cAGLnH,EAFWkH,EAAT/L,KAIR6E,EAAIoH,mBAAqB,IAAI7B,KAAmB,IAAdvF,EAAIqH,SAAgBC,iBACtDtH,EAAIuH,IAAMxI,EAAOgF,KAAK1G,OAEtB0B,EAAOgF,KAAKyD,KAAZ,2BAAsBxH,GAAtB,IAA2BzD,QAC3BwC,EAAOyF,UAAUxE,EAAIyH,SAAWzH,EAAIpB,KACpCG,EAAOiF,WAAWhE,EAAIpB,OAAQ,EAC9BG,EAAOkF,UAAUjE,EAAI0H,YAAa,EAE9B5F,EAAa6F,SAAS3H,EAAI0H,YAC5B3I,EAAOmF,WAAWC,QAAQnE,EAAI0H,aAGhC,EAAKxB,KAAK,gBAnJE,EAsJda,mBAAqB,SAACG,GAAa,IFtFPU,EEyFpBC,EAFWX,EAAT/L,KAKN2J,EAaE+C,EAbF/C,UACA2C,EAYEI,EAZFJ,QACAvC,EAWE2C,EAXF3C,QACAC,EAUE0C,EAVF1C,SACAN,EASEgD,EATFhD,QACAO,EAQEyC,EARFzC,MACA0C,EAOED,EAPFC,WACAC,EAMEF,EANFE,WACAC,EAKEH,EALFG,WACAC,EAIEJ,EAJFI,SACAC,EAGEL,EAHFK,SACAC,EAEEN,EAFFM,SACAzD,EACEmD,EADFnD,IASF,GANIQ,GAAWC,IACbpG,EAAO0F,SAASO,SAASC,eAAiBkD,EAC1CpJ,EAAO0F,SAASO,SAASE,QAAUA,EACnCnG,EAAO0F,SAASO,SAASG,SAAWA,GAGlC8C,GAAYC,EAAU,CACxB,IAAIE,EAAQrJ,EAAO0F,SAASe,SACzB6C,KAAI,SAACC,GAAD,OAASA,EAAIb,WACjBc,QAAQd,GACPe,EAAU,CACZf,UACAgB,KAAMP,EACNQ,SAAUT,EACVxL,KAAMsC,EAAOyF,UAAUiD,IAErBkB,EAAY,CACdlB,UACAgB,KAAMT,EACNU,SAAUX,EACVtL,KAAMsC,EAAOyF,UAAUiD,IAErBW,EAAQ,GACVrJ,EAAO0F,SAASe,SAASgC,KAAKgB,GAC9BzJ,EAAO0F,SAASgB,MAAM+B,KAAKmB,KAE3B5J,EAAO0F,SAASe,SAAS4C,GAASI,EAClCzJ,EAAO0F,SAASgB,MAAM2C,GAASO,GAEjC5J,EAAO0F,SAASe,SAAWzG,EAAO0F,SAASe,SACxC3D,MAAK,SAAChB,EAAG+H,GAAJ,OAAUA,EAAEH,KAAOG,EAAEF,UAAY7H,EAAE4H,KAAO5H,EAAE6H,aACjDG,MAAM,EAAG,IACZ9J,EAAO0F,SAASgB,MAAQ1G,EAAO0F,SAASgB,MACrC5D,MAAK,SAAChB,EAAG+H,GAAJ,OAAUA,EAAEH,KAAOG,EAAEF,UAAY7H,EAAE4H,KAAO5H,EAAE6H,aACjDG,MAAM,EAAG,IACZ9J,EAAO0F,SAASa,gBAAkB,IAAIC,KAGpCb,IACF3F,EAAO0F,SAASC,IAAIP,QAAU1F,WAAWiG,GAAKhG,QAAQ,GACtDK,EAAO0F,SAASC,IAAIC,QAAQ6C,KAAK/I,WAAWiG,GAAKhG,QAAQ,IACzDK,EAAO0F,SAASC,IAAIC,QAAQmE,SAG1B1D,GAAS0C,IACX/I,EAAO0F,SAASW,MAAMC,KAAOyC,EAC7B/I,EAAO0F,SAASW,MAAMjB,QAAU1F,WAAW2G,GAAO1G,QAAQ,GAC1DK,EAAO0F,SAASW,MAAMT,QAAQ6C,KAAK/I,WAAW2G,GAAO1G,QAAQ,IAC7DK,EAAO0F,SAASW,MAAMT,QAAQmE,SAG5BjE,IACF9F,EAAO0F,SAASI,QAAQE,SF/JA6C,EE+JwB/J,SAASgH,IF9JhD,GAGkB,GAAN,OAAU+C,EAAV,KACrBA,EAHO,KAIH,GAAN,OAAU/J,SAAS+J,EALR,IAKX,aAA4C/J,SAC1C+J,EANS,IAKX,KAIA,UAAU/J,SAAS+J,EARV,MAQT,aAA0C/J,SACvC+J,EATM,KADE,IASX,aAEM/J,SAAS+J,EAXJ,IASX,KEsJE7I,EAAO0F,SAASI,QAAQC,UAAxB,gBAA6CA,KAhOnC,EAoOdiB,WAAa,WACX,IAAK,IAAI3I,EAAI,EAAGA,EAAI0E,EAAazE,SAAUD,EAAG,CAC5C,IAAI2L,EAAQjH,EAAa1E,GACzB2B,EAAOmF,WAAWC,QAAQ4E,GAAS,EACnChK,EAAOmF,WAAWE,SAAS2E,GAAS,EACpChK,EAAOwF,cAAcwE,GAAS,IAAI7L,MAvUb,IAuUuC0H,KAAK,GAEnE7F,EAAOmF,WAAWG,QAAU,IAAInH,MAzUT,IAyUmC0H,KAAK,IAC/D,EAAKuB,oBAAsBa,YACzB,EAAKgC,oBA1UmB,MA6Fd,EAkPdhD,QAlPc,sBAkPJ,4BAAAnF,EAAA,+EAEe2F,EAAItF,YAFnB,OAEAgC,EAFA,OAGNnE,EAAOC,IAAMkE,EAHP,gDAKNnE,EAAOC,KAAM,EALP,QAOR,EAAKkH,KAAK,cAPF,yDAlPI,EA4PdD,SA5Pc,sBA4PH,4BAAApF,EAAA,sEACU2F,EAAI5F,aADd,OACHhI,EADG,OAETmG,EAAOnG,KAAOA,EACd,EAAKsN,KAAK,eAHD,2CA5PG,EAkQd8C,oBAAsB,WAEpB,IAF2B,IAAD,EACIjK,EAAOmF,WAA7BC,EADkB,EAClBA,QAASC,EADS,EACTA,SACRhH,EAAI,EAAGA,EAAI0E,EAAazE,SAAUD,EAAG,CAC5C,IAAI2L,EAAQjH,EAAa1E,GACnB6L,EAAU9E,EAAQ4E,GAClBG,EAAU9E,EAAS2E,GACzBhK,EAAOwF,cAAcwE,GAAOvB,KAAKyB,EAAUC,GAC3CnK,EAAOwF,cAAcwE,GAAOD,QAC5B/J,EAAOmF,WAAWE,SAAS2E,GAASE,EAEtClK,EAAOmF,WAAWG,QAAQmD,KAAKzI,EAAOgF,KAAK1G,OAAS,GACpD0B,EAAOmF,WAAWG,QAAQyE,QAC1B,EAAK5C,KAAK,yBA9QE,EA0Rd3D,eAAiB,SAAC6F,GACDrJ,EAAOmF,WAAWG,QAAQ+D,KAEzCrJ,EAAOuF,SAAWvF,EAAOmF,WAAWG,QAAQ+D,GAC5C,EAAKlC,KAAK,cA9RE,EAiSdxD,eAAiB,SAAChG,GAIhB,IAHA,IAAIZ,EAAW,GACX3D,EAAI,EACJC,EAAI,EACR,MAA2BgE,OAAO+M,QAAQpK,EAAO8E,UAAUjI,OAA3D,eAAmE,CAAC,IAAD,sBAAvDwN,EAAuD,KAAlDzO,EAAkD,KAC7DA,EAAM+B,QAAUA,IAClBZ,EAASS,GAAK6M,EACdtN,EAASkB,KAAO,OAChB7E,GAAwB,EAApBwC,EAAMmC,SAAS3E,EAAS,GAC5BC,GAAwB,EAApBuC,EAAMmC,SAAS1E,EAAS,KAGhC2G,EAAO8E,UAAU/H,SAAWA,EAC5BiD,EAAO8E,UAAUlI,OAAS,CAAExD,IAAGC,KAC/B,EAAK8N,KAAK,oBACVmD,OAAOC,SAASC,KAAO,UAhTX,EAmTdlH,iBAAmB,SAACmH,GAClB,EAAK3D,cAAc2D,GACnB,EAAKlH,aACL,EAAK4D,KAAK,qBAtTE,EAyTdzD,YAAc,SAACgH,GACb,IAAMlD,EAAOmD,IAAYD,GACzB,EAAK5D,cAAcU,GACnB,EAAKL,KAAK,qBA5TE,EA+Td1D,aAAe,SAACrI,GACdiC,OAAOC,KAAKlC,GAAUmC,SAAQ,SAAC8M,GAC7BvG,aAAa8G,QAAb,sBAAoCP,GAAOjP,EAASiP,OAEtDQ,WAAW,EAAKjH,KAAM,MAnUV,EAsUdvB,WAtUc,uCAsUD,qCAAAP,EAAA,yDAASQ,EAAT,EAASA,QAASC,EAAlB,EAAkBA,MACxBvC,EAAOnG,KADD,yCACeyQ,OAAOC,SAASC,KAAO,WADtC,gCAIM/C,EAAIpF,WAAWC,EAASC,GAJ9B,OAITP,EAJS,8DAML1F,EAAQwO,OAAO,EAAD,IAAIlC,SAAS,OAAS,gBAA5B,KANH,kBAOF,EAAKmC,UAAUzO,IAPb,QASP0F,EAAO1F,MAAO,EAAKyO,UAAU/I,EAAO1F,OAC/B0F,EAAO5F,OACR4O,EAAQhJ,EAAO5F,KACrB4D,EAAOmE,OAAO6G,EAAMxN,IAAMwN,EAC1B,EAAK3H,WAAW,6BAA8B,YAEhD,EAAK8D,KAAK,cAfC,yDAtUC,wDAwVd1E,WAxVc,uCAwVD,qCAAAX,EAAA,yDAASQ,EAAT,EAASA,QAASI,EAAlB,EAAkBA,QACxB1C,EAAOnG,KADD,uBAET,EAAK0J,aAFI,kBAGD+G,OAAOC,SAASC,KAAO,WAHtB,cAKX,EAAKjH,aALM,kBAQMkE,EAAIhF,WAAWH,EAASI,GAR9B,OAQTV,EARS,gEAUL1F,EAAQwO,OAAO,EAAD,IAAIlC,SAAS,OAAS,mBAA5B,KAVH,kBAWF,EAAKmC,UAAUzO,IAXb,QAaP0F,EAAO1F,MAAO,EAAKyO,UAAU/I,EAAO1F,OAC/B0F,EAAO5F,OACR4O,EAAQhJ,EAAO5F,KACrB4D,EAAOmE,OAAO6G,EAAMxN,IAAMwN,EAC1B,EAAK3H,WAAW,6BAA8B,YAEhD,EAAK8D,KAAK,cAnBC,0DAxVC,wDA8WdrN,OA9Wc,sBA8WL,sBAAAgI,EAAA,sEACD2F,EAAI3N,SADH,OAEPwQ,OAAOC,SAASU,SAFT,2CA9WK,EAmXdtI,UAnXc,uCAmXF,mCAAAb,EAAA,6DAASc,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,EAAGC,EAAtB,EAAsBA,KAAtB,SACW2E,EAAI9E,UAAUC,EAAUC,EAAGC,GADtC,OACJqB,EADI,OAEVnE,EAAOC,IAAMkE,EACb,EAAKgD,KAAK,cAHA,2CAnXE,wDAyXd9D,WAAa,SAAC8E,EAASvO,GACjB,EAAKsR,eAAeC,aAAa,EAAKD,eAC1ClL,EAAOoE,OAAS,CAAE+D,QAAS2C,OAAO3C,GAAUvO,SAC5C,EAAKsR,cAAgBL,WAAW,EAAKO,WA3db,KA4dxB,EAAKjE,KAAK,cA7XE,EAgYdiE,WAAa,WACXpL,EAAOoE,QAAS,EAChB,EAAK+C,KAAK,cAlYE,EAqYd4D,UAAY,SAAC5C,GACX,EAAK9E,WAAW8E,EAAS,UAtYb,EAyYd/E,UAAY,SAAChH,GAAU,IACbkI,EAAkBlI,EAAlBkI,MAAO+G,EAAWjP,EAAXiP,OACfrL,EAAOsE,MAAQA,EACftE,EAAO4G,YAAcyE,EACrB,EAAKlE,KAAK,cA7YE,EAgZd5D,WAAa,WACXvD,EAAOsE,OAAQ,EACftE,EAAO4G,YAAc,GACrB,EAAKO,KAAK,cAnZE,EA8ZdmE,cAAgB,WACd,OAAOtL,EAAO6G,YA/ZF,EAkad0E,QAAU,WACR,OAAOvL,EAAOnG,MAnaF,EAsad2R,aAAe,WACb,OAAOxL,EAAOC,KAvaF,EA0adwL,YA1ac,uCA0aA,WAAOnJ,GAAP,SAAAR,EAAA,yDACP9B,EAAOmE,OAAO7B,GADP,gCAEqBmF,EAAIrF,SAASE,GAFlC,OAEVtC,EAAOmE,OAAO7B,GAFJ,uCAILtC,EAAOmE,OAAO7B,IAJT,2CA1aA,wDAibdoJ,YAAc,WACZ,OAAO1L,EAAO5E,UAlbF,EAqbduQ,UAAY,WACV,OAAO3L,EAAOoE,QAtbF,EAybdwH,SAAW,WACT,OAAO5L,EAAOsE,OA1bF,EA6bduH,eAAiB,WACf,OAAO7L,EAAO4G,aA9bF,EAicdkF,QAAU,WACR,OAAO9L,EAAOgF,MAlcF,EAqcd+G,cAAgB,WACd,OAAO/L,EAAOiF,YAtcF,EAycd+G,aAAe,WACb,OAAOhM,EAAOkF,WA1cF,EA6cd+G,iBAAmB,WACjB,OAAOjM,EAAOwF,eA9cF,EAidd0G,oBAAsB,WACpB,OAAOlM,EAAOmF,WAAWC,SAldb,EAqdd+G,YAAc,WACZ,OAAOnM,EAAO0F,UAtdF,EAydd0G,eAAiB,WACf,IAAMC,EAAO/B,OAAOC,SAASC,KAAK8B,UAAU,EAAGhC,OAAOC,SAASC,KAAKlM,QACpE,OAAI+N,EAAKnL,WAAW,QAAgB,OAChCmL,EAAKnL,WAAW,QAAgB,OAChCmL,EAAKnL,WAAW,QAAUmL,EAAKnL,WAAW,WAAmB,MAC7DmL,EAAKnL,WAAW,QAAgB,OAC7B,WA/dK,EAkedqL,oBAAsB,WACpB,OAAOvM,EAAOvG,WAneF,EAsed+S,UAAY,WACV,OAAOxM,EAAOqE,SAveF,EA0edoI,aAAe,WACb,OAAOzM,EAAO8E,WA3eF,EA8ed4H,uBAAyB,WACvB,OAAOrR,GA/eK,EAkfdsR,cAAgB,WACd,OAAO3M,EAAOuF,UAjfdtK,EAAW2R,SAAS,EAAK5J,iBACzB,EAAKY,OACL0G,OAAOuC,SAAW,EAAKf,QACvBxB,OAAOwC,UAAY,kBAAMpL,QAAQT,IAAIjB,IALzB,E,wDAkRZ+M,KAAKnJ,S,sCAIL5D,EAAOuE,aAAevE,EAAOuE,YAC7BwI,KAAK5F,KAAK,e,qCAgIV,OAAOnH,EAAOuE,c,wCAId,OAAOvE,EAAOwE,a,GA5ZEwI,iBExBLC,E,kDAxEb,aAAe,IAAD,8BACZ,gBAUFC,qBAAuB,WACrBC,EAAMC,eAAe,YAAa,EAAKC,SACvCF,EAAMC,eAAe,cAAe,EAAKC,UAb7B,EAgBdA,QAAU,WACR,IAAM5T,EAAY0T,EAAMZ,sBAClB1S,EAAOsT,EAAM5B,UACnB,EAAK+B,SAAS,CAAE7T,YAAWI,UAnBf,EAsBdH,UAAY,WACVuB,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUxK,aAxBZ,EA4BdqB,kBAAoB,WAClB,EAAKsT,SAAS,CACZvT,oBAAqB,EAAKyT,MAAMzT,sBA9BtB,EAkCdD,OAAS,WACPmB,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUrK,WApCZ,EAwCdS,cAAgB,WACd0B,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUhL,kBA1CZ,EA6CdsV,OAAS,WAAO,IAAD,EACmC,EAAKD,MAA7C/T,EADK,EACLA,UAAWI,EADN,EACMA,KAAME,EADZ,EACYA,mBACzB,OACE,yBAAKT,UAAU,mCACb,kBAAC,IAAD,CAAWoU,OAAK,EAACpU,UAAU,OACzB,kBAAC,IAAD,CACE2E,KAAK,QACL3E,UAAU,0CAEV,kBAACqU,EAAD,MACA,kBAAC,IAAD,CAAKC,QAAM,EAACtU,UAAU,wBACpB,kBAACuU,EAAD,CAAenU,UAAW,EAAKA,UAAWD,UAAWA,IACrD,kBAACqU,EAAD,CACEjU,KAAMA,EACNE,mBAAoBA,EACpBC,kBAAmB,EAAKA,kBACxBF,OAAQ,EAAKA,UAGjB,kBAACiU,EAAD,CAAcxU,cAAe,EAAKA,oBA9D1C,EAAKiU,MAAQ,CACXzT,oBAAoB,EACpBN,UAAW0T,EAAMZ,sBACjB1S,KAAMsT,EAAM5B,WAEd4B,EAAMa,GAAG,YAAa,EAAKX,SAC3BF,EAAMa,GAAG,cAAe,EAAKX,SARjB,E,UADSY,IAAMC,W,gBCNhB,cAAwB,IAArB3U,EAAoB,EAApBA,cAChB,OACE,yBAAKD,UAAU,eACb,kBAAC,IAAD,CACEA,UAAU,gEACV2E,KAAK,SAEL,kBAAC,IAAD,CACE3E,UAAU,aACV6U,KAAK,IACLC,MAAO,CAAEC,WAAY,SAErB,yBAAK/U,UAAU,kBACb,yBACEkE,GAAG,YACHlE,UAAU,2BACV8U,MAAO,CAAEE,SAAU,QACnBhU,IAAI,kBACJG,IAAI,qBAIV,0BACEnB,UAAU,iDACVE,QAASD,GAET,uBAAGD,UAAU,kBAAb,cCnBK,eAA8B,IAA3BiV,EAA0B,EAA1BA,KAAMhV,EAAoB,EAApBA,cAChBiV,EAAcD,EAAK7J,OAAS6J,EAAK7J,MAAMpG,OACvC+N,EAAO/B,OAAOC,SAASC,KAAK8B,UAAU,EAAGhC,OAAOC,SAASC,KAAKlM,QAChEmQ,GAAS,EAKb,OAJAF,EAAK1J,QAAQtH,SAAQ,SAACmR,GAChBrC,EAAKnL,WAAWwN,KAAQD,GAAS,MAIrC,kBAAC,IAAD,CAASL,MAAO,CAAErQ,SAAU,aAC1B,kBAAC,IAAD,CACEzE,UAAWkV,GAAe,kBAC1BvU,IAAKuU,EAAc,IAAMG,IACzBhU,GAAI6T,EAAc,IAAMD,EAAK5T,GAC7B8T,OAAQA,EACRjV,QAASD,GAERgV,EAAK5J,YACJ,yBACErL,UAAU,mCACVsV,wBAAyB,CAAEC,OAAQN,EAAK5J,cAG3C4J,EAAK9J,OAAS,8BAAO8J,EAAK9J,OAC1B8J,EAAK3J,WACJ,yBACEtL,UAAU,mCACVsV,wBAAyB,CAAEC,OAAQN,EAAK3J,cAI7C4J,GACC,kBAAC,IAAD,CAAUvU,IAAKW,IAAcE,OAAK,EAACC,KAAMwT,EAAKxT,KAAMqT,MAAO,CAAEU,IAAK,IAC/DP,EAAK7J,MAAM4E,KAAI,SAACyF,EAASvG,GAAV,OACd,kBAAC,IAAD,CAAc6B,IAAK7B,EAAKvO,IAAK0U,IAAchU,GAAIoU,EAAQpU,IACpDoU,EAAQtK,aCxCR,eAAyC,IAA5BC,EAA2B,EAArCF,SAAiBjL,EAAoB,EAApBA,cACjC,OACE,yBAAKD,UAAU,eACZoL,EAAM4E,KAAI,SAAC0F,EAAKxG,GAAN,OACT,yBAAK6B,IAAK7B,GACR,wBAAIlP,UAAU,2BAA2B0V,EAAIvK,OACvB,qBAAduK,EAAItK,OAAyBsK,EAAItK,MAAMpG,QAC7C,kBAAC,IAAD,CAAKhF,UAAU,+BACZ0V,EAAItK,MAAM4E,KAAI,SAACiF,EAAM/F,GAAP,OACb,kBAACyG,GAAD,CACE5E,IAAK7B,EACL+F,KAAMA,EACNhV,cAAeA,cCyClB2V,G,kDAhDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRC,SAAW,WACT,EAAK9B,SAAL,2BACK,EAAKE,OADV,IAEEjJ,YAAa4I,EAAMkC,eACnBC,gBAAiBnC,EAAMoC,sBAjBR,EAqBnBhW,cAAgB,WACd0B,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUhL,kBArBxB,EAAKqV,MAAQ,CACXjJ,YAAa4I,EAAMkC,eACnBC,gBAAiBnC,EAAMoC,mBAEzBpC,EAAMa,GAAG,YAAa,EAAKoB,UANV,E,mEAUjBjC,EAAMC,eAAe,YAAaL,KAAKqC,Y,+BAiB/B,IACAE,EAAoBvC,KAAKS,MAAzB8B,gBACFE,EAAUC,IACd,eACA,OACA,SACA1C,KAAKS,MAAMjJ,aAAe,QAG5B,OACE,kBAAC,IAAD,CAAKtK,IAAI,QAAQX,UAAWkW,EAASE,GAAI,CAAEC,KAAM,GAAKC,GAAI,CAAED,KAAM,IAChE,kBAACE,EAAD,CAAmBtW,cAAewT,KAAKxT,gBACvC,kBAACuW,GAAD,CACEtL,SAAU8K,EACV/V,cAAewT,KAAKxT,qB,GA1CJ0U,IAAMC,WCN1B6B,GAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAd,OACjB,4BAAQ3W,UAAU,mDAChB,kBAAC,IAAD,CAAWoU,OAAK,GACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGsC,EAAU1G,KAAI,SAACiF,EAAM/F,GAAP,OACb,uBAAG6B,IAAK7B,EAAK2F,KAAMI,EAAK5T,GAAIrB,UAAU,YACnCiV,EAAK9J,WAIZ,0BAAMnL,UAAU,kCAAkC2W,OAM1DF,GAAWG,aAAe,CACxBC,WAAW,EACXF,UAAW,iCACXD,UAAW,CACT,CACEvL,MAAO,OACP9J,GAAI,mBAEN,CACE8J,MAAO,aACP9J,GAAI,8BAEN,CACE8J,MAAO,QACP9J,GAAI,wBAEN,CACE8J,MAAO,YACP9J,GAAI,+BAEN,CACE8J,MAAO,OACP9J,GAAI,iDAEN,CACE8J,MAAO,kBACP9J,GAAI,sCAKKoV,UCzBAK,GAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAUC,EAAvB,EAAuBA,SAAvB,OACtB,kBAAC,IAAD,CAAW7C,OAAK,GACd,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,CACEpU,UAAU,mBACVoW,GAAI,CAAEC,KAAM,GAAI/S,OAAQ,GACxBgT,GAAI,CAAED,KAAM,EAAG/S,OAAQ,GACvB4T,GAAG,KACHvW,IAAI,SAEFqW,GAAY,kBAAC,EAAD,MACbD,GACCE,GAAY,kBAAC,GAAD,U,UCjBP,eAA8B,IAA3BE,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACtB,OACE,yBAAKpX,UAAS,yBAAoBmX,EAAO,GAAK,WAC5C,uBAAGnX,UAAU,QAAb,8gBAUA,kBAACqX,GAAA,EAAD,CAAQrX,UAAU,kBAAkBE,QAASkX,GAA7C,0BCdS,eAAe,IAAZtU,EAAW,EAAXA,KAChB,OAAOA,EACL,yBAAK9C,UAAU,QACb,yBAAKA,UAAS,kCAA6B8C,EAAKxC,QAC7CwC,EAAK+L,UAIV,I,oBCPW,eAAwC,IAArC9D,EAAoC,EAApCA,QAAS5K,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACpC,OAAO2K,GAAW5K,EAChB,GAEA,yBAAKH,UAAU,mCACb,kBAACsX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,QAAtB,4DAC4D,IAC1D,uBAAG6U,KAAK,cAAR,YAFF,8BAIA,kBAAC0C,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,cACpB,uBACE6U,KAAK,uDACL2C,OAAO,SACPC,IAAI,sBACJzX,UAAU,QAEV,kBAACqX,GAAA,EAAD,CAAQK,QAAQ,SAAhB,cAEF,kBAACL,GAAA,EAAD,CAAQK,QAAQ,UAAUxX,QAASE,GACjC,uBAAGJ,UAAU,uBAAb,WADF,iB,wCCnBJ8U,GAAQ,CACZ6C,QAAS,CACPC,gBAAiB,yBAEnBxO,QAAS,CACPyO,OAAQ,OACRC,OAAQ,OACRC,UAAW,MACXC,KAAM,MACNC,QAAS,OACTxT,SAAU,QACVlD,MAAO,OACPiU,IAAK,MACL0C,UAAW,uBACXC,MAAO,MACPnD,SAAU,QACVoD,SAAU,WAIC,eAAuC,IAApC3W,EAAmC,EAAnCA,KAAMwI,EAA6B,EAA7BA,WAAYoO,EAAiB,EAAjBA,WAClC,OACE,kBAAC,KAAD,CACEC,aAAa,EACbC,OAAQ9W,EACR+W,aAAa,eACbxY,UAAU,0CACVyY,2BAA2B,EAC3B3D,MAAOA,GACP4D,eAAgBzO,EAChB0O,eAAgB,KAEhB,yBAAK3Y,UAAU,oBACb,4BACE,2CAEF,4BACE,0BAAMA,UAAU,0BACd,uBAAGA,UAAU,iBAAiBE,QAAS+J,GAAvC,YAMN,yBAAKjK,UAAU,wBACb,kBAAC4Y,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKE,MAAN,qBACA,kBAACF,GAAA,EAAKG,QAAN,CACEC,YAAY,aACZC,IAAK,SAACA,GAAD,OAAU,GAAKC,SAAWD,GAC/BE,GAAG,WACHC,KAAK,SAIX,kBAAC/B,GAAA,EAAD,CACErX,UAAU,cACVE,QAAS,kBAAMmY,EAAW,GAAKa,SAAS5W,SAF1C,c,UCtDAwS,GAAQ,CACZ6C,QAAS,CACPC,gBAAiB,yBAEnBxO,QAAS,CACPyO,OAAQ,OACRC,OAAQ,OACRC,UAAW,MACXC,KAAM,MACNC,QAAS,OACTxT,SAAU,QACVlD,MAAO,OACPiU,IAAK,MACL0C,UAAW,uBACXC,MAAO,MACPnD,SAAU,QACVoD,SAAU,WAIC,eAAyC,IAAtC3W,EAAqC,EAArCA,KAAMwI,EAA+B,EAA/BA,WAAYoP,EAAmB,EAAnBA,aAClC,OACE,kBAAC,KAAD,CACEf,aAAa,EACbC,OAAQ9W,EACR+W,aAAa,eACbxY,UAAU,0CACVyY,2BAA2B,EAC3B3D,MAAOA,GACP4D,eAAgBzO,EAChB0O,eAAgB,KAEhB,yBAAK3Y,UAAU,oBACb,4BACE,8CAEF,4BACE,0BAAMA,UAAU,0BACd,uBAAGA,UAAU,iBAAiBE,QAAS+J,GAAvC,YAMN,yBAAKjK,UAAU,wBACb,kBAAC4Y,GAAA,EAAKC,MAAN,KACE,kBAACD,GAAA,EAAKG,QAAN,CACEC,YAAY,uCACZC,IAAK,SAACA,GAAD,OAAU,GAAKC,SAAWD,GAC/BE,GAAG,WACHC,KAAK,SAIX,kBAAC/B,GAAA,EAAD,CACErX,UAAU,cACVE,QAAS,kBAAMmZ,EAAa,GAAKH,SAAS5W,SAF5C,YCqDSgX,G,kDA/Fb,aAAe,IAAD,8BACZ,gBAWF1F,qBAAuB,WACrBC,EAAMC,eAAe,YAAa,EAAKC,UAb3B,EAgBdA,QAAU,WACR,IAAM/I,EAAQ6I,EAAMvB,WACdvH,EAAU8I,EAAMX,YAChBpI,EAAS+I,EAAMxB,YACflS,EAAY0T,EAAMZ,sBACxB,EAAKe,SAAS,CAAEhJ,QAAOD,UAASD,SAAQ3K,eArB5B,EAwBdiX,cAAgB,WACd5M,aAAa8G,QAAQ,oBAAoB,GACzC,EAAK0C,SAAS,CAAEuF,UAAU,KA1Bd,EA6BdtP,WAAa,WACXtI,EAAWsS,SAAS,CAClBtK,WAAYE,IAAU3K,eA/BZ,EAmCdmZ,WAAa,SAACmB,GACZ7X,EAAWsS,SAAS,CAClBtK,WAAYE,IAAU7K,mBACtB4K,QAAS4P,KAtCC,EA0CdH,aAAe,SAACjQ,GACd,IACQJ,EADO6K,EAAMtB,iBACbvJ,QACRrH,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUvK,YACtBsK,QAAS,CAAER,UAASJ,cA/CV,EAmDd5I,UAAY,WACVuB,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUxK,aArDZ,EAyDd8U,OAAS,WAAO,IAAD,EACkD,EAAKD,MAA5DlJ,EADK,EACLA,MAAOyO,EADF,EACEA,gBAAiB3O,EADnB,EACmBA,OAAQ3K,EAD3B,EAC2BA,UAAW4K,EADtC,EACsCA,QAC3CgM,EAAa,EAAKlB,MAAlBkB,SACR,OACE,kBAAC,IAAD,CAAW3C,OAAK,EAACpU,UAAU,oBACzB,kBAAC,IAAD,KACE,kBAAC,GAAD,CAAa0Z,cAAY,IACzB,kBAAC,IAAD,CAAK1Z,UAAU,mBAAmBW,IAAI,QACpC,kBAAC,EAAD,MACA,kBAACgZ,GAAD,CAAY7W,KAAMgI,IAClB,kBAAC8O,GAAD,CACE7O,QAASA,EACT5K,UAAWA,EACXC,UAAW,EAAKA,YAEjB2W,EACD,kBAAC8C,GAAD,CACE1C,MAAOsC,EACPrC,cAAe,EAAKA,gBAEtB,kBAAC,GAAD,QAGJ,kBAAC0C,GAAD,CACErY,KAAgB,WAAVuJ,EACNf,WAAY,EAAKA,WACjBoO,WAAY,EAAKA,aAEnB,kBAAC0B,GAAD,CACEtY,KAAgB,WAAVuJ,EACNf,WAAY,EAAKA,WACjBoP,aAAc,EAAKA,iBAtFzB,EAAKnF,MAAQ,CACXlJ,MAAO6I,EAAMvB,WACbvH,QAAS8I,EAAMX,YACfpI,OAAQ+I,EAAMxB,YACdlS,UAAW0T,EAAMZ,sBACjBwG,gBAAiBjP,aAAaC,QAAQ,qBAExCoJ,EAAMa,GAAG,YAAa,EAAKX,SATf,E,UADgBY,IAAMC,W,qCCXvB,eAA+C,IAA5CzJ,EAA2C,EAA3CA,MAAO6O,EAAoC,EAApCA,SAAUha,EAA0B,EAA1BA,UAAcia,EAAY,iDACrD/D,EAAUC,IACdnW,EACA,cACA,eACA,WAGF,OACE,kBAAC,IAAD,eAAKka,GAAG,KAAKhD,GAAG,IAAIlX,UAAWkW,GAAa+D,GAC1C,0BAAMja,UAAU,gCAAgCga,GAChD,wBAAIha,UAAU,cAAcmL,K,+BCZnB,YAAC0K,GACd,OACE,yBAAK7V,UAAU,yBACb,yBAAKA,UAAU,eACb,kBAACma,GAAA,EAAD,KACE,kBAAC9C,GAAA,EAAD,CAAQK,QAAQ,YAAY0C,UAAQ,GAClC,uBAAGpa,UAAU,kBAAb,eAEF,kBAACqX,GAAA,EAAD,CAAQK,QAAQ,YAAY0C,UAAQ,GAClC,uBAAGpa,UAAU,kBAAb,SAEF,kBAACqX,GAAA,EAAD,CAAQK,QAAQ,YAAY0C,UAAQ,GAClC,uBAAGpa,UAAU,kBAAb,aAEF,kBAACqX,GAAA,EAAD,CAAQK,QAAQ,YAAYxX,QAAS2V,EAAMwE,aACzC,uBAAGra,UAAU,kBAAb,aAEF,kBAACqX,GAAA,EAAD,CAAQK,QAAQ,YAAYxX,QAAS2V,EAAMyE,WACzC,uBAAGta,UAAU,kBAAb,eAEF,kBAACqX,GAAA,EAAD,CAAQK,QAAQ,YAAYxX,QAAS,kBAAM2V,EAAM0E,YAAY,SAC3D,uBAAGva,UAAU,kBAAb,mB,UCrBG,YAAC6V,GAAW,IAAD,EACMA,EAAMzR,KAA5BM,EADgB,EAChBA,WAAYL,EADI,EACJA,MACdmW,EAAO,GACbzW,OAAOC,KAAKU,GAAYT,SAAQ,SAACqC,EAAM4I,GACjCxK,EAAW4B,IAAkB,SAATA,GACtBkU,EAAKrL,KACH,yBAAK4B,IAAK7B,GACR,0BAAMlP,UAAU,kBAAkBsG,EAAlC,KACC5B,EAAW4B,QAIpB,IAAMmU,EAAY1W,OAAOC,KAAKU,GAAYM,OAAS,EAC7C0V,EAAsB,YAAVrW,EACdsW,EAA6B,qBAAVtW,EAAwBK,EAAW6B,KAAOlC,GAAS,GAC1E,OACE,yBACErE,UAAS,qBAAgB0a,EAAY,UAAY,IACjDxW,GAAE,qBAAgBG,IAElB,yBAAKrE,UAAU,eACb,yBAAKA,UAAS,cAASya,EAAY,UAAY,KAC7C,uBAAGza,UAAU,OACX,0BAAMA,UAAU,aACb2a,GAAa,0BAAM3a,UAAU,gBAAhB,cAEhB,kBAAC4a,GAAA,EAAD,CAAOlD,QAAQ,UAAU1X,UAAU,uBAChC0E,EAAWmW,aAKnBL,EAAKxV,OAAS,GACb,yBAAKhF,UAAU,6BAA6Bwa,KChCrC,YAAC3E,GAAW,IACjBxR,EAA6BwR,EAA7BxR,MAAOC,EAAsBuR,EAAtBvR,MAAOI,EAAemR,EAAfnR,WAChBuU,EAAMtE,cACZ,OACE,uBACEsE,IAAKA,EACLjZ,UAAU,2BACV8a,WAAW,EACXC,YAAa,SAACvL,GACZA,EAAMwL,aAAaC,QACjBC,oBACAhT,KAAKiT,UAAU,CAAE9W,QAAOC,QAAOI,aAAYC,KAAM,mBAIrD,gBAACyW,GAAD,CAAWhX,KAAM,CAAEM,kB,mDC2UV2W,G,kDAtVb,WAAYxF,GAAQ,IAAD,uBACjB,gBAeFyF,oBAAsB,SAAClX,GACrB,IAAMM,EAAa,GAEbL,EAAQD,EAAKC,MAMnB,OAJAN,OAAOC,KAAKI,EAAKM,YAAYT,SAAQ,SAAC8M,GACpCrM,EAAWqM,GAAO3M,EAAKM,WAAWqM,MAG7B,CAAE1M,QAAOH,GAAIE,EAAKF,GAAIQ,aAAY6W,cAPnB,KAlBL,EA4BnBC,0BAA4B,SAACC,GAAe,IAAD,EACbA,EAAUC,MAA9BjY,EADiC,EACjCA,SAAUF,EADuB,EACvBA,MACVW,EAAaT,EAAbS,GAAIS,EAASlB,EAATkB,KAEZ,GAAIT,IAAO,EAAKgQ,MAAM9P,KAAKF,KAE3B,EAAK8P,SAAS,CAAE2H,cAAe,GAAIC,YAAa,KAE3C1X,GAEQ,SAATS,GAAmBT,IAAO,EAAKgQ,MAAM9P,KAAKF,IAAI,CAChD,IAAME,EAAOb,EAAMW,GACnB,EAAK8P,SAAS,CAAE5P,KAAM,EAAKkX,oBAAoBlX,OAxChC,EA4CnByX,YAAc,SAACxX,GACb,EAAK2P,UAAS,SAAC8H,GAAe,IACpB1X,EAAS0X,EAAT1X,KAER,OADAA,EAAKC,MAAQA,EACN,CAAED,UACR,EAAK2X,cAjDS,EAoDnBC,oBAAsB,SAAC1V,EAAMhE,GAC3B,EAAK0R,UAAS,SAAC8H,GAAe,IACpB1X,EAAS0X,EAAT1X,KAER,OADAA,EAAKM,WAAW4B,GAAQhE,EACjB,CAAE8B,UACR,EAAK2X,cAzDS,EA4DnBE,eAAiB,SAAC3V,EAAMhE,GACtB,EAAK0R,UAAS,SAAC8H,GAAe,IACpB1X,EAAS0X,EAAT1X,KAER,OADAA,EAAKmX,cAAcjV,GAAQhE,EACpB,CAAE8B,UACR,EAAK2X,cAjES,EAoEnBA,YAAc,WAAO,IACX3X,EAAS,EAAK8P,MAAd9P,KACR,EAAKyR,MAAMqG,WAAW9X,IAtEL,EAyEnB+X,kBAAoB,SAAC7N,GACnB,EAAK0F,SAAS,CAAE4H,YAAatN,EAAEkJ,OAAOlV,OAAS,EAAK8Z,mBA1EnC,EA6EnBA,iBAAmB,WACjB,IAAMC,EAAQ,EAAKnI,MAAM0H,YACzB,IAAKS,EAAO,OAAO,EAAKrI,SAAS,CAAE2H,eAAe,IAClD,EAAKW,kBACL,IAAIX,EAAgB,EAAK5L,MAAMwM,OAAX,UAAqBF,EAArB,YAA8BA,EAA9B,MACpB,EAAKrI,SAAS,CAAE2H,mBAlFC,EAqFnBW,gBAAkB,WAAO,IACfE,EAAwB,EAAKtI,MAA7BsI,oBACR,EAAKzM,MAAQ0M,MAAK,WAAa,IAAD,OAC5BhJ,KAAKiJ,MAAM,QAEXF,EAAoBvY,SAAQ,SAACqC,EAAM4I,GACjC5I,EAAKpC,GAAKsB,SAAS0J,GACnB,EAAKyN,IAAIrW,UA5FI,EAiGnBsW,eAAiB,WAAO,IAAD,EAMjB,EAAK1I,MAJPsI,EAFmB,EAEnBA,oBACApY,EAHmB,EAGnBA,KACAwX,EAJmB,EAInBA,YACAD,EALmB,EAKnBA,cAEEtX,EACoB,qBAAfD,EAAKC,MACRD,EAAKM,WAAW6B,KAChBnC,EAAKC,OAAS,GACpB,OACE,yBAAKrE,UAAU,4BACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,QACX,wCAEF,kBAAC6c,GAAA,EAAD,CACEC,YAAY,EACZxa,MAAO+B,EACPyR,SAAU,SAACxH,GAAD,OAAO,EAAKuN,YAAYvN,EAAEkJ,OAAOlV,QAC3CtC,UAAU,oBAGd,uBAAGA,UAAU,aACX,0CAEF,yBAAKA,UAAU,OACb,kBAAC6c,GAAA,EAAD,CACEC,YAAY,EACZ9D,YAAY,uBACZ1W,MAAOsZ,EACP9F,SAAU,EAAKqG,qBAGnB,yBAAKnc,UAAU,iCACZ4b,GAAeD,EACdA,EAAc3L,KAAI,SAACtH,GACjB,IAAMqU,EAAWP,EAAoB9T,EAAOuQ,KACpC1S,EAAewW,EAAfxW,KAAM5B,EAASoY,EAATpY,KACRrC,EAAQ8B,EAAKM,WAAW6B,GAE9B,MAAoB,oBAATjE,EAEP,yBAAKyO,IAAKxK,EAAMvG,UAAU,sBACxB,uBAAGA,UAAU,uBAAuBuG,GACpC,kBAACsW,GAAA,EAAD,CACEC,YAAY,EACZ9D,YAAarU,EACbrC,MAAO8B,EAAKmX,cAAchV,IAAS,GACnCuP,SAAU,SAACxH,GAAD,OACR,EAAK2N,eAAe1V,EAAM+H,EAAEkJ,OAAOlV,QAErCtC,UAAU,0BAKhB,yBAAK+Q,IAAKxK,EAAMvG,UAAU,sBACxB,uBAAGA,UAAU,uBAAuBuG,GACpC,kBAACsW,GAAA,EAAD,CACEC,YAAY,EACZxa,MAAOA,GAAS,GAChBwT,SAAU,SAACxH,GAAD,OACR,EAAK0N,oBAAoBzV,EAAM+H,EAAEkJ,OAAOlV,QAE1CtC,UAAU,6BAMlB,6BACG+D,OAAOC,KAAKI,EAAKM,YAAYsL,KAAI,SAAC1J,GACjC,IAAMhE,EAAQ8B,EAAKM,WAAW4B,GAC9B,MAAa,SAATA,EAAwB,GAE1B,yBAAKyK,IAAKzK,EAAMtG,UAAU,sBACxB,uBAAGA,UAAU,uBAAuBsG,GACpC,kBAACuW,GAAA,EAAD,CACEC,YAAY,EACZxa,MAAOA,GAAS,GAChBwT,SAAU,SAACxH,GAAD,OACR,EAAK0N,oBAAoB1V,EAAMgI,EAAEkJ,OAAOlV,QAE1CtC,UAAU,6BAKjBwc,EAAoBxM,KAAI,SAAC+M,GAAD,MACkB,oBAAlC3Y,EAAKM,WAAWqY,EAASxW,MAC9B,yBAAKwK,IAAKgM,EAASxW,KAAMvG,UAAU,sBACjC,uBAAGA,UAAU,uBAAuB+c,EAASxW,MAC7C,kBAACsW,GAAA,EAAD,CACEC,YAAY,EACZ9D,YAAa+D,EAASpY,KACtBrC,MAAO8B,EAAKmX,cAAcwB,EAASxW,OAAS,GAC5CuP,SAAU,SAACxH,GAAD,OACR,EAAK2N,eAAec,EAASxW,KAAM+H,EAAEkJ,OAAOlV,QAE9CtC,UAAU,0BAId,QAMV,yBAAKA,UAAU,OACb,kBAACqX,GAAA,EAAD,CACEK,QAAQ,SACR1X,UAAU,QACVE,QAAS,EAAK2V,MAAMmH,iBAHtB,iBAjNW,EA6NnBC,eAAiB,SAAC9X,GAAU,IAClB5B,EAAU,EAAKsS,MAAM6F,MAArBnY,MACF0B,EAAW1B,EAAM4B,EAAKE,KAAKC,QAC3B4X,EAAS3Z,EAAM4B,EAAK9D,GAAGiE,QAEzB6X,EAAUpZ,OAAOC,KAAKT,GAAOyM,KAAI,SAAC9L,GACpC,MAAO,CAAEG,MAAOd,EAAMW,GAAIG,OAASd,EAAMW,GAAIQ,WAAW6B,KAAMrC,SAGhE,OACE,yBAAKlE,UAAU,4BACb,wBAAIA,UAAU,gCACZ,+CAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACb,uBAAGA,UAAU,QACX,oCAEF,kBAAC6c,GAAA,EAAD,CACE7c,UAAU,OACVmZ,GAAG,SACHrD,SAAU,SAACxH,GAAD,OACR,EAAKuH,MAAMuH,WAAWjY,EAAKjB,GAAIoK,EAAEkJ,OAAOlV,MAAO4a,EAAOhZ,KAExD5B,MAAO2C,EAASf,IAEfiZ,EAAQnN,KAAI,SAACqN,GAAD,OACX,4BAAQtM,IAAKsM,EAAOnZ,GAAI5B,MAAO+a,EAAOnZ,IACnCmZ,EAAOhZ,WAId,uBAAGrE,UAAU,QACX,kCAEF,kBAAC6c,GAAA,EAAD,CACE7c,UAAU,OACVmZ,GAAG,SACHrD,SAAU,SAACxH,GAAD,OACR,EAAKuH,MAAMuH,WAAWjY,EAAKjB,GAAIe,EAASf,GAAIoK,EAAEkJ,OAAOlV,QAEvDA,MAAO4a,EAAOhZ,IAEbiZ,EAAQnN,KAAI,SAACqN,GAAD,OACX,4BAAQtM,IAAKsM,EAAOnZ,GAAI5B,MAAO+a,EAAOnZ,IACnCmZ,EAAOhZ,aAMlB,yBAAKrE,UAAU,OACb,kBAACqX,GAAA,EAAD,CACEK,QAAQ,SACR1X,UAAU,QACVE,QAAS,EAAK2V,MAAMmH,iBAHtB,wBAlRW,EA8RnBM,cAAgB,WACd,OACE,yBAAKtd,UAAU,4BACb,wBAAIA,UAAU,gCACZ,wCAEF,yBAAKA,UAAU,4BACb,kBAACud,GAAD,CACEjZ,MAAO,CACLkZ,OAAQ,CACNtZ,GAAI,SACJS,KAAM,SAER8G,QAAS,CACPvH,GAAI,UACJS,KAAM,WAGVD,WAAY,KAEb+Y,GAAYzN,KAAI,SAAC7L,EAAK+K,GAAN,OACf,kBAACqO,GAAD,CACExM,IAAK7B,EACL5K,MAAO,CACLkZ,OAAQ,CACNtZ,GAAI,SACJS,KAAM,SAER8G,QAAS,CACPvH,GAAI,UACJS,KAAM,WAGVD,WAAYP,UA/TL,EAuUnBgQ,OAAS,WAAO,IAAD,EACsB,EAAK0B,MAAM6F,MAAtCjY,EADK,EACLA,SAAUF,EADL,EACKA,MAAOC,EADZ,EACYA,MACnBka,EAAc3Z,OAAOC,KAAKP,GAAUuB,OAAS,EACnD,OACE,kBAAC2Y,GAAA,EAAD,CAAM3d,UAAU,0BACb0d,EACqB,SAAlBja,EAASkB,KACP,EAAKsY,eAAezZ,EAAMC,EAASS,IAAKX,GACxC,EAAKqZ,eAAerZ,EAAME,EAASS,KACrC,EAAKoZ,kBA9Ub,IAAIlZ,EAAO,GACX,GAAIyR,EAAM6F,MAAMjY,SAASS,GAAI,CAC3B,IAAMmJ,EAAewI,EAAM6F,MAAMnY,MAAMsS,EAAM6F,MAAMjY,SAASS,IAC5DE,EAAO,EAAKkX,oBAAoBjO,GALjB,OAQjB,EAAK6G,MAAQ,CACXsI,oBAAqB3I,EAAMT,yBAC3BhP,OACAuX,cAAe,GACfC,YAAa,IAZE,E,UADUjH,IAAMC,WCLtB,cACb,OACE,yBAAK5U,UAAU,aACb,uBAAGA,UAAU,qBAAqB4d,0BAAwB,W,oBCFjD,YAAC/H,GACd,OACE,yBAAK7V,UAAU,qBACb,kBAAC6d,GAAA,EAAD,CACE1E,GAAIgB,KACJhP,MAAM,eACNjH,GAAG,sBAEH,kBAACtD,GAAA,EAASkd,KAAV,CAAe5d,QAAS,kBAAM2V,EAAMzL,YAAY,aAAhD,iBAGA,kBAACxJ,GAAA,EAASkd,KAAV,CAAe5d,QAAS,kBAAM2V,EAAMzL,YAAY,eAAhD,oBAGA,kBAACxJ,GAAA,EAASkd,KAAV,CAAe5d,QAAS,kBAAM2V,EAAMzL,YAAY,YAAhD,0BCkMO2T,G,kDAlMb,WAAYlI,GAAQ,IAAD,uBACjB,cAAMA,IAmBRmI,kBAAoB,WAClB5b,SACG6b,cAAc,oBACdC,iBAAiB,eAAe,SAAC5P,GAAD,OAAOA,EAAE6P,qBAvB3B,EA0BnBvK,qBAAuB,WACrBC,EAAMC,eAAe,mBAAoB,EAAKC,UA3B7B,EA8BnBwG,YAAc,WAAwB,IAAvB6D,EAAsB,uDAAV,MACzBhc,SAAS6b,cAAc,oBAAoBI,UAAU1B,IAAI,YACzD,EAAK2B,qBACL/M,YAAW,kBAAM,EAAK+M,oBAAmB,KAAQ,KACjD,IAAIC,EAAe,CACjBC,wBAAwB,EACxBC,SAAS,EACT3e,EAAG,EACHC,EAAG,EACH2e,QAAS,EACTC,QAAS,EACThb,MAAO,GAETib,KAAYxc,SAAS6b,cAAc,oBAAqBM,GAAcM,MACpE,SAACzb,GACC,IAAIsO,EAAQtO,EAAO0b,UAAP,gBAA0BV,IAClCjZ,EAAO/C,SAAS2c,eAAe,iBACnC5Z,EAAK6Z,aAAa,WAAlB,2BAAkDZ,IAClDjZ,EAAK6Z,aAAa,OAAQtN,GAC1BvM,EAAK8Z,YAjDQ,EAsDnBX,mBAAqB,WAAyB,IAAxBY,IAAuB,yDAC3C,EAAKlL,SAAS,CAAEkL,iBAvDC,EA0DnBnL,QAAU,WACR,IAAM2H,EAAQ7H,EAAMV,eACpB,EAAKgM,YAAYzD,IA5DA,EA+DnBQ,WAAa,SAAC9X,EAAMgb,GAAc,IAC1B1D,EAAU,EAAKxH,MAAfwH,MACF2D,EAAWC,qBAAU5D,GACzB2D,EAAS9b,MAAMa,EAAKF,IAAIG,MAAQD,EAAKC,MAErC,IAAIwR,EAAK,2BACJzR,EAAKM,YACLN,EAAKmX,eAYV,OATAxX,OAAOC,KAAK6R,GAAO5R,SAAQ,SAACC,GACR,KAAd2R,EAAM3R,IAAmC,qBAAd2R,EAAM3R,WAC5B2R,EAAM3R,MAIjBmb,EAAS9b,MAAMa,EAAKF,IAAIQ,WAAamR,EAErC,EAAKsJ,YAAL,2BAAsBzD,GAAU2D,IACzBA,EAAS9b,MAAMa,EAAKF,KAlFV,EAqFnBkZ,WAAa,SAAClY,EAAQqa,EAAQC,GAC5B,GAAID,IAAWC,EAAf,CADqC,IAE/B9D,EAAU,EAAKxH,MAAfwH,MACF2D,EAAWC,qBAAU5D,GAEzB2D,EAAS7b,MAAM0B,GAAQG,KAAKC,OAASia,EACrCF,EAAS7b,MAAM0B,GAAQ7D,GAAGiE,OAASka,EAEnC,EAAKL,YAAL,2BAAsBzD,GAAU2D,MA7Ff,EAgGnBI,cAAgB,WACd,EAAKC,qBAAqBC,cAAc,KAjGvB,EAoGnB3C,gBAAkB,WAChB,EAAK0C,qBAAqBE,YAAY,KArGrB,EAwGnBT,YAAc,SAACzD,GACb,EAAK1H,SAAS,CAAE0H,WAzGC,EA4GnBmE,WAAa,SAAC/c,GACZnB,EAAWsS,SAAS,CAClBtK,WAAYE,IAAU9K,YACtB6K,QAAS9G,EAAKwC,UA/GC,EAmHnBwa,gBAAkB,WAChB7d,ExBVG,SAAsByZ,GAC3B,IAAIqE,EAAS,CACX3R,KAAMsN,EAAMtN,MAAQ,GACpBjL,KAAM,IA0CR,OAxCA4c,EAAO3R,KAAKC,MAAQ,CAAEjL,OAAQ,IAE9BW,OAAOC,KAAK0X,EAAMnY,OAAOU,SAAQ,SAACC,GAChC,IAAIE,EAAOsX,EAAMnY,MAAMW,GACvBE,EAAKC,MAAQD,EAAKC,OAASD,EAAKM,WAAW6B,KACvCnC,EAAKM,WAAW6B,aAAanC,EAAKM,WAAW6B,QAGnDxC,OAAOC,KAAK0X,EAAMnY,OAAOU,SAAQ,SAACC,GAChC,IAAME,EAAOsX,EAAMnY,MAAMW,GAEpBE,EAAKC,QAEV0b,EAAO5c,KAAKiB,EAAKC,OAAS,GAE1BN,OAAOC,KAAKI,EAAKM,YAAYT,SAAQ,SAAC+b,GACpC,IAAIrb,EAAO3C,EAAcge,GAEvBD,EAAO5c,KAAKiB,EAAKC,OAAO2b,GADb,SAATrb,EAEoC,SAApC6M,OAAOpN,EAAKM,WAAWsb,IACP,QAATrb,EACyBa,SAASpB,EAAKM,WAAWsb,IACtB5b,EAAKM,WAAWsb,MAEzDD,EAAO3R,KAAKC,MAAMjL,OAAOgB,EAAKC,OAAS,CACrCvE,EAAGsE,EAAKK,SAAS3E,EACjBC,EAAGqE,EAAKK,SAAS1E,OAGrBgE,OAAOC,KAAK0X,EAAMlY,OAAOS,SAAQ,SAACC,GAChC,IAAMiB,EAAOuW,EAAMlY,MAAMU,GACnBe,EAAWyW,EAAMnY,MAAM4B,EAAKE,KAAKC,QAAQjB,MACzC6Y,EAASxB,EAAMnY,MAAM4B,EAAK9D,GAAGiE,QAAQjB,MACtCY,GAAaiY,IACd6C,EAAO5c,KAAK+Z,GAAQ3Y,OACjBM,MAAMC,QAAQib,EAAO5c,KAAK+Z,GAAQ3Y,SACrCwb,EAAO5c,KAAK+Z,GAAQ3Y,MAAQ,CAACwb,EAAO5c,KAAK+Z,GAAQ3Y,QACnDwb,EAAO5c,KAAK+Z,GAAQ3Y,MAAM4K,KAAKlK,IAC1B8a,EAAO5c,KAAK+Z,GAAQ3Y,MAAQU,MAE/B,UAAN,OAAiBrD,EAAKuZ,UAAU4E,IwBnCdE,CAAa,EAAK/L,MAAMwH,QACxCzY,MAAM,sCArHW,EAwHnBid,aAAe,YAA4D,IAAzDC,EAAwD,EAAxDA,WAAYC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,SAAsB,EAAZ5E,MAC5D,MAAmB,YAAf2E,GAAyC,WAAbC,GAC5BH,IAAeC,GA1HF,EA8HnBG,gBAAkB,WAChB5e,EAAWsS,SAAS,CAClBtK,WAAYE,IAAU5K,WACtB2K,QAAS,CAAEoB,MAAO,aAjIH,EAqInBZ,YAAc,SAACoW,GACb7e,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUlK,aACtBiK,QAAS4W,KAxIM,EA4InBrM,OAAS,WAAO,IAAD,EACkB,EAAKD,MAA5BwH,EADK,EACLA,MAAOwD,EADF,EACEA,YACf,OACE,kBAAC,IAAD,CAAW9K,OAAK,EAACpU,UAAU,+BACzB,yBAAKA,UAAU,QACb,uBAAG6U,KAAK,KAAK3Q,GAAG,gBAAgB4Q,MAAO,CAAE2L,QAAS,SAAlD,YAGA,kBAAC,IAAD,CAAKC,WAAS,EAAC1gB,UAAU,oBACvB,kBAAC2gB,GAAD,CACExV,MAAM,cACN6O,SAAS,UACTha,UAAU,uBAGd,yBAAKA,UAAU,iDACb,kBAAC,IAAD,CAAMA,UAAU,4CACd,kBAAC4gB,GAAD,CAAkBxW,YAAa,EAAKA,cACpC,kBAACyW,GAAD,CACEvG,UAAW,EAAKwF,gBAChBzF,YAAa,EAAKkG,gBAClBhG,YAAa,EAAKA,cAEpB,yBAAKva,UAAU,mBACb,yBACEA,UAAU,kBACV8U,MAAO,CAAE2L,QAASvB,EAAc,GAAK,SAErC,yBAAKlf,UAAU,wBACf,yBAAKA,UAAU,4BAEjB,kBAAC,aAAD,CACE0b,MAAOA,EACPoF,WAAY,CAAEC,UAAWC,GAAYC,KAAMC,IAC3CC,UAAW,EAAKzB,qBAChB0B,OAAQ,CACNlB,aAAc,EAAKA,kBAK3B,kBAACmB,GAAD,CACE3F,MAAOA,EACP+D,cAAe,EAAKA,cACpBzC,gBAAiB,EAAKA,gBACtBd,WAAY,EAAKA,WACjBkB,WAAY,EAAKA,iBAxL3B,IAAM1B,EAAQ7H,EAAMV,eAFH,OAGjB,EAAKe,MAAQ,CAAEwH,QAAOwD,aAAa,GAEnC,EAAKQ,qBAAuB3b,OAAOC,KAAKsd,IAASC,QAAO,SAACtR,EAAKc,EAAK7B,GASjE,OARAe,EAAIc,GAAO,WAAc,IACjB2K,EAAU,EAAKxH,MAAfwH,MACF8F,EAASF,GAAQvQ,GACjB0Q,EAAsBD,EAAM,WAAN,aACtBnC,EAAWoC,EAAoB/F,GAEnC,OADA,EAAKyD,YAAL,2BAAsBzD,GAAU2D,IACzBA,GAEFpP,IACN,IAEH4D,EAAMa,GAAG,mBAAoB,EAAKX,SAjBjB,E,UADEY,IAAMC,W,8BCbvB8M,GAAU,CACdC,KAAM,CACJ9J,OAAQ,UACR+J,WAAY,0BAEdC,QAAS,CACPhK,OAAQ,UACR+J,WAAY,2BAEdE,QAAS,CACPjK,OAAQ,UACR+J,WAAY,4BAEdG,MAAO,CACLlK,OAAQ,UACR+J,WAAY,4BAEdI,SAAU,CACRnK,OAAQ,UACR+J,WAAY,0BAEdK,MAAO,CACLpK,OAAQ,UACR+J,WAAY,6BA0IDM,G,kDArIb,WAAYrM,GAAQ,IAAD,8BACjB,cAAMA,IAIRmI,kBAAoB,WAClB,EAAKmE,eANY,EASnBA,YAAc,WAAO,IACXrf,EAAS,EAAK+S,MAAd/S,KACFsf,EAAe,CACnBC,OAAQ,CAAC,SACTniB,QAAS,EAAKA,QACdoiB,qBAAqB,EACrBC,YAAY,EACZC,OAAQ,CACN/d,SAAU,SACVge,OAAQ,CACNxK,QAAS,GACTyK,SAAU,KAGdC,SAAU,CACRC,SAAS,EACTC,QAAQ,GAEVC,SAAU,CACRC,MAAO,CACLC,OAAQ,EACRC,UAAW,KAGfC,OAAQ,CACNC,MAAO,CACL,CACEC,WAAW,EACXhe,MAAO,MACPie,MAAO,CACL5C,SAAS,KAIf6C,MAAO,CACL,CACEF,UAAW,CACTG,WAAY,CAAC,IAAK,GAClBC,cAAe,UACfC,YAAY,EACZre,MAAO,WAETie,MAAO,CACLpL,QAAS,EACTyL,aAAc,OAOlBC,EAAW,aACfzjB,QAAS,EAAKA,QACdyE,KAAM,OACN8d,OAAQ,EAAKmB,UAAU,IACvB9gB,KAAM,CACJ+gB,SAAU9f,OAAOC,KAAKlB,GAAMkN,KAAI,SAACU,GAC/B,IAAMoT,EAAYhhB,EAAK4N,GACvB,MAAO,CACLrM,MAAOqM,EACPnE,KAAM,QACNwX,YAAa,IACbC,YAAatC,GAAQhR,GAAOmH,OAC5BD,gBAAiB8J,GAAQhR,GAAOkR,WAChC9e,KAAMghB,OAIZG,QAAS7B,GACN,EAAKvM,MAAM8N,aAGhB,EAAKjI,MAAQ,IAAIwI,KAAa,EAAKC,UAAUrY,QAAS6X,IAjFrC,EAoFnBzjB,QAAU,SAACoO,GACT,IAAM8V,EAAe,EAAK1I,MAAM2I,mBAAmB/V,GACnD,EAAKuH,MAAM3V,QAAQkkB,IAtFF,EAyFnBR,UAAY,SAACU,GAEX,IADA,IAAM7B,EAAS,GACN1d,EAAI,EAAGA,EAAIuf,IAAUvf,EAC5B0d,EAAOtT,KAAKpK,GAEd,OAAO0d,GA9FU,EAiGnBtD,YAAc,WAAO,IACXrc,EAAS,EAAK+S,MAAd/S,KACFghB,EAAY,CAChBrB,OAAQ,EAAKmB,UAAU,IACvBC,SAAU9f,OAAOC,KAAKlB,GAAMkN,KAAI,SAACU,GAC/B,IAAMoT,EAAYhhB,EAAK4N,GACvB,MAAO,CACLrM,MAAOqM,EACPnE,KAAM,QACNwX,YAAa,IACbC,YAAatC,GAAQhR,GAAOmH,OAC5BD,gBAAiB8J,GAAQhR,GAAOkR,WAChC9e,KAAMghB,OAIZ,EAAKpI,MAAM5Y,KAAOghB,EAClB,EAAKpI,MAAMuI,QAAQM,WAAY,EAC/B,EAAK7I,MAAM8I,UAnHM,EAsHnBrQ,OAAS,WACH,EAAKgQ,UAAUrY,SAAW,EAAK4P,OAAO,EAAKyD,cADlC,MAEa,EAAKtJ,MAAvBsC,EAFK,EAELA,MAAOsM,EAFF,EAEEA,OACf,OACE,yBAAKzkB,UAAU,mBACb,4BACEykB,OAAQA,GAAU,GAClBtM,MAAOA,GAAS,IAChBc,IAAK,EAAKkL,cA5HhB,EAAKA,UAAYxP,IAAM+P,YAFN,E,UADG/P,IAAMC,WC2Bf+P,G,kDAnDb,aAAe,IAAD,8BACZ,gBAOF/Q,qBAAuB,WACrBC,EAAMC,eAAe,uBAAwB,EAAKC,UATtC,EAYd6Q,QAAU,SAACR,GACT,IAAIrU,EAAQqU,EAAa,IAAMA,EAAa,GAAGS,OAE/CljB,EAAWsS,SAAS,CAClBtK,WAAYE,IAAU1K,kBACtByK,QAASmG,KAjBC,EAqBdgE,QAAU,WACR,IAAM+P,EAAYjQ,EAAMlB,mBACxB,EAAKqB,SAAS,CAAE8P,eAvBJ,EA0Bd3P,OAAS,WAAO,IACN2P,EAAc,EAAK5P,MAAnB4P,UACR,OACE,kBAACnG,GAAA,EAAD,CAAM3d,UAAU,SACd,kBAAC2d,GAAA,EAAKmH,KAAN,CAAW9kB,UAAU,0BACnB,kBAAC,GAAD,CACE8C,KAAMghB,EACNW,OAAQ,GACRtM,MAAO,GACPjY,QAAS,EAAK0kB,WAGlB,kBAACjH,GAAA,EAAKmH,KAAN,CAAW9kB,UAAU,kBACnB,kBAAC,GAAD,CACE8C,KAAMghB,EACNW,OAAQ,GACRtM,MAAO,GACPjY,QAAS,EAAK0kB,aAzCtB,EAAK1Q,MAAQ,CACX4P,UAAWjQ,EAAMlB,oBAEnBkB,EAAMa,GAAG,uBAAwB,EAAKX,SAL1B,E,UADWY,IAAMC,WCF3B8M,GAAU,CACd,CACE7J,OAAQ,OACR+J,WAAY,2BAEd,CACE/J,OAAQ,OACR+J,WAAY,2BAEd,CACE/J,OAAQ,OACR+J,WAAY,2BAEd,CACE/J,OAAQ,OACR+J,WAAY,2BAEd,CACE/J,OAAQ,OACR+J,WAAY,2BAEd,CACE/J,OAAQ,OACR+J,WAAY,2BAEd,CACE/J,OAAQ,OACR+J,WAAY,2BAEd,CACE/J,OAAQ,OACR+J,WAAY,2BAEd,CACE/J,OAAQ,OACR+J,WAAY,4BAoGDmD,G,kDA/Fb,WAAYlP,GAAQ,IAAD,8BACjB,cAAMA,IAIRmI,kBAAoB,WAClB,EAAKmE,eANY,EASnB6C,SAAW,SAACjV,GAEV,IADA,IAAI3K,GAAQ,GACJA,GACFsc,GAAQ3R,GAAQ3K,EAAQsc,GAAQ3R,GAC/BA,GAAS2R,GAAQ1c,OAExB,OAAOI,GAfU,EAkBnB+c,YAAc,WAAO,IACXrf,EAAS,EAAK+S,MAAd/S,KACFmiB,EAAQlhB,OAAOC,KAAKlB,GAiBpB6gB,EAAW,aACfhf,KAAM,MACN8d,OAAQwC,EACRniB,KAAM,CACJ+gB,SAAU,CACR,CACEE,YAAa,EACbjhB,KAAMmiB,EAAMjV,KAAI,SAACzJ,GAAD,OAAUzD,EAAKyD,MAC/Byd,YAAaiB,EAAMjV,KAAI,SAACzJ,EAAM2I,GAAP,OAAe,EAAK8V,SAAS9V,GAAK2I,UACzDD,gBAAiBqN,EAAMjV,KACrB,SAACzJ,EAAM2I,GAAP,OAAe,EAAK8V,SAAS9V,GAAK0S,iBAK1CqC,QA/BmB,CACnBzB,OAAQ,CACN/B,SAAS,EACThc,SAAU,SACVge,OAAQ,CACNxK,QAAS,GACTyK,SAAU,KAGdC,SAAU,CACRE,QAAQ,EACRqC,KAAM,QACNzgB,SAAU,aAoBT,EAAKoR,MAAM8N,aAGhB,EAAKjI,MAAQ,IAAIwI,KAAa,EAAKC,UAAUrY,QAAS6X,IAxDrC,EA2DnBxE,YAAc,WAAO,IACXrc,EAAS,EAAK+S,MAAd/S,KACFmiB,EAAQlhB,OAAOC,KAAKlB,GACpBghB,EAAY,CAChBrB,OAAQwC,EACRpB,SAAU,CACR,CACEE,YAAa,EACbjhB,KAAMmiB,EAAMjV,KAAI,SAACzJ,GAAD,OAAUzD,EAAKyD,MAC/Byd,YAAaiB,EAAMjV,KAAI,SAACzJ,EAAM2I,GAAP,OAAe,EAAK8V,SAAS9V,GAAK2I,UACzDD,gBAAiBqN,EAAMjV,KACrB,SAACzJ,EAAM2I,GAAP,OAAe,EAAK8V,SAAS9V,GAAK0S,iBAK1C,EAAKlG,MAAM5Y,KAAOghB,EAClB,EAAKpI,MAAMuI,QAAQM,WAAY,EAC/B,EAAK7I,MAAM8I,UA7EM,EAgFnBrQ,OAAS,WACH,EAAKgQ,UAAUrY,SAAW,EAAK4P,OAAO,EAAKyD,cADlC,MAEa,EAAKtJ,MAAvBsC,EAFK,EAELA,MAAOsM,EAFF,EAEEA,OACf,OACE,yBAAKzkB,UAAU,mBACb,4BACEykB,OAAQA,GAAU,GAClBtM,MAAOA,GAAS,GAChBc,IAAK,EAAKkL,cAtFhB,EAAKA,UAAYxP,IAAM+P,YAFN,E,UADE/P,IAAMC,WCPduQ,G,kDA7Bb,aAAe,IAAD,8BACZ,gBAOFvR,qBAAuB,WACrBC,EAAMC,eAAe,uBAAwB,EAAKC,UATtC,EAYdA,QAAU,WACR,IAAM+P,EAAYjQ,EAAMjB,sBACxB,EAAKoB,SAAS,CAAE8P,eAdJ,EAiBd3P,OAAS,WAAO,IACN2P,EAAc,EAAK5P,MAAnB4P,UACR,OACE,kBAACnG,GAAA,EAAD,CAAM3d,UAAU,SACd,kBAAC2d,GAAA,EAAKmH,KAAN,KACE,kBAAC,GAAD,CAAWhiB,KAAMghB,OApBvB,EAAK5P,MAAQ,CACX4P,UAAWjQ,EAAMjB,uBAEnBiB,EAAMa,GAAG,uBAAwB,EAAKX,SAL1B,E,UADaY,IAAMC,W,0CCU7BwQ,GAAe,CACnBC,UAAW,SAACC,EAAD,OAAiCnN,EAAjC,EAAkBoN,YAAepN,MAAjC,mBAAC,eACPmN,GADM,IAETnN,MAAOA,MASX,SAASqN,GAAT,GAAyE,IAA5CC,EAA2C,EAA3CA,eAAgBxB,EAA2B,EAA3BA,QAAYyB,EAAe,6CACtE,OACE,kBAAC,KAAD,eACE5P,SAAU,SAAC6P,GAAD,OACRF,EAAe5gB,MAAMC,QAAQ6gB,GAAOA,EAAOA,EAAW,CAACA,GAAN,KAEnDC,SAAO,EACP3B,QAASA,EACT4B,OAAQT,IACJM,ICpCV,ICeMI,GAAUC,gBAAK,YAAwD,IAArDhW,EAAoD,EAApDA,MAAO+E,EAA6C,EAA7CA,MAA6C,IAAtChS,KAAQkjB,EAA8B,EAA9BA,QAA8B,IAArB5a,MAEnD2E,GADMxJ,EADkE,EAClEA,KAAM0f,EAD4D,EAC5DA,IAAK5W,EADuD,EACvDA,UAAWD,EAD4C,EAC5CA,QAASL,EADmC,EACnCA,mBAAoBG,EADe,EACfA,IAGvDgX,EAAU1U,OAAOjL,GACrB2f,EAAUA,EAAQlhB,OAAS,GAAKkhB,EAAQlT,UAAU,EAAG,IAAMkT,EAC3D,IAAIC,EAAe3U,OAAOnC,GAAW,GAC7B+W,EAAkCJ,EAAlCI,SAAUC,EAAwBL,EAAxBK,UAAWC,EAAaN,EAAbM,SAC7B,OACE,oBACEtmB,UAAS,kBAAawR,OACpBnC,GACAkX,cAFO,4BAGTC,IAAK,CAAEzO,UAAW,IAClBjD,MAAOA,GAEP,aAACwC,GAAA,EAAD,KACE,aAACC,GAAA,EAAD,CACEvX,UAAU,6CACVwmB,IAAK,CAAExR,SAAUoR,IAEjB,oBAAKpmB,UAAU,kBAAkBkP,GACjC,oBAAKlP,UAAU,WAAW+O,IAE5B,aAACwI,GAAA,EAAD,CACEvX,UAAU,mEACVwmB,IAAK,CAAExR,SAAUqR,IAEhBH,EAJH,IAIa9W,EAJb,IAIuB+W,EAJvB,MAMA,aAAC5O,GAAA,EAAD,CACEvX,UAAU,OACVwmB,IAAK,CACHzO,UAAW,GACX0I,QAAS,QACTrI,SAAU,SACVqO,aAAc,WACdtO,MAAOmO,EACPI,WAAY,SACZC,aAAc,EACdC,YAAa,IAGdX,OAKRY,M,UC1CGC,GAAS,CACb,OACA,UACA,UACA,QACA,WACA,SAwBIC,GAAoB,CAAEC,OADb,CAAC,WAAY,WAAY,MAAO,OAAQ,SAAU,aAU3DC,GAAU,SAAClX,EAAejN,GAAhB,OACdA,EAAKsI,MAAM2E,GAAO7L,IAKdgjB,GAAW,SAAC1M,GAAD,OAHS2M,EAIP3M,EAHjB3V,MAAMC,QAAQqiB,GAAaA,EAAYtiB,MAAMQ,KAAK8hB,IAG3BnX,KAAI,SAACiF,GAAD,MAAW,CAAE5Q,MAAO4Q,EAAM3S,MAAO2S,MAJrC,IAACkS,GAM1B,SAASC,GAAT,GAAmD,IAA9BtkB,EAA6B,EAA7BA,KAAMukB,EAAuB,EAAvBA,aAAuB,EACA1S,IAAM2S,UAAS,GADf,mBACzCC,EADyC,KACvBC,EADuB,KAE1CC,EAAgBC,mBAF0B,EAGF/S,IAAM2S,SAAgB,IAHpB,mBAGzCK,EAHyC,KAGxBC,EAHwB,OAIJjT,IAAM2S,SAAgB,IAJlB,mBAIzCO,EAJyC,KAIzBC,EAJyB,OAKRnT,IAAM2S,SAAS,IALP,mBAKzCS,EALyC,KAK3BC,EAL2B,OAMDC,yBAC7CnlB,EACAikB,IAFMxK,EANwC,EAMxCA,OAAQZ,EANgC,EAMhCA,cAAeuM,EANiB,EAMjBA,YAIzBC,EC9ER,SAAqB7lB,GACnB,IAAM2W,EAAMtE,IAAM+S,SAMlB,OAJA/S,IAAMyT,WAAU,WACdnP,EAAInN,QAAUxJ,IACb,CAACA,IAEG2W,EAAInN,QDuEYuc,CAAYvlB,EAAKkC,QACxCojB,qBAAU,WACJD,GAAkBA,EAAkB,GACtCD,EAAY,CAACplB,EAAKqlB,EAAkB,OAGrC,CAACA,IAEJ,IAEMG,IAFaP,EAAepM,EAAgB7Y,IAEhB,IAAIylB,QAAO,SAAC7f,GAAD,OFxF7CuM,EEyFevM,EFxFf8f,EEwF8B,CAC1BnZ,UAAWwY,EAAe7X,KAAI,qBAAG1N,SACjCiE,KAAMohB,EAAgB3X,KAAI,qBAAG1N,UFxFjCyB,OAAO+M,QAAQ0X,GAASjH,QAAO,SAACkH,EAAKC,GAAU,IAAD,cACvBA,EADuB,GACrC3X,EADqC,KAChCzO,EADgC,KAE5C,OAAOmmB,GAAO5jB,MAAMC,QAAQxC,GACP,IAAjBA,EAAM0C,QAEJ1C,EAAMgN,SAAS2F,EAAKlE,IACtBzO,IAAU2S,EAAKlE,MAClB,GAXgB,IACnBkE,EACAuT,KE6FMG,EAAU7lB,EAAKye,QAAO,SAACkH,EAAKC,GAAN,OAAeD,EAAI9L,IAAI+L,EAAKniB,QAAO,IAAIqiB,KAOnE,OANAR,qBAAU,WACJX,EAAc3b,SAAWyb,GAC3BE,EAAc3b,QAAQ+c,aAAaP,EAAWtjB,UAE/C,CAACsjB,EAAWtjB,OAAQuiB,IAGrB,aAAC5J,GAAA,EAAD,CAAM3d,UAAU,QACd,aAAC2d,GAAA,EAAKmL,OAAN,CAAa9oB,UAAU,OACrB,aAACsX,GAAA,EAAD,KACE,aAACC,GAAA,EAAD,CAAKjB,GAAG,KACN,aAACkP,GAAD,CACEvB,QAASiD,GAASyB,GAClBlD,eAAgBmC,EAChB5nB,UAAU,6CACVgZ,YAAY,mBAEd,aAACwM,GAAD,CACEvB,QAASiD,GAASJ,IAClBrB,eAAgBqC,EAChB9nB,UAAU,6CACVgZ,YAAY,eAEd,aAAC6E,GAAA,EAAD,CACE1E,GAAIgB,KACJhP,MAAM,gBACNjH,GAAG,sBAEH,aAACtD,GAAA,EAASkd,KAAV,CAAe5d,QAAS,kBAAMmnB,EAAa,SAA3C,mBAGA,aAACzmB,GAAA,EAASkd,KAAV,CAAe5d,QAAS,kBAAMmnB,EAAa,UAA3C,oBAGA,aAACzmB,GAAA,EAASkd,KAAV,CAAe5d,QAAS,kBAAMmnB,EAAa,SAA3C,qBAKJ,aAAC9P,GAAA,EAAD,CAAKjB,GAAG,KACN,aAACsC,GAAA,EAAKG,QAAN,CACEC,YAAY,iBACZ1W,MAAOylB,EACPjS,SAAU,SAACxH,GACTiO,EAAOjO,EAAEkJ,OAAOlV,OAChB0lB,EAAgB1Z,EAAEkJ,OAAOlV,aAMnC,aAACqb,GAAA,EAAKmH,KAAN,CACE9kB,UAAU,sCACVkE,GAAG,yBAEDqjB,GACA,oBACErnB,QAAS,kBACPunB,EAAc3b,QAAQ+c,aAAaP,EAAWtjB,SAEhDhF,UAAS,yBAET,kBAAGA,UAAU,kBAAb,kBANF,mBASF,aAAC,KAAD,MACG,YAAwB,IAArBykB,EAAoB,EAApBA,OAAQtM,EAAY,EAAZA,MAGJmO,EAAWnO,EAAK,IACtB,OACE,aAAC,KAAD,CACE4Q,SAAU,YAAuB,IAApBC,EAAmB,EAAnBA,aACXxB,GACGwB,EAAevE,GA1HnB,GA0HwC6D,EAAWtjB,SAAW,IAG/Dyf,OAAQA,EACRtM,MAAOA,EACP8Q,UAAWX,EAAWtjB,OACtBkkB,SAhIC,GAiIDjC,QAASA,GACTkC,SAAU,CACR/d,MAAOkd,EACPtC,QAAS,CAAEI,SAjBA,IAiBUC,UAhBT,IAgBoBC,aAElCrN,IAAKwO,GAEJ3B,S,cEzGFsD,G,kDArEb,aAAe,IAAD,8BACZ,gBASFxV,qBAAuB,WACrBC,EAAMC,eAAe,YAAa,EAAKC,SACvCF,EAAMa,GAAG,cAAe,EAAKX,UAZjB,EAcdA,QAAU,WACR,IAAMjJ,EAAS+I,EAAMxB,UAAU,QACzB3G,EAAOmI,EAAMrB,UACnB,EAAKwB,SAAS,CAAElJ,SAAQY,UAjBZ,EAmBd2b,aAAe,SAACgC,GACd,IAAI3d,EAAO,EAAKwI,MAAMxI,KAClBtC,EAAU,GACC,SAAXigB,EAAmBjgB,EAAU,MACb,QAAXigB,IACPjgB,EACE,+GAEJ,IAAK,IAAIrE,EAAI,EAAGA,EAAI2G,EAAK1G,SAAUD,EAAG,CACpC,IAAI4C,EAAM+D,EAAK3G,GAEbqE,GADa,SAAXigB,EAEAnhB,KAAKiT,UAAUzP,EAAK3G,IAApB,UAA6BA,EAAI2G,EAAK1G,OAAS,EAAI,IAAM,GAAzD,MACgB,QAAXqkB,EACA,UAAO1hB,EAAIqH,QAAX,aAAuBrH,EAAIoH,mBAA3B,aAAkDpH,EAAIpB,KAAtD,YAA8DoB,EAAIyH,QAAlE,YAA6EzH,EAAI0H,UAAjF,aAA+F1H,EAAIse,IAAnG,aAA2Gte,EAAI2hB,SAA/G,YAA2H3hB,EAAI4hB,OAA/H,YAAyI5hB,EAAInJ,OAA7I,YAAuJmJ,EAAI6hB,SAA3J,YAAuK7hB,EAAI8hB,SAA3K,MAEA,UAAO9hB,EAAIoH,mBAAX,YAAiCpH,EAAIpB,KAArC,YAA6CoB,EAAIyH,QAAjD,aAA6DzH,EAAI0H,UAAjE,cAAgF1H,EAAIse,IAApF,MAEI,SAAXoD,IAAmBjgB,GAAW,KAElC,IAAIkgB,EAAQ,oBAAgB,IAAIpc,KAApB,YAA8Bmc,GACtCK,EAAO,IAAIC,KAAK,CAACvgB,GAAU,CAAEzE,KAAM,6BACvCilB,kBAAOF,EAAMJ,IAzCD,EA2CdnV,OAAS,WACP,OACE,kBAAC0V,GAAA,EAAD,CAAWzV,OAAK,EAACpU,UAAU,+BACzB,yBAAKA,UAAU,QACb,kBAACsX,GAAA,EAAD,CAAKoJ,WAAS,EAAC1gB,UAAU,oBACvB,kBAAC2gB,GAAD,CACExV,MAAM,aACN6O,SAAS,UACTha,UAAU,uBAGd,kBAACsX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKjB,GAAG,KAAKtW,UAAU,QACrB,kBAAC,GAAD,OAEF,kBAACuX,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,QACpB,kBAAC,GAAD,QAGJ,kBAAConB,GAAD,CAAWC,aAAc,EAAKA,aAAcvkB,KAAM,EAAKoR,MAAMxI,UA5DnE,EAAKwI,MAAQ,CACXpJ,OAAQ+I,EAAMxB,UAAU,QACxB3G,KAAMmI,EAAMrB,WAEdqB,EAAMa,GAAG,YAAa,EAAKX,SAC3BF,EAAMa,GAAG,cAAe,EAAKX,SAPjB,E,UADOY,IAAMC,WCWdkV,G,uKAhBH,IACAtd,EAAYiH,KAAKoC,MAAjBrJ,QACR,OACE,kBAAC,IAAD,CAAMxM,UAAU,aACd,wBAAIA,UAAU,sDACZ,2BAAIwM,EAAQC,YAEd,wBAAIzM,UAAU,gBAAgBwM,EAAQE,SACtC,wBAAI1M,UAAU,iDAAd,qB,GATkB2U,IAAMC,WC4EjBmV,G,kDAzEb,WAAYlU,GAAQ,IAAD,8BACjB,cAAMA,IA4BRsJ,YAAc,WAAO,IACXxS,EAAa,EAAKkJ,MAAlBlJ,SACFqd,EAAwD,KAA7Crd,EAASG,SAAWH,EAASE,SAAW,GACrDod,EAAU,CACZpG,SAAU,CACR,CACEqG,iBAAkB,OAClBpnB,KAAM,CAACknB,EAAS,IAAMA,GACtBpS,gBAAiB,CAAC,UAAW,aAGjC6K,OAAQ,CAAC,UAAW,YAEtB,EAAK/G,MAAM5Y,KAAOmnB,EAClB,EAAKvO,MAAM8I,UAxCX,EAAKL,UAAYxP,IAAM+P,YAHN,E,gEAOjBjR,KAAKiI,MAAQ,IAAIyO,KAAM1W,KAAK0Q,UAAUrY,QAAS,CAC7CnH,KAAM,WACN7B,KAAM,CACJ+gB,SAAU,CACR,CACEqG,iBAAkB,OAClBpnB,KAAM,CAAC,EAAG,KACV8U,gBAAiB,CAAC,UAAW,aAGjC6K,OAAQ,CAAC,UAAW,YAEtBwB,QAAS,CACPzB,QAAQ,EACRD,YAAY,EACZ6H,iBAAkB,GAClB7F,WAAW,EACX5B,UAAU,O,+BAsBN,IACAhW,EAAa8G,KAAKoC,MAAlBlJ,SAER,OADI8G,KAAKiI,OAAOjI,KAAK0L,cAEnB,kBAAC,IAAD,CAAMnf,UAAU,aACd,wBAAIA,UAAU,iDACZ,wCAEF,yBAAKA,UAAU,2CACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,iDAAd,WAGA,wBAAIA,UAAU,QAAQ2M,EAASC,iBAGjC,4BACEqM,IAAKxF,KAAK0Q,UACVrP,MAAO,CAAEqD,MAAO,QAASsM,OAAQ,SACjCzkB,UAAU,kB,GAlEK2U,IAAMC,WCA3ByV,G,kDACJ,WAAYxU,GAAQ,IAAD,8BACjB,cAAMA,IAqFRsJ,YAAc,WAAO,IACX7S,EAAY,EAAKuJ,MAAM9I,MAAvBT,QACJge,EAAY,2BACX,EAAK5O,MAAM5Y,MACX,CACD+gB,SAAU,CACR,CACExf,MAAO,QACPkI,KAAM,QACNwX,YAAa,IACbnM,gBAAiB,0BACjBoM,YAAa,UACblhB,KAAMwJ,MAKVie,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQle,IACvBoe,EAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQle,IAEvBse,EAAaL,EAAWG,EAE5B,EAAKhP,MAAMuI,QAAQf,OAAOI,MAAM,GAAGD,MAAMwH,aACvCN,EAAwB,GAAbK,EACb,EAAKlP,MAAMuI,QAAQf,OAAOI,MAAM,GAAGD,MAAMK,aACvCgH,EAAwB,GAAbE,EACb,EAAKlP,MAAM5Y,KAAOwnB,EAClB,EAAK5O,MAAM8I,UA/GX,EAAKL,UAAYxP,IAAM+P,YAFN,E,gEAKE,IACXpY,EAAYmH,KAAKoC,MAAM9I,MAAvBT,QACJie,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQle,IACvBoe,EAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQle,IAEvBse,EAAaL,EAAWG,EACtBtI,EAAY,2BACb,CACDE,qBAAqB,EACrBC,YAAY,EACZgC,WAAW,EACX/B,OAAQ,CACN/B,SAAS,GAEXkC,SAAU,CACRC,SAAS,EACTC,QAAQ,GAEVC,SAAU,CACRC,MAAO,CACLC,OAAQ,GAEV8H,KAAM,CACJC,QAAS,MAGb7H,OAAQ,CACNC,MAAO,CACL,CACEC,WAAW,EACXC,MAAO,CACL5C,SAAS,KAIf6C,MAAO,CACL,CACEF,WAAW,EACX4H,YAAY,EACZ3H,MAAO,CACL5C,SAAS,EAGToK,aAAcN,EAAwB,GAAbK,EACzBlH,aAAcgH,EAAwB,GAAbE,QAMhCnX,KAAKoC,MAAMuM,cAGVuB,EAAW,2BACZ,CACDhf,KAAM,OACN7B,KAAK,2BACA,CACD2f,OAAQ,IAAI5d,MAAMyH,EAAQtH,QAAQuH,KAAK,QAEtC,CACDsX,SAAU,CACR,CACExf,MAAO,QACPkI,KAAM,QACNwX,YAAa,IACbnM,gBAAiB,0BACjBoM,YAAa,UACblhB,KAAMwJ,MAKd2X,QAAS7B,IAER3O,KAAKoC,MAAM8N,aAGhBlQ,KAAKiI,MAAQ,IAAIyO,KAAM1W,KAAK0Q,UAAUrY,QAAS6X,K,+BAiCvC,IACA5W,EAAU0G,KAAKoC,MAAf9I,MAER,OADI0G,KAAKiI,OAAOjI,KAAK0L,cAEnB,kBAAC,IAAD,CAAMnf,UAAU,0BACd,yBAAKA,UAAU,6BACb,wBAAIA,UAAU,gEACZ,qCAEF,wBAAIA,UAAU,gBAAgB+M,EAAMjB,SACpC,wBAAI9L,UAAU,uDACX+M,EAAMC,KADT,YAIF,4BAAQyX,OAAO,MAAMxL,IAAKxF,KAAK0Q,UAAWnkB,UAAS,uB,GAnInC2U,IAAMC,WAyI9ByV,GAAUzT,aAAe,CACvBvS,MAAO,gBACP/B,MAAO,KACP2oB,WAAY,QACZC,UAAU,EACVC,UAAU,EACVC,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDtH,UAAW,CACT,CACEzf,MAAO,QACPkI,KAAM,QACNwX,YAAa,IACbnM,gBAAiB,0BACjBoM,YAAa,UACblhB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAKhBunB,UC2BAgB,G,kDA9Kb,WAAYxV,GAAQ,IAAD,8BACjB,cAAMA,IAORyV,mBAAqB,SAACC,GAChB,EAAK1V,MAAM2V,aAAeD,EAAUC,YAAY,EAAKrM,eATxC,EAYnBnB,kBAAoB,WAAO,IACjByN,EAAQ,EAAKvX,MAAbuX,IACF3H,EAAY,EAAKjO,MAAM4V,GAEvBrJ,EAAY,eACb,CACDmC,WAAW,EACX5B,SAAU,CACRxB,UAAW,CACThW,MAAO,SAAUugB,EAAa5oB,GAC5B,MAAM,QAAN,OAAe4oB,EAAY,GAAGC,SAEhCtnB,MAAO,SAACqnB,EAAa5oB,GAAU,IACvB2oB,EAAQ,EAAKvX,MAAbuX,IACFpnB,EAAK,UAAMvB,EAAK+gB,SAAS6H,EAAYE,cAAcvnB,MAA9C,aACC,UAARonB,EACIvlB,EAAYwlB,EAAYppB,OACxBopB,EAAYppB,OAElB,OAAO+B,GAETwnB,WAAY,SAACH,EAAa5oB,GAAU,IAC5B2oB,EAAQ,EAAKvX,MAAbuX,IAIN,MADE,iBAFgB,EAAK5V,MAAM4V,GAEEC,EAAY3b,OAAOX,WAKxD8T,OAAQ,CACNC,MAAO,CACL,CACE2I,SAAS,EACT1I,WAAW,IAGfE,MAAO,CACL,CACEwI,SAAS,EACTzI,MAAO,CACL0I,aAAc,EAAKC,uBAQ/B,EAAKtQ,MAAQ,IAAIyO,KAAM,EAAKhG,UAAUrY,QAAS,CAC7CnH,KAAM,MACNsf,QAAS7B,EACTtf,KAAM,CACJ2f,OAAQqB,EAAU9T,KAAI,SAACic,GAAD,OAAOA,EAAE7nB,QAC/Byf,SAAU,CACR,CACExf,MAAO,WACPkI,KAAM,QACNzJ,KAAMghB,EAAU9T,KAAI,SAACic,GAAD,OAAOA,EAAE7b,QAC7BwH,gBAAiB,UACjBoM,YAAa,UACbkI,qBAAsB,UACtBC,0BAA2B,UAC3BpI,YAAa,KAEf,CACE1f,MAAO,eACPkI,KAAM,QACNzJ,KAAMghB,EAAU9T,KAAI,SAACic,GAAD,OAAOA,EAAE5b,YAC7BuH,gBAAiB,UACjBoM,YAAa,UACbkI,qBAAsB,UACtBC,0BAA2B,UAC3BpI,YAAa,UArFJ,EA4FnB5E,YAAc,WAAO,IACXsM,EAAQ,EAAKvX,MAAbuX,IACF3H,EAAY,EAAKjO,MAAM4V,GAC7B,EAAK/P,MAAM5Y,KAAO,CAChB2f,OAAQqB,EAAU9T,KAAI,SAACic,GAAD,OAAOA,EAAE7nB,QAC/Byf,SAAU,CACR,CACExf,MAAM,GAAD,OAAKonB,EAAL,SACLlf,KAAM,QACNzJ,KAAMghB,EAAU9T,KAAI,SAACic,GAAD,OAAOA,EAAE7b,QAC7BwH,gBAAiB,UACjBoM,YAAa,UACbkI,qBAAsB,UACtBC,0BAA2B,UAC3BpI,YAAa,KAEf,CACE1f,MAAM,GAAD,OAAKonB,EAAL,aACLlf,KAAM,QACNzJ,KAAMghB,EAAU9T,KAAI,SAACic,GAAD,OAAOA,EAAE5b,YAC7BuH,gBAAiB,UACjBoM,YAAa,UACbkI,qBAAsB,UACtBC,0BAA2B,UAC3BpI,YAAa,OAInB,EAAKrI,MAAM8I,UAxHM,EA2HnBwH,iBAAmB,SAAC3nB,GAElB,MAAY,UADI,EAAK6P,MAAbuX,IACoBvlB,EAAY7B,GACjCA,EAAQ,IAAR,WAAkBA,EAAQ,KAAMgC,QAAQ,GAAxC,KAAgDhC,GA9HtC,EAiInB+nB,OAAS,SAACX,GACR,EAAKzX,SAAS,CAAEyX,OAAO,EAAKtM,cAhI5B,EAAKgF,UAAYxP,IAAM+P,YACvB,EAAKxQ,MAAQ,CACXuX,IAAK,YAJU,E,qDAqIT,IAAD,OACCA,EAAQhY,KAAKS,MAAbuX,IACR,OACE,kBAAC,IAAD,CAAMjqB,OAAK,EAACxB,UAAU,cACpB,kBAAC,IAAD,CAAYA,UAAU,iBACpB,wBAAIA,UAAU,OAAd,iBAGF,kBAAC,IAAD,CAAUA,UAAU,QAClB,kBAAC,IAAD,CAAKA,UAAU,+BACb,kBAAC,IAAD,CAAKkX,GAAG,IAAIlX,UAAU,2BACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEM,MAAM,QACN6U,OAAgB,aAARsW,EACRvrB,QAAS,kBAAM,EAAKksB,OAAO,cAH7B,YAOA,kBAAC,IAAD,CACE9rB,MAAM,QACN6U,OAAgB,UAARsW,EACRvrB,QAAS,kBAAM,EAAKksB,OAAO,WAH7B,YAUN,4BACE3H,OAAO,MACPxL,IAAKxF,KAAK0Q,UACVrP,MAAO,CAAEE,SAAU,mBACnBhV,UAAU,sC,GAvKK2U,IAAMC,WCR3ByX,G,kDACJ,WAAYxW,GAAQ,IAAD,8BACjB,cAAMA,IAqFRsJ,YAAc,WAAO,IACX7S,EAAY,EAAKuJ,MAAMxJ,IAAvBC,QACJge,EAAY,2BACX,EAAK5O,MAAM5Y,MACX,CACD+gB,SAAU,CACR,CACExf,MAAO,QACPkI,KAAM,QACNwX,YAAa,IACbnM,gBAAiB,2BACjBoM,YAAa,UACblhB,KAAMwJ,MAKVie,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQle,IACvBoe,EAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQle,IAEvBse,EAAaL,EAAWG,EAE5B,EAAKhP,MAAMuI,QAAQf,OAAOI,MAAM,GAAGD,MAAMwH,aACvCN,EAAwB,GAAbK,EACb,EAAKlP,MAAMuI,QAAQf,OAAOI,MAAM,GAAGD,MAAMK,aACvCgH,EAAwB,GAAbE,EACb,EAAKlP,MAAM5Y,KAAOwnB,EAClB,EAAK5O,MAAM8I,UA/GX,EAAKL,UAAYxP,IAAM+P,YAFN,E,gEAKE,IACXpY,EAAYmH,KAAKoC,MAAMxJ,IAAvBC,QACJie,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQle,IACvBoe,EAAWF,KAAKG,IAAL,MAAAH,KAAI,YAAQle,IAEvBse,EAAaL,EAAWG,EACtBtI,EAAY,2BACb,CACDE,qBAAqB,EACrBC,YAAY,EACZgC,WAAW,EACX/B,OAAQ,CACN/B,SAAS,GAEXkC,SAAU,CACRC,SAAS,EACTC,QAAQ,GAEVC,SAAU,CACRC,MAAO,CACLC,OAAQ,GAEV8H,KAAM,CACJC,QAAS,MAGb7H,OAAQ,CACNC,MAAO,CACL,CACEC,WAAW,EACXC,MAAO,CACL5C,SAAS,KAIf6C,MAAO,CACL,CACEF,WAAW,EACX4H,YAAY,EACZ3H,MAAO,CACL5C,SAAS,EAGToK,aAAcN,EAAwB,GAAbK,EACzBlH,aAAcgH,EAAwB,GAAbE,QAMhCnX,KAAKoC,MAAMuM,cAGVuB,EAAW,2BACZ,CACDhf,KAAM,OACN7B,KAAK,2BACA,CACD2f,OAAQ,IAAI5d,MAAMyH,EAAQtH,QAAQuH,KAAK,QAEtC,CACDsX,SAAU,CACR,CACExf,MAAO,QACPkI,KAAM,QACNwX,YAAa,IACbnM,gBAAiB,2BACjBoM,YAAa,UACblhB,KAAMwJ,MAKd2X,QAAS7B,IAER3O,KAAKoC,MAAM8N,aAGhBlQ,KAAKiI,MAAQ,IAAIyO,KAAM1W,KAAK0Q,UAAUrY,QAAS6X,K,+BAiCvC,IACAtX,EAAQoH,KAAKoC,MAAbxJ,IAER,OADIoH,KAAKiI,OAAOjI,KAAK0L,cAEnB,kBAAC,IAAD,CAAMnf,UAAU,0BACd,yBAAKA,UAAU,6BACb,wBAAIA,UAAU,gEACZ,mCAEF,wBAAIA,UAAU,gBAAgBqM,EAAIP,SAClC,wBAAI9L,UAAU,uDAAd,mBAIF,4BAAQykB,OAAO,MAAMxL,IAAKxF,KAAK0Q,UAAWnkB,UAAS,uB,GAnIxB2U,IAAMC,WAyIzCyX,GAAqBzV,aAAe,CAClCvS,MAAO,gBACP/B,MAAO,KACP2oB,WAAY,QACZC,UAAU,EACVC,UAAU,EACVC,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDtH,UAAW,CACT,CACEzf,MAAO,QACPkI,KAAM,QACNwX,YAAa,IACbnM,gBAAiB,sBACjBoM,YAAa,UACblhB,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAKhBupB,UClGAC,G,kDApDb,aAAe,IAAD,8BACZ,gBAOF1Y,qBAAuB,WACrBC,EAAMC,eAAe,cAAe,EAAKC,UAT7B,EAWdA,QAAU,WACR,IAAM3H,EAAWyH,EAAMhB,cACvB,EAAKmB,SAAS,CAAE5H,cAbJ,EAed+H,OAAS,WAAO,IACN/H,EAAa,EAAK8H,MAAlB9H,SACR,OACE,kBAACyd,GAAA,EAAD,CAAWzV,OAAK,EAACpU,UAAU,+BACzB,yBAAKA,UAAU,QACb,kBAACsX,GAAA,EAAD,CAAKoJ,WAAS,EAAC1gB,UAAU,oBACvB,kBAAC2gB,GAAD,CACExV,MAAM,OACN6O,SAAS,UACTha,UAAU,uBAGd,kBAACsX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,QACpB,kBAAC,GAAD,CAAawM,QAASJ,EAASI,WAEjC,kBAAC+K,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,QACpB,kBAAC,GAAD,CAAc2M,SAAUP,EAASO,YAEnC,kBAAC4K,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,QACpB,kBAACusB,GAAD,CAAkBlgB,IAAKD,EAASC,OAElC,kBAACkL,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,QACpB,kBAAC,GAAD,CAAW+M,MAAOX,EAASW,UAG/B,kBAAC,GAAD,CACEI,SAAUf,EAASe,SACnBC,MAAOhB,EAASgB,MAChBoe,WAAYpf,EAASa,qBA1C7B,EAAKiH,MAAQ,CACX9H,SAAUyH,EAAMhB,eAElBgB,EAAMa,GAAG,cAAe,EAAKX,SALjB,E,UADOY,IAAMC,W,UCVhB4X,GAAc,CACzB,CACEnoB,MAAO,OACP2U,YAAa,UACb1W,MAAO,QAET,CACE+B,MAAO,OACP2U,YAAa,OACb1W,MAAO,SAIEmqB,GAAkB,CAC7B,CACEpoB,MAAO,MACP2U,YAAa,cACb1W,MAAO,OAET,CACE+B,MAAO,UACP2U,YAAa,kBACb1W,MAAO,WAET,CACE+B,MAAO,OACP2U,YAAa,aACb1W,MAAO,QAET,CACE+B,MAAO,WACP2U,YAAa,mBACb1W,MAAO,YAET,CACE+B,MAAO,QACP2U,YAAa,kBACb1W,MAAO,UClCI,SAASoqB,GAAT,GAMX,IAAD,IALDC,eAKC,MALS,EAKT,EAJDtoB,EAIC,EAJDA,MACA/B,EAGC,EAHDA,MACA0W,EAEC,EAFDA,YACAlD,EACC,EADDA,SAEA,OACE,kBAAC,IAAD,CAAKQ,GAAIqW,EAAS3sB,UAAU,cAC1B,+BAAQqE,GACR,kBAAC,IAAD,CAAW2U,YAAaA,EAAa1W,MAAOA,EAAOwT,SAAUA,KCmGpD8W,OAhGf,WAAyB,IAAD,EACUtF,mBAASzT,EAAMzB,eADzB,mBACfya,EADe,KACLC,EADK,OAEQxF,mBAAS,IAFjB,mBAEfyF,EAFe,KAENC,EAFM,OAGU1F,oBAAS,GAHnB,mBAGf2F,EAHe,KAGLC,EAHK,KAKtB,SAASnZ,IACP,IAAM8Y,EAAWhZ,EAAMzB,cACvB0a,EAAYD,GACZG,EAAW,IAWb,SAASG,EAAcC,EAAS9qB,GAC9B,IAAM+qB,EAAU,eAAQN,GACxBM,EAAWD,GAAW9qB,EACtB0qB,EAAWK,GAgBb,OA3BAjF,qBAAU,WAGR,OAFAvU,EAAMa,GAAG,kBAAmBX,GAErB,WACLF,EAAMC,eAAe,kBAAmBC,MAEzC,IAsBD,kBAAC,IAAD,CAAMvS,OAAK,EAACxB,UAAU,QACpB,kBAAC,IAAD,CAAYA,UAAU,iBACpB,wBAAIA,UAAU,OAAd,2BAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKstB,MAAI,GACNd,GAAYxc,KAAI,gBAAG3L,EAAH,EAAGA,MAAO2U,EAAV,EAAUA,YAAa1W,EAAvB,EAAuBA,MAAvB,OACf,kBAACoqB,GAAD,CACE3b,IAAKzO,EACL+B,MAAOA,EACP2U,YAAaA,EACb1W,MAAOA,KAASyqB,EAAUA,EAAQzqB,GAASuqB,EAASvqB,GACpDwT,SAAU,SAACxH,GAAD,OAAO6e,EAAc7qB,EAAOgM,EAAEkJ,OAAOlV,cAIrD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK4X,GAAG,KACN,4BACEqT,gBAAc,iBACdC,gBAAeP,EACf/sB,QA3Bd,WACEgtB,GAAaD,IA2BDjtB,UAAU,mDAJZ,WAMW,IACT,uBAAGA,UAAU,kBACVitB,EAAW,gBAAkB,qBAIpC,kBAAC,IAAD,CAAK/S,GAAG,IAAIla,UAAU,cACpB,kBAAC,IAAD,CAAQE,QA9CpB,WACE,IAAM4B,EAAQ,2BAAQ+qB,GAAaE,GAEnCprB,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUzK,cACtBwK,QAAS9H,MAyCD,kBAGJ,kBAAC2rB,GAAA,EAAD,CAAUC,GAAIT,GACZ,yBAAK/oB,GAAG,kBACN,4BAAQlE,UAAU,2BAAlB,aACA,kBAAC,IAAD,CAAKstB,MAAI,GACNb,GAAgBzc,KAAI,gBAAG3L,EAAH,EAAGA,MAAO2U,EAAV,EAAUA,YAAa1W,EAAvB,EAAuBA,MAAvB,OACnB,kBAACoqB,GAAD,CACE3b,IAAKzO,EACL+B,MAAOA,EACP2U,YAAaA,EACb1W,MAAOA,KAASyqB,EAAUA,EAAQzqB,GAASuqB,EAASvqB,GACpDwT,SAAU,SAACxH,GAAD,OAAO6e,EAAc7qB,EAAOgM,EAAEkJ,OAAOlV,oBC9EpDqrB,G,4MAhBbxZ,OAAS,WACP,OACE,kBAAC0V,GAAA,EAAD,CAAWzV,OAAK,EAACpU,UAAU,+BACzB,kBAACsX,GAAA,EAAD,CAAKoJ,WAAS,EAAC1gB,UAAU,oBACvB,kBAAC2gB,GAAD,CACExV,MAAM,WACN6O,SAAS,UACTha,UAAU,uBAGd,kBAAC4tB,GAAD,Q,YAXmBjZ,IAAMC,WCHlB,eAAkC,IAA/BiZ,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,KAC7B1qB,EAAY+C,WAAWokB,KAAKwD,MAAe,GAATH,GAAe,GAAK,IAAIxnB,QAAQ,GAClE4C,EAAQglB,GAAS5qB,EAAW0qB,GAClC,OACE,0BACE/tB,UAAS,qBAAgB6tB,EAAS,WAAa,GAAtC,YACPC,EAAY,YAAc,GADnB,gBAIT,0BAAM9tB,UAAU,cAAc8tB,EAAY,cAAgB,IAC1D,0BAAM9tB,UAAU,cAAc6tB,EAASxqB,EAAY,IAClD4F,IAKDglB,GAAW,SAAC3J,EAAQyJ,GACxB,IAGIhpB,EAHAkE,EAAQ,GACRilB,EAAU1oB,SAAS8e,GACnB6J,EAAY7J,EAAS4J,EAHQ,aAM/B,IAAIne,EAAQhL,EACZkE,EAAMkG,KACJ,uBAAG4B,IAAKhM,EAAG/E,UAAU,iBAAiBE,QAAS,kBAAM6tB,EAAKhe,KAA1D,UAHJ,IAAKhL,EAAI,EAAGA,EAAImpB,IAAWnpB,EAAI,IAQ/B,GAAIopB,GAAa,GAAK,CACpB,IAAIpe,EAAQhL,EACZkE,EAAMkG,KACJ,uBAAG4B,IAAKhM,IAAK/E,UAAU,iBAAiBE,QAAS,kBAAM6tB,EAAKhe,KAA5D,cAIG,GAAIoe,GAAa,IAAM,CAC5B,IAAIpe,EAAQhL,EACZkE,EAAMkG,KACJ,uBAAG4B,IAAKhM,IAAK/E,UAAU,iBAAiBE,QAAS,kBAAM6tB,EAAKhe,KAA5D,cAKJ,IA5BiC,eA4BxBqe,GACP,IAAIre,EAAQhL,EACZkE,EAAMkG,KACJ,uBAAG4B,IAAKhM,IAAK/E,UAAU,iBAAiBE,QAAS,kBAAM6tB,EAAKhe,KAA5D,kBAHKqe,EAAInlB,EAAMjE,OAAQopB,EAAI,IAAKA,EAAI,IAQxC,OAAOnlB,GCjDM,eAAgB,IAYzB4kB,EAKAQ,EAjBY3c,EAAY,EAAZA,MAEdnL,EAQEmL,EARFnL,KACArC,EAOEwN,EAPFxN,GACAoqB,EAME5c,EANF4c,SACAC,EAKE7c,EALF6c,OACAC,EAIE9c,EAJF8c,YACAC,EAGE/c,EAHF+c,WACAC,EAEEhd,EAFFgd,aACAC,EACEjd,EADFid,WAaF,OATIjd,EAAM+c,YAAc/c,EAAMgd,eAC5Bb,EAASY,EAAaC,GAKCL,EADpBM,EACIA,EAAa,EAAa,8BAAOA,EAAP,YACpB,8BAAOA,EAAP,WAFY,0BAAM3uB,UAAU,cAAhB,cAKzB,kBAAC,IAAD,CAAMA,UAAU,gBAAgBqB,GAAE,sBAAiB6C,IACjD,kBAACyZ,GAAA,EAAD,CAAM3d,UAAU,wBACd,kBAAC2d,GAAA,EAAKmH,KAAN,CAAW9kB,UAAU,kBACnB,kBAACsX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAK2C,GAAG,KAAKla,UAAU,QACrB,yBAAKA,UAAU,aACZuG,EACA+nB,GACC,0BAAMnjB,MAAM,mBAAmBnL,UAAU,eACvC,uBAAGA,UAAU,qCAAb,mBAMN,yBAAKA,UAAU,gBAAgBuuB,IAEjC,kBAAChX,GAAA,EAAD,CAAKL,GAAG,KAAKlX,UAAU,kBACrB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,wBACf,yBAAKA,UAAU,mBAAmBwuB,OAK1C,kBAAC7Q,GAAA,EAAKiR,OAAN,CAAa5uB,UAAU,kBACpBquB,EACAR,GAAU,kBAACgB,GAAD,CAAYhB,OAAQA,QCiE1BiB,G,kDA1Gb,aAAe,IAAD,8BACZ,gBAWFlb,qBAAuB,WACrBC,EAAMC,eAAe,aAAc,EAAK5B,eAb5B,EAgBdA,aAAe,WACb,IAAMrH,EAASgJ,EAAM3B,eACrB,EAAK8B,SAAS,CAAEnJ,YAlBJ,EAqBdkkB,OAAS,SAACC,GACR,EAAKhb,SAAS,CAAEgb,YAAY,EAAKzS,SAtBrB,EAyBd0S,YAAc,SAAC3lB,GACb,EAAK0K,SAAS,CAAE1K,YAAY,EAAKiT,SA1BrB,EA6Bd2S,aAAe,SAACtT,GACd,EAAK5H,SAAS,CAAE4H,eAAe,EAAKW,SA9BxB,EAiCdA,OAAS,WAAO,IAAD,EAC+B,EAAKrI,MAAzC5K,EADK,EACLA,SAAUsS,EADL,EACKA,YAAaoT,EADlB,EACkBA,SAC/BrtB,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUpK,WACtBmK,QAAS,CAAEN,WAAUC,EAAGqS,EAAapS,KAAMwlB,MArCjC,EAyCd7a,OAAS,WAAO,IAAD,EACuC,EAAKD,MAAjDrJ,EADK,EACLA,OAAQmkB,EADH,EACGA,SAAU1lB,EADb,EACaA,SAAUsS,EADvB,EACuBA,YACpC,OACE,kBAACiO,GAAA,EAAD,CAAWzV,OAAK,EAACpU,UAAU,+BACzB,yBAAKA,UAAU,QACb,kBAACsX,GAAA,EAAD,CAAKtX,UAAU,oBACb,kBAAC2gB,GAAD,CACExV,MAAM,WACN6O,SAAS,YACTha,UAAU,sBAEZ,kBAACuX,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,WACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiB2E,KAAK,WACpB,kBAAC,IAAD,oBAEF,kBAAC,IAAD,CACEmR,SAAU,SAACxH,GAAD,OAAO,EAAK2gB,YAAY3gB,EAAEkJ,OAAOlV,QAC3CA,MAAOgH,GAEP,4BAAQhH,MAAM,OAAd,kBACA,4BAAQA,MAAM,gBAAd,UACA,4BAAQA,MAAM,UAAd,qBAKN,kBAACiV,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,WACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAiB2E,KAAK,WACpB,kBAAC,IAAD,iBAEF,kBAAC,IAAD,CACEmR,SAAU,SAACxH,GAAD,OAAO,EAAKygB,OAAOzgB,EAAEkJ,OAAOlV,QACtCA,MAAO0sB,GAEP,4BAAQ1sB,MAAM,aAAd,aACA,4BAAQA,MAAM,gBAAd,iBACA,4BAAQA,MAAM,UAAd,aAKN,kBAACiV,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,WACpB,kBAAC,IAAD,CACEgZ,YAAY,mBACZhZ,UAAU,4BACVsC,MAAOsZ,EACP9F,SAAU,SAACxH,GAAD,OAAO,EAAK4gB,aAAa5gB,EAAEkJ,OAAOlV,YAIlD,kBAACgV,GAAA,EAAD,KACGvT,OAAOC,KAAK6G,GAAQmF,KAAI,SAAChH,GAAD,OACvB,kBAACuO,GAAA,EAAD,CAAKxG,IAAK/H,EAASsN,GAAG,IAAItW,UAAU,QAClC,kBAACmvB,GAAD,CAAWzd,MAAO7G,EAAO7B,aA9FrC,EAAKkL,MAAQ,CACXrJ,OAAQgJ,EAAM3B,eACd8c,SAAU,YACV1lB,SAAU,MACVsS,YAAa,IAGf/H,EAAMa,GAAG,aAAc,EAAKxC,cAThB,E,UADMyC,IAAMC,WCVb,YAACiB,GAAW,IACjBuZ,EAAiBvZ,EAAMnE,MAAvB0d,aACR,OACE,kBAAC,IAAD,CAAMpvB,UAAU,yBACd,kBAAC,IAAD,CAAYA,UAAU,iCACpB,wBAAIA,UAAU,sBAAd,kBAEF,kBAAC,IAAD,CAAUA,UAAU,qBACjBovB,GACCA,EAAapf,KAAI,SAACqf,EAAOngB,GACvB,IAAMogB,EAAmB,IAAIpiB,KAAKmiB,EAAMrgB,SAASC,iBAC3CsgB,EAAYnpB,WAAWipB,EAAMhZ,KAAO,KAAKhQ,QAAQ,GACvD,OACE,yBAAK0K,IAAK7B,EAAKlP,UAAU,iCACvB,yBAAKA,UAAU,kCACb,uBAAGA,UAAU,kBAAb,UAEF,yBAAKA,UAAU,gCACb,0BAAMA,UAAU,cAAcsvB,GAC9B,+BACID,EAAMG,GADV,IACeH,EAAMI,aADrB,KACqCF,EADrC,eCnBH,eAAgB,IAAb7d,EAAY,EAAZA,MAChB,OACE,kBAAC,IAAD,CAAM1R,UAAU,yBACd,kBAAC,IAAD,CAAYA,UAAU,iCACpB,wBAAIA,UAAU,sBAAd,kBAEF,kBAAC,IAAD,CAAUA,UAAU,aAClB,kBAAC,IAAD,CAAKA,UAAU,sBACb,kBAAC,IAAD,aACA,kBAAC,IAAD,KAAM0R,EAAMnL,OAEd,kBAAC,IAAD,CAAKvG,UAAU,sBACb,kBAAC,IAAD,gBACA,kBAAC,IAAD,KAAM0R,EAAMge,UAEd,kBAAC,IAAD,CAAK1vB,UAAU,sBACb,kBAAC,IAAD,eACA,kBAAC,IAAD,KAAM0R,EAAM6c,SAEd,kBAAC,IAAD,CAAKvuB,UAAU,sBACb,kBAAC,IAAD,oBACA,kBAAC,IAAD,KAAM0R,EAAM8c,cAEd,kBAAC,IAAD,CAAKxuB,UAAU,sBACb,kBAAC,IAAD,sBACA,kBAAC,IAAD,KACE,uBACE6U,KAAMnD,EAAMie,cACZnY,OAAO,SACPC,IAAI,uBAEH/F,EAAMie,iBAIb,kBAAC,IAAD,CAAK3vB,UAAU,sBACb,kBAAC,IAAD,eACA,kBAAC,IAAD,KACE,uBAAG6U,KAAMnD,EAAMke,OAAQpY,OAAO,SAASC,IAAI,uBACxC/F,EAAMke,UAIb,kBAAC,IAAD,CAAK5vB,UAAU,sBACb,kBAAC,IAAD,gBACA,kBAAC,IAAD,KAAM0R,EAAMme,UAEd,kBAAC,IAAD,CAAK7vB,UAAU,sBACb,kBAAC,IAAD,eACA,kBAAC,IAAD,KAAM0R,EAAMoe,SAEd,kBAAC,IAAD,CAAK9vB,UAAU,QACb,kBAAC,IAAD,YACA,kBAAC,IAAD,KACE,uBAAG6U,KAAMnD,EAAMqe,IAAKvY,OAAO,SAASC,IAAI,uBACrC/F,EAAMqe,UCvDN,eAAgC,IAA7BC,EAA4B,EAA5BA,OAAQL,EAAoB,EAApBA,cACxB,OACE,kBAAC,IAAD,CAAM3vB,UAAU,yBACd,kBAAC,IAAD,CAAYA,UAAU,iCACpB,wBAAIA,UAAU,sBAAd,aACA,yBAAKA,UAAU,6BACf,uBACE6U,KAAM8a,EACNnY,OAAO,SACPC,IAAI,sBACJzX,UAAU,+BAEV,uBAAGA,UAAU,kBANf,oBASF,kBAAC,IAAD,KACGgwB,EACC,yBACEhwB,UAAU,SACVsV,wBAAyB,CAAEC,OAAQya,KAGrC,wBAAIhwB,UAAU,+BAAd,sB,oBCpBK,YAAC6V,GAAW,IACjBnE,EAAoBmE,EAApBnE,MAAOue,EAAapa,EAAboa,SACTC,EAAWxe,EAAMye,SAASze,EAAMye,SAASnrB,OAAS,GACpDorB,EAAO,CAAC,oEAAD,OAC2DF,EAD3D,+IAEyHA,EAFzH,mKAGyHA,EAHzH,6FAIgCA,EAJhC,gCAKWA,GALX,mDAMmCA,EANnC,mFAO8BA,EAP9B,yBASX,OACE,kBAAC,IAAD,CAAMlwB,UAAU,QACd,kBAAC,IAAD,CAAYA,UAAU,qCACpB,wBAAIA,UAAU,sBAAd,UAEF,kBAAC,IAAD,CAAUA,UAAU,6BAClB,uBAAGA,UAAU,QAAb,8BACA,kBAAC,KAAD,CACEqwB,SAAS,SACTvb,MAAOwb,KACPpwB,QAAS,kBAAM+vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGpwB,UAAU,aAAb,gDAGA,kBAAC,KAAD,CACEqwB,SAAS,SACTvb,MAAOwb,KACPpwB,QAAS,kBAAM+vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGpwB,UAAU,aAAb,uCACA,kBAAC,KAAD,CACEqwB,SAAS,SACTvb,MAAOwb,KACPpwB,QAAS,kBAAM+vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGpwB,UAAU,aAAb,+BACA,kBAAC,KAAD,CACEqwB,SAAS,OACTvb,MAAOwb,KACPpwB,QAAS,kBAAM+vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGpwB,UAAU,aAAb,8BACA,kBAAC,KAAD,CACEqwB,SAAS,OACTvb,MAAOwb,KACPpwB,QAAS,kBAAM+vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGpwB,UAAU,aAAb,gCACA,kBAAC,KAAD,CACEqwB,SAAS,OACTvb,MAAOwb,KACPpwB,QAAS,kBAAM+vB,EAASG,EAAK,MAE5BA,EAAK,IAER,uBAAGpwB,UAAU,aAAb,kDAGA,kBAAC,KAAD,CACEqwB,SAAS,OACTvb,MAAOwb,KACPpwB,QAAS,kBAAM+vB,EAASG,EAAK,MAE5BA,EAAK,OC9ED,eAAiB,IAAdG,EAAa,EAAbA,OAChB,OACE,kBAAC,IAAD,CAAMvwB,UAAU,yBACd,kBAAC,IAAD,CAAYA,UAAU,iCACpB,wBAAIA,UAAU,sBAAsBuwB,EAAOnvB,UAC3C,yBAAKpB,UAAU,8BAEjB,kBAAC,IAAD,CAAUA,UAAU,QAAQuwB,EAAOnnB,WCN1B,eAA6B,IAA1BilB,EAAyB,EAAzBA,QAASmC,EAAgB,EAAhBA,UACzB,OACE,6BACE,yBAAKxwB,UAAU,sCACb,wBAAIA,UAAU,aAAd,WACA,6BACE,kBAAC,IAAD,CAAQE,QAASswB,GACf,uBAAGxwB,UAAU,uBAAb,eADF,gBAKHquB,EAAQrpB,OAAS,EAChBqpB,EAAQre,KAAI,SAACugB,EAAQrhB,GAAT,OAAiB,kBAACuhB,GAAD,CAAY1f,IAAK7B,EAAKqhB,OAAQA,OAE3D,wBAAIvwB,UAAU,+BAAd,gBCgHO0wB,G,kDArHb,aAAe,IAAD,uBACZ,gBAmBF1S,kBAAoB,WAClB,EAAKjK,UACL,EAAK4c,gBAtBO,EAyBd/c,qBAAuB,WACrBC,EAAMC,eAAe,aAAc,EAAK6c,eA1B5B,EA6BdA,aA7Bc,sBA6BC,4BAAAnoB,EAAA,sEACYqL,EAAM1B,YAAY,EAAK+B,MAAMlL,SADzC,gDACsD,GADtD,OACP4nB,EADO,KAEb,EAAK5c,SAAS,CAAE4c,YAAW7lB,SAAS,IAFvB,2CA7BD,EAkCdgjB,KAAO,SAAC9kB,GAAW,IACTD,EAAY,EAAKkL,MAAjBlL,QACRrH,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUtK,YACtBqK,QAAS,CAAEZ,UAASC,YAtCV,EA0CdgnB,SAAW,SAAC7mB,GACVnH,EAAgBmH,GAChBzH,EAAWsS,SAAS,CAClBtK,WAAYE,IAAUnK,YACtBkK,QAAS,CAAC,MAAO,8BAA+B,cA9CtC,EAkDd4mB,UAAY,WACV,IAAMxnB,EAAU,EAAKkL,MAAM0c,UAAU1sB,GAErCvC,EAAWsS,SAAS,CAClBtK,WAAYE,IAAU5K,WACtB2K,QAAS,CAAEoB,MAHC,SAGM+G,OAAQ,CAAE/I,eAvDlB,EA2DdmL,OAAS,WAAO,IAWV0Z,EAXS,EACkB,EAAK3Z,MAA5B0c,EADK,EACLA,UAAW7lB,EADN,EACMA,QAEjBxE,EAOEqqB,EAPFrqB,KACAsqB,EAMED,EANFC,WACAlB,EAKEiB,EALFjB,cACAlB,EAIEmC,EAJFnC,WACAC,EAGEkC,EAHFlC,aACAZ,EAEE8C,EAFF9C,UACAO,EACEuC,EADFvC,QAMF,OAHII,GAAcC,IAChBb,EAASY,EAAaC,GAGtB,kBAAC7E,GAAA,EAAD,CAAWzV,OAAK,EAACpU,UAAU,+BACxB+K,EACC,yBAAK/K,UAAU,SACb,yBAAKA,UAAU,YAGjB,yBAAKA,UAAU,QACb,kBAACsX,GAAA,EAAD,CAAKoJ,WAAS,EAAC1gB,UAAU,oBACvB,kBAAC2gB,GAAD,CACExV,MAAO5E,EACPyT,SAAS,QACTha,UAAU,sBAEZ,kBAACuX,GAAA,EAAD,CAAKjB,GAAG,MACR,kBAACiB,GAAA,EAAD,CAAKjB,GAAG,IAAItW,UAAU,WACpB,4BACE,kBAAC6uB,GAAD,CACEhB,OAAQC,GAAaD,EACrBE,KAAM,EAAKA,KACXD,UAAWA,OAKnB,kBAACxW,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKjB,GAAG,KACN,kBAACwa,GAAD,CAAapf,MAAOkf,EAAWX,SAAU,EAAKA,WAC9C,kBAAC,GAAD,CAASve,MAAOkf,IAChB,kBAACG,GAAD,CAAcrf,MAAOkf,KAEvB,kBAACrZ,GAAA,EAAD,CAAKjB,GAAG,KACN,kBAAC0a,GAAD,CAAQhB,OAAQa,EAAYlB,cAAeA,IAC3C,kBAACsB,GAAD,CAAc5C,QAASA,EAASmC,UAAW,EAAKA,iBAzG5D,IAAIU,EAAalgB,OAAOC,SAASC,KAC3BigB,EAAeD,EAAWle,UAC9Bke,EAAWhhB,QAAQ,KACnBghB,EAAWlsB,QAGPgE,EADS,IAAIooB,gBAAgBD,GACZ1oB,IAAI,MARf,OASZ,EAAKyL,MAAQ,CACXlL,UACA+B,SAAS,EACT6lB,UAAW,CACTvC,QAAS,GACT8B,SAAU,KAGdtc,EAAMa,GAAG,aAAc,EAAKic,cAjBhB,E,UADUhc,IAAMC,WCL1Byc,G,4MACJrT,kBAAoB,WAClB,IAAI9M,EAAOF,OAAOC,SAAS4D,KAC3B,GAAI3D,EAAKhB,QAAQ,QAAU,EAAG,CAC5B,IAAIkgB,EAAOlf,EAAK8B,UAAU9B,EAAKhB,QAAQ,QAAU,EAAGgB,EAAKlM,QACzDgM,OAAOC,SAAP,UAAqBlK,SAArB,sCAAyDqpB,K,EAG7Djc,OAAS,WACP,OACE,kBAAC,IAAD,CAAWC,OAAK,EAACpU,UAAU,+BACzB,kBAAC,IAAD,CAAK0gB,WAAS,EAAC1gB,UAAU,SACvB,kBAAC,IAAD,CAAKoW,GAAG,IAAIE,GAAG,IAAItW,UAAU,qBAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,yBACEA,UAAU,uCACVgB,IAAI,kBACJ8T,MAAO,CAAEE,SAAU,SACnB7T,IAAI,SAEN,wBAAInB,UAAU,qCAAd,UACA,uBACE6U,KAAI,UAAK9N,SAAL,gBACJ7C,GAAG,gBACHlE,UAAU,uCAEV,uBAAGA,UAAU,kBALf,8B,YAtBI2U,IAAMC,WCJX,eAA4C,IAAzCzJ,EAAwC,EAAxCA,MAAO/B,EAAiC,EAAjCA,QAASkoB,EAAwB,EAAxBA,KAAMhxB,EAAkB,EAAlBA,MAAO6E,EAAW,EAAXA,KAC7C,OACE,uBAAGnF,UAAU,gBAAgB6U,KAAM1P,GACjC,kBAACwY,GAAA,EAAD,CAAM3d,UAAU,SACd,kBAAC2d,GAAA,EAAKmH,KAAN,CAAW9kB,UAAU,QACnB,kBAACsX,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAK2C,GAAG,IAAIla,UAAU,QACpB,4BAAKmL,GACJ/B,GAEH,kBAACmO,GAAA,EAAD,CAAK2C,GAAG,IAAIla,UAAU,QACpB,wBAAIA,UAAU,aACZ,0BAAMA,UAAS,UAAKsxB,EAAL,gBAAiBhxB,YCiDjCixB,GA3DA,kBACb,kBAAC,IAAD,CAAWnd,OAAK,EAACpU,UAAU,+BACzB,kBAAC,IAAD,CAAK0gB,WAAS,EAAC1gB,UAAU,oBACvB,kBAAC2gB,GAAD,CACExV,MAAM,YACN6O,SAAS,UACTha,UAAU,uBAGd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsW,GAAG,IAAItW,UAAU,QACpB,kBAACwxB,GAAD,CACErmB,MAAM,WACN/B,QAAQ,uDACRjE,KAAK,sBACLmsB,KAAK,aACLhxB,MAAM,aAGV,kBAAC,IAAD,CAAKgW,GAAG,IAAItW,UAAU,QACpB,kBAACwxB,GAAD,CACErmB,MAAM,sBACN/B,QAAQ,uCACRjE,KAAK,uBACLmsB,KAAK,cACLhxB,MAAM,aAGV,kBAAC,IAAD,CAAKgW,GAAG,IAAItW,UAAU,QACpB,kBAACwxB,GAAD,CACErmB,MAAM,qBACN/B,QAAQ,0DACRjE,KAAK,oDACLmsB,KAAK,sBACLhxB,MAAM,WAGV,kBAAC,IAAD,CAAKgW,GAAG,IAAItW,UAAU,QACpB,kBAACwxB,GAAD,CACErmB,MAAM,sBACN/B,QAAQ,sDACRjE,KAAK,6BACLmsB,KAAK,gBACLhxB,MAAM,UAGV,kBAAC,IAAD,CAAKgW,GAAG,IAAItW,UAAU,QACpB,kBAACwxB,GAAD,CACErmB,MAAM,iBACN/B,QAAQ,uDACRjE,KAAK,gDACLmsB,KAAK,kBACLhxB,MAAM,iBCxCD,IACb,CACEyS,KAAM,IACN0e,OAAO,EACPC,OAAQC,GACRC,UAAW,kBAAM,kBAAC,IAAD,CAAUvwB,GAAG,YAEhC,CACE0R,KAAM,QACN2e,OAAQG,GACRD,UAAWxI,IAEb,CACErW,KAAM,QACN2e,OAAQG,GACRD,UAAW7T,IAEb,CACEhL,KAAM,QACN2e,OAAQG,GACRD,UAAWtF,IAEb,CACEvZ,KAAM,YACN2e,OAAQG,GACRD,UAAWhE,IAEb,CACE7a,KAAM,QACN2e,OAAQG,GACRD,UAAWE,IAEb,CACE/e,KAAM,QACN2e,OAAQG,GACRD,UAAWE,IAEb,CACE/e,KAAM,OACN2e,OAAQG,GACRD,UAAW9C,IAEb,CACE/b,KAAM,WACN2e,OAAQG,GACRD,UAAWlB,IAEb,CACE3d,KAAM,SACN2e,OAAQG,GACRD,UHtBWP,K,UI1CfU,KAAgBC,WAAW5iB,mHAAY6iB,gBAAkB,kBAEzD,IA0CeC,GA1CK,SAACC,GAAoC,IAAlBlO,EAAiB,uDAAP,GACzCmO,EAAY,SAACC,GAKjBN,KAAgBO,IAAhB,aACED,QACGpO,IAEL8N,KAAgBQ,SAASF,IAGrBG,EAAWpjB,mHAAYqjB,oBAAsB,GAG7CC,EAAG,kLAGL,IAAML,EAAO5e,KAAKoC,MAAM5E,SAASwY,SAAWhW,KAAKoC,MAAM5E,SAASsL,OAChE6V,EAAU,GAAD,OAAII,GAAJ,OAAeH,MAJnB,yCAOY9G,GACjB,IAAMoH,EACJpH,EAAUta,SAASwY,SAAW8B,EAAUta,SAASsL,OAC7CqW,EACJnf,KAAKoC,MAAM5E,SAASwY,SAAWhW,KAAKoC,MAAM5E,SAASsL,OAEjDoW,IAAgBC,GAClBR,EAAU,GAAD,OAAII,GAAJ,OAAeI,MAdrB,+BAmBL,OAAO,kBAACT,EAAqB1e,KAAKoC,WAnB7B,GAAiBjB,aAuB1B,OAAO8d,GClCM,I,qBAAA,kBACb,kBAAC,IAAD,CAAQG,SAAU,KAChB,6BACGC,GAAO9iB,KAAI,SAAC+iB,EAAOhjB,GAClB,OACE,kBAAC,IAAD,CACEgB,IAAKhB,EACLgD,KAAMggB,EAAMhgB,KACZ0e,MAAOsB,EAAMtB,MACbG,UAAWM,IAAY,SAACrc,GACtB,OACE,kBAACkd,EAAMrB,OAAW7b,EAChB,kBAACkd,EAAMnB,UAAc/b,gBCVnBmd,QACW,cAA7BhiB,OAAOC,SAASgiB,UAEe,UAA7BjiB,OAAOC,SAASgiB,UAEhBjiB,OAAOC,SAASgiB,SAAS7d,MACvB,2DCbN8d,IAAS/e,OAAO,kBAAC,GAAD,MAAS/R,SAAS2c,eAAe,SD8H3C,kBAAmBoU,WACrBA,UAAUC,cAAcxoB,MACrBiU,MAAK,SAACwU,GACLA,EAAaC,gBAEdC,OAAM,SAACvwB,GACNoF,QAAQpF,MAAMA,EAAM6L,a,iBEzI5BrQ,EAAOC,QAAU,CACfwI,QAAS,KACTF,OAAQ,yB","file":"static/js/main.1e1c2709.chunk.js","sourcesContent":["module.exports = {\n  pokedex: `!Flow\n  with:\n    read_only: true\n    rest_api: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        chunk_seg:\n          x: 250\n          y: 268\n        tf_encode:\n          x: 250\n          y: 420\n        chunk_idx:\n          x: 250\n          y: 600\n        ranker:\n          x: 250\n          y: 836\n        doc_idx:\n          x: 249\n          y: 985\n  pods:\n    gateway: {}\n    chunk_seg:\n      uses: pods/craft.yml\n      parallel: $PARALLEL\n      needs: gateway\n    tf_encode:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 600000\n      needs: chunk_seg\n    chunk_idx:\n      uses: pods/chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      timeout_ready: 100000\n      needs: tf_encode\n    ranker:\n      uses: BiMatchRanker\n      needs: chunk_idx\n    doc_idx:\n      uses: pods/doc.yml\n      needs: ranker\n  \n  `,\n  flower: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        loader:\n          x: 250\n          y: 257\n        flipper:\n          x: 252\n          y: 407\n        normalizer:\n          x: 239\n          y: 563\n        encoder:\n          x: 252\n          y: 712\n        chunk_indexer:\n          x: 250\n          y: 872\n        ranker:\n          x: 252\n          y: 1066\n        doc_indexer:\n          x: 253\n          y: 1199\n  pods:\n    gateway: {}\n    loader:\n      uses: yaml/craft-load.yml\n      read_only: true\n      needs: gateway\n    flipper:\n      uses: yaml/craft-flip.yml\n      read_only: true\n      needs: loader\n    normalizer:\n      uses: yaml/craft-normalize.yml\n      read_only: true\n      needs: flipper\n    encoder:\n      uses: $ENCODER\n      timeout_ready: 600000\n      read_only: true\n      needs: normalizer\n    chunk_indexer:\n      uses: yaml/index-chunk.yml\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: yaml/index-doc.yml\n      needs: ranker  \n  `,\n  southpark: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 254\n          y: 147\n        splittor:\n          x: 254\n          y: 270\n        encoder:\n          x: 254\n          y: 448\n        chunk_indexer:\n          x: 251\n          y: 645\n        ranker:\n          x: 255\n          y: 862\n        doc_indexer:\n          x: 256\n          y: 1002\n  pods:\n    gateway: {}\n    splittor:\n      uses: pods/craft-split.yml\n      parallel: $PARALLEL\n      read_only: true\n      needs: gateway\n    encoder:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 60000\n      read_only: true\n      needs: splittor\n    chunk_indexer:\n      uses: pods/index-chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      reducing_uses: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: pods/index-doc.yml\n      needs: ranker\n  `,\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_EXAMPLE: \"LOAD_EXAMPLE\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n);\n","import React from \"react\";\n\nexport default ({ toggleSidebar }) => (\n  <nav className=\"nav cursor-pointer\">\n    <span\n      onClick={toggleSidebar}\n      className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n    >\n      <i className=\"material-icons\">&#xE5D2;</i>\n    </span>\n  </nav>\n);\n","import React from \"react\";\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\nexport default ({ connected, reconnect }) => {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n} from \"shards-react\";\n\nexport default ({ user, logOut, userActionsVisible, toggleUserActions }) => {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/podProperties.json\");\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\n\nexport function formatAsYAML(chart) {\n  let output = {\n    with: chart.with || {},\n    pods: {},\n  };\n  output.with.board = { canvas: {} };\n\n  Object.keys(chart.nodes).forEach((id) => {\n    let node = chart.nodes[id];\n    node.label = node.label || node.properties.name;\n    if (node.properties.name) delete node.properties.name;\n  });\n\n  Object.keys(chart.nodes).forEach((id) => {\n    const node = chart.nodes[id];\n\n    if (!node.label) return;\n\n    output.pods[node.label] = {};\n\n    Object.keys(node.properties).forEach((propId) => {\n      let type = propertyTypes[propId];\n      if (type === \"bool\") {\n        output.pods[node.label][propId] =\n          String(node.properties[propId]) === \"true\";\n      } else if (type === \"int\")\n        output.pods[node.label][propId] = parseInt(node.properties[propId]);\n      else output.pods[node.label][propId] = node.properties[propId];\n    });\n    output.with.board.canvas[node.label] = {\n      x: node.position.x,\n      y: node.position.y,\n    };\n  });\n  Object.keys(chart.links).forEach((id) => {\n    const link = chart.links[id];\n    const nodeFrom = chart.nodes[link.from.nodeId].label;\n    const nodeTo = chart.nodes[link.to.nodeId].label;\n    if (!nodeFrom || !nodeTo) return;\n    if (output.pods[nodeTo].needs) {\n      if (!Array.isArray(output.pods[nodeTo].needs))\n        output.pods[nodeTo].needs = [output.pods[nodeTo].needs];\n      output.pods[nodeTo].needs.push(nodeFrom);\n    } else output.pods[nodeTo].needs = nodeFrom;\n  });\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n","import axios from \"axios\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  connect: (settings, connectionUpdate, logUpdate, taskUpdate) => {\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      console.error(\"log error: \", data);\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      console.error(\"task error:\", data);\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (connectionString) => {\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport { nanoid } from \"nanoid\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleYAML from \"../data/yaml\";\n\nlet _store;\n\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst NUM_CHART_ELEMENTS = 60;\nconst CHART_UPDATE_INTERVAL = 1000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected: {},\n      hovered: {},\n      scale: 1,\n      nodes: {\n        gateway: {\n          id: \"gateway\",\n          label: \"gateway\",\n          ports: {\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          },\n          properties: {},\n          position: { x: 629, y: 72 },\n        },\n      },\n      links: {},\n      offset: { x: 0, y: 0 },\n    },\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    occurences: {\n      current: {},\n      previous: {},\n      lastLog: [],\n    },\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: null,\n    currentTab: \"logStream\",\n  };\n}\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    window.peakLogs = this.getLogs;\n    window.peakStore = () => console.log(_store);\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_EXAMPLE:\n        this.loadExample(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async (yamlSTRING) => {\n    let flow;\n    const { settings } = _store;\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n\n    if (yamlSTRING) {\n      flow = parseYAML(yamlSTRING);\n    } else {\n      try {\n        let str = await api.getYAML(connectionString);\n        flow = parseYAML(str);\n      } catch (e) {\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status, message) => {\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n      return this.showBanner(message, \"error\");\n    }\n  };\n\n  handleNewLog = (message) => {\n    const id = nanoid();\n    const { data } = message;\n\n    const log = data;\n\n    log.formattedTimestamp = new Date(log.created * 1000).toLocaleString();\n    log.idx = _store.logs.length;\n\n    _store.logs.push({ ...log, id });\n    _store.processes[log.process] = log.name;\n    _store.logSources[log.name] = true;\n    _store.logLevels[log.levelname] = true;\n\n    if (CHART_LEVELS.includes(log.levelname)) {\n      _store.occurences.current[log.levelname]++;\n    }\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = () => {\n    for (let i = 0; i < CHART_LEVELS.length; ++i) {\n      let level = CHART_LEVELS[i];\n      _store.occurences.current[level] = 0;\n      _store.occurences.previous[level] = 0;\n      _store.summaryCharts[level] = new Array(NUM_CHART_ELEMENTS).fill(0);\n    }\n    _store.occurences.lastLog = new Array(NUM_CHART_ELEMENTS).fill({});\n    this.updateChartInterval = setInterval(\n      this.updateSummaryCharts,\n      CHART_UPDATE_INTERVAL\n    );\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    const { current, previous } = _store.occurences;\n    for (let i = 0; i < CHART_LEVELS.length; ++i) {\n      let level = CHART_LEVELS[i];\n      const numLogs = current[level];\n      const prevNum = previous[level];\n      _store.summaryCharts[level].push(numLogs - prevNum);\n      _store.summaryCharts[level].shift();\n      _store.occurences.previous[level] = numLogs;\n    }\n    _store.occurences.lastLog.push(_store.logs.length - 1);\n    _store.occurences.lastLog.shift();\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (index) => {\n    let logIndex = _store.occurences.lastLog[index];\n    if (!logIndex) return;\n    _store.logIndex = _store.occurences.lastLog[index];\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    let x = 0;\n    let y = 0;\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n        x = value.position.x * -1 + 40;\n        y = value.position.y * -1 + 100;\n      }\n    }\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadExample = (exampleName) => {\n    const flow = exampleYAML[exampleName];\n    this.initFlowChart(flow);\n    this.emit(\"update-flowchart\");\n  };\n\n  saveSettings = (settings) => {\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, params } = data;\n    _store.modal = modal;\n    _store.modalParams = params;\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = \"\";\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getOccurencesByName = () => {\n    return _store.occurences.current;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarToggle from \"./NavbarToggle\";\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainNavbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userActionsVisible: false,\n      connected: Store.getConnectionStatus(),\n      user: Store.getUser(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getData);\n  };\n\n  getData = () => {\n    const connected = Store.getConnectionStatus();\n    const user = Store.getUser();\n    this.setState({ connected, user });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  toggleUserActions = () => {\n    this.setState({\n      userActionsVisible: !this.state.userActionsVisible,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n  render = () => {\n    const { connected, user, userActionsVisible } = this.state;\n    return (\n      <div className=\"main-navbar bg-white sticky-top\">\n        <Container fluid className=\"p-0\">\n          <Navbar\n            type=\"light\"\n            className=\"align-items-stretch flex-md-nowrap p-0\"\n          >\n            <NavbarSpacer />\n            <Nav navbar className=\"border-left flex-row\">\n              <Notifications reconnect={this.reconnect} connected={connected} />\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={this.toggleUserActions}\n                logOut={this.logOut}\n              />\n            </Nav>\n            <NavbarToggle toggleSidebar={this.toggleSidebar} />\n          </Navbar>\n        </Container>\n      </div>\n    );\n  };\n}\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({ menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DashboardLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default ({ show, acceptCookies }) => {\n  return (\n    <div className={`cookies-banner ${show ? \"\" : \"hidden\"}`}>\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default ({ data }) => {\n  return data ? (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nexport default ({ loading, connected, reconnect }) => {\n  return loading || connected ? (\n    \"\"\n  ) : (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (this.inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(this.inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (this.inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(this.inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport CookiesBanner from \"../components/Common/CookiesBanner\";\nimport InfoBanner from \"../components/Common/InfoBanner\";\nimport ConnectionBanner from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      modal: Store.getModal(),\n      loading: Store.isLoading(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    this.setState({ modal, loading, banner, connected });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ accepted: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const params = Store.getModalParams();\n    const { imageId } = params;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  render = () => {\n    const { modal, acceptedCookies, banner, connected, loading } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar />\n            <InfoBanner data={banner} />\n            <ConnectionBanner\n              loading={loading}\n              connected={connected}\n              reconnect={this.reconnect}\n            />\n            {children}\n            <CookiesBanner\n              show={!acceptedCookies}\n              acceptCookies={this.acceptCookies}\n            />\n            <MainFooter />\n          </Col>\n        </Row>\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nexport default ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n};\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default (props) => {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default (props) => {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport lunr from \"lunr\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  constructor(props) {\n    super();\n    let node = {};\n    if (props.chart.selected.id) {\n      const selectedNode = props.chart.nodes[props.chart.selected.id];\n      node = this.getInitialNodeState(selectedNode);\n    }\n\n    this.state = {\n      availableProperties: Store.getAvailableProperties(),\n      node,\n      searchResults: [],\n      searchQuery: \"\",\n    };\n  }\n\n  getInitialNodeState = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).forEach((key) => {\n      properties[key] = node.properties[key];\n    });\n\n    return { label, id: node.id, properties, newProperties };\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id) return;\n\n    this.setState({ searchResults: [], searchQuery: \"\" });\n\n    if (!id) return;\n\n    if (type === \"node\" && id !== this.state.node.id) {\n      const node = nodes[id];\n      this.setState({ node: this.getInitialNodeState(node) });\n    }\n  };\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.searchProperties);\n  };\n\n  searchProperties = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ searchResults: false });\n    this.indexProperties();\n    let searchResults = this.index.search(`${query} ${query}*`);\n    this.setState({ searchResults });\n  };\n\n  indexProperties = () => {\n    const { availableProperties } = this.state;\n    this.index = lunr(function () {\n      this.field(\"name\");\n\n      availableProperties.forEach((prop, idx) => {\n        prop.id = parseInt(idx);\n        this.add(prop);\n      });\n    });\n  };\n\n  renderEditNode = () => {\n    const {\n      availableProperties,\n      node,\n      searchQuery,\n      searchResults,\n    } = this.state;\n    let label =\n      typeof node.label === \"undefined\"\n        ? node.properties.name\n        : node.label || \"\";\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>Pod Name</b>\n          </p>\n          <FormControl\n            spellCheck={false}\n            value={label}\n            onChange={(e) => this.updateLabel(e.target.value)}\n            className=\"pod-name-input\"\n          />\n        </div>\n        <p className=\"mb-0 px-2\">\n          <b>Properties</b>\n        </p>\n        <div className=\"m-2\">\n          <FormControl\n            spellCheck={false}\n            placeholder=\"search properties...\"\n            value={searchQuery}\n            onChange={this.updateSearchQuery}\n          />\n        </div>\n        <div className=\"property-table flex-fill mx-2\">\n          {searchQuery && searchResults ? (\n            searchResults.map((result) => {\n              const property = availableProperties[result.ref];\n              const { name, type } = property;\n              const value = node.properties[name];\n\n              if (typeof value == \"undefined\")\n                return (\n                  <div key={name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={type}\n                      value={node.newProperties[name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                );\n              return (\n                <div key={name} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{name}</p>\n                  <FormControl\n                    spellCheck={false}\n                    value={value || \"\"}\n                    onChange={(e) =>\n                      this.updateExistingValue(name, e.target.value)\n                    }\n                    className=\"property-value-input\"\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              {Object.keys(node.properties).map((prop) => {\n                const value = node.properties[prop];\n                if (prop === \"name\") return \"\";\n                return (\n                  <div key={prop} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{prop}</p>\n                    <FormControl\n                      spellCheck={false}\n                      value={value || \"\"}\n                      onChange={(e) =>\n                        this.updateExistingValue(prop, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    />\n                  </div>\n                );\n              })}\n              {availableProperties.map((property) =>\n                typeof node.properties[property.name] == \"undefined\" ? (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={property.type}\n                      value={node.newProperties[property.name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(property.name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Pod\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId];\n    const nodeTo = nodes[link.to.nodeId];\n\n    let choices = Object.keys(nodes).map((id) => {\n      return { label: nodes[id].label || nodes[id].properties.name, id };\n    });\n\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Edit Connection</b>\n        </h5>\n        <div className=\"flex-fill px-2\">\n          <div className=\"p-2 mb-1\">\n            <p className=\"mb-1\">\n              <b>From</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, e.target.value, nodeTo.id)\n              }\n              value={nodeFrom.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n            <p className=\"mb-1\">\n              <b>To</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, nodeFrom.id, e.target.value)\n              }\n              value={nodeTo.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Connection\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderPodMenu = () => {\n    return (\n      <div className=\"d-flex flex-column h-100\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Add Pods</b>\n        </h5>\n        <div className=\"p-3 scrollable flex-fill\">\n          <SidebarItem\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={{}}\n          />\n          {defaultPods.map((pod, idx) => (\n            <SidebarItem\n              key={idx}\n              ports={{\n                inPort: {\n                  id: \"inPort\",\n                  type: \"input\",\n                },\n                outPort: {\n                  id: \"outPort\",\n                  type: \"output\",\n                },\n              }}\n              properties={pod}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {hasSelected\n          ? selected.type === \"link\"\n            ? this.renderEditLink(links[selected.id], nodes)\n            : this.renderEditNode(nodes[selected.id])\n          : this.renderPodMenu()}\n      </Card>\n    );\n  };\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\n\nexport default (props) => {\n  return (\n    <div className=\"example-selection\">\n      <DropdownButton\n        as={ButtonGroup}\n        title=\"Load Example\"\n        id=\"bg-nested-dropdown\"\n      >\n        <Dropdown.Item onClick={() => props.loadExample(\"pokedex\")}>\n          Pokedex Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"southpark\")}>\n          South Park Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"flower\")}>\n          Flower Search Query\n        </Dropdown.Item>\n      </DropdownButton>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport ExampleSelection from \"../components/FlowChart/ExampleSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart();\n    this.state = { chart, showOverlay: false };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateChart({ ...chart, ...newChart });\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateChart = (chart) => {\n    this.setState({ chart });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId, chart }) => {\n    if (fromPortId !== \"outPort\" || toPortId !== \"inPort\") return false;\n    if (fromNodeId === toNodeId) return false;\n    return true;\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadExample = (example) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_EXAMPLE,\n      payload: example,\n    });\n  };\n\n  render = () => {\n    const { chart, showOverlay } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <ExampleSelection loadExample={this.loadExample} />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = {\n  INFO: {\n    border: \"#009999\",\n    background: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    border: \"#32c8cd\",\n    background: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    border: \"#ffcc66\",\n    background: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    border: \"#ff6666\",\n    background: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    border: \"#ff4540\",\n    background: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    border: \"#6E7278\",\n    background: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass ChartBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"bottom\",\n        labels: {\n          padding: 10,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: false,\n            color: \"red\",\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: Object.keys(data).map((level) => {\n          const chartData = data[level];\n          return {\n            label: level,\n            fill: \"start\",\n            borderWidth: 1.5,\n            borderColor: _colors[level].border,\n            backgroundColor: _colors[level].background,\n            data: chartData,\n          };\n        }),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: Object.keys(data).map((level) => {\n        const chartData = data[level];\n        return {\n          label: level,\n          fill: \"start\",\n          borderWidth: 1.5,\n          borderColor: _colors[level].border,\n          backgroundColor: _colors[level].background,\n          data: chartData,\n        };\n      }),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass SummaryChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getSummaryCharts(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    let index = activePoints[0] && activePoints[0]._index;\n    if (index && typeof index !== \"undefined\");\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_LOG_AT_INDEX,\n      payload: index,\n    });\n  };\n\n  getData = () => {\n    const chartData = Store.getSummaryCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Body className=\"d-none d-md-block pb-2\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default SummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport ChartBase from \"./PieChart\";\n\nclass OccurenceChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getOccurencesByName(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getOccurencesByName();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Body>\n          <ChartBase data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default OccurenceChart;\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: string };\n\nconst customStyles = {\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n} & SelectProps;\n\nfunction MultiFilterSelect({ onFilterChange, options, ...rest }: Props) {\n  return (\n    <Select\n      onChange={(val) =>\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val])\n      }\n      isMulti\n      options={options}\n      styles={customStyles}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","const applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\nexport { applyFilters };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: any[];\n  };\n};\n\nconst LogItem = memo(({ index, style, data: { columns, items } }: Props) => {\n  const { name, msg, levelname, process, formattedTimestamp, idx } = items[\n    index\n  ];\n  let logName = String(name);\n  logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n  let levelInitial = String(levelname)[0];\n  const { firstCol, secondCol, thirdCol } = columns;\n  return (\n    <div\n      className={`log log-${String(\n        levelname\n      ).toLowerCase()} px-4 border-bottom py-1`}\n      css={{ maxHeight: 84 }}\n      style={style}\n    >\n      <Row>\n        <Col\n          className=\"log-prefix text-muted px-0 d-flex flex-row\"\n          css={{ maxWidth: firstCol }}\n        >\n          <div className=\"text-bold mr-2\">{idx}</div>\n          <div className=\"ml-auto\">{formattedTimestamp}</div>\n        </Col>\n        <Col\n          className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n          css={{ maxWidth: secondCol }}\n        >\n          {logName}@{process}[{levelInitial}]:\n        </Col>\n        <Col\n          className=\"px-0\"\n          css={{\n            maxHeight: 84,\n            display: \"block\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            width: thirdCol,\n            whiteSpace: \"nowrap\",\n            paddingRight: 0,\n            marginRight: 0,\n          }}\n        >\n          {msg}\n        </Col>\n      </Row>\n    </div>\n  );\n}, areEqual);\n\nexport { LogItem };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useMiniSearch } from \"react-minisearch\";\nimport { usePrevious } from \"./usePrevious\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { applyFilters } from \"./useFilters\";\nimport { LogItem } from \"./LogItem\";\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\ntype RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n  id: string;\n};\n\nconst ROW_SIZE = 30;\n\nconst fields = [\"filename\", \"funcName\", \"msg\", \"name\", \"module\", \"pathname\"];\nconst miniSearchOptions = { fields };\n\ntype Format = \"json\" | \"csv\" | \"tsv\" | \"txt\";\n\ntype Props = {\n  data: RawLog[];\n  downloadLogs: (format: Format) => void;\n};\n\nconst itemKey = (index: number, data: { items: RawLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsTable({ data, downloadLogs }: Props) {\n  const [scrolledToBottom, setScrolledToBottom] = React.useState(true);\n  const windowListRef = useRef<any>();\n  const [selectedSources, setSelectedSources] = React.useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = React.useState<any[]>([]);\n  const [searchString, setSearchString] = React.useState(\"\");\n  const { search, searchResults, addAllAsync } = useMiniSearch(\n    data,\n    miniSearchOptions\n  );\n  const previousLength = usePrevious(data.length);\n  useEffect(() => {\n    if (previousLength && previousLength! > 0) {\n      addAllAsync([data[previousLength! - 1]]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousLength]);\n\n  const unfiltered = searchString ? searchResults : data;\n\n  const resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n  useEffect(() => {\n    if (windowListRef.current && scrolledToBottom) {\n      windowListRef.current.scrollToItem(resultData.length);\n    }\n  }, [resultData.length, scrolledToBottom]);\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-3\">\n        <Row>\n          <Col md=\"8\">\n            <MultiFilterSelect\n              options={toOption(sources)}\n              onFilterChange={setSelectedSources}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Logsources\"\n            />\n            <MultiFilterSelect\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Levels\"\n            />\n            <DropdownButton\n              as={ButtonGroup}\n              title=\"Download Logs\"\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item onClick={() => downloadLogs(\"csv\")}>\n                Download as CSV\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => downloadLogs(\"json\")}>\n                Download as JSON\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => downloadLogs(\"txt\")}>\n                Download as TXT\n              </Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col md=\"4\">\n            <Form.Control\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={(e) => {\n                search(e.target.value as string);\n                setSearchString(e.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body\n        className=\"log-stream-container p-1 border-top\"\n        id=\"log-stream-container\"\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() =>\n              windowListRef.current.scrollToItem(resultData.length)\n            }\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        <AutoSizer>\n          {({ height, width }) => {\n            const firstCol = 200;\n            const secondCol = 200;\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - resultData.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={resultData.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: resultData,\n                  columns: { firstCol, secondCol, thirdCol },\n                }}\n                ref={windowListRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import React from \"react\";\nfunction usePrevious(value: any) {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\nexport { usePrevious };\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport SummaryChart from \"../components/LogStream/SummaryChart\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport OccurenceChart from \"../components/LogStream/OccurenceChart\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store } from \"../flux\";\nimport { saveAs } from \"file-saver\";\n\nclass LogsView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      banner: Store.getBanner(\"logs\"),\n      logs: Store.getLogs(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-logs\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.on(\"update-logs\", this.getData);\n  };\n  getData = () => {\n    const banner = Store.getBanner(\"logs\");\n    const logs = Store.getLogs();\n    this.setState({ banner, logs });\n  };\n  downloadLogs = (format) => {\n    let logs = this.state.logs;\n    let content = \"\";\n    if (format === \"json\") content = \"[\\n\";\n    else if (format === \"csv\")\n      content =\n        \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n\n    for (let i = 0; i < logs.length; ++i) {\n      let log = logs[i];\n      if (format === \"json\")\n        content +=\n          JSON.stringify(logs[i]) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n      else if (format === \"csv\")\n        content += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n      else\n        content += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    }\n    if (format === \"json\") content += \"]\";\n\n    let filename = `jina-logs-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Log Stream\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"10\" className=\"mb-4\">\n              <SummaryChart />\n            </Col>\n            <Col md=\"2\" className=\"mb-4\">\n              <OccurenceChart />\n            </Col>\n          </Row>\n          <LogsTable downloadLogs={this.downloadLogs} data={this.state.logs} />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default LogsView;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nclass ElapsedCard extends React.Component {\n  render() {\n    const { elapsed } = this.props;\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n          <b>{elapsed.task_name}</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          Elapsed Time\n        </h6>\n      </Card>\n    );\n  }\n}\n\nexport default ElapsedCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState(Store.getSettings());\n  const [updates, setUpdates] = useState({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting, value) {\n    const newUpdates = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\nexport default ({ rating, userRated, rate }) => {\n  const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n  const stars = getStars(formatted, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n};\n\nconst getStars = (amount, rate) => {\n  let stars = [];\n  let integer = parseInt(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default ({ image }) => {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default (props) => {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default ({ image }) => {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default ({ readme, documentation }) => {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default (props) => {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default ({ review }) => {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default ({ reviews, newReview }) => {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getData();\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"hub\", \"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, params: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nexport default ({ title, content, icon, theme, link }) => {\n  return (\n    <a className=\"unstyled-link\" href={link}>\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from \"../components/Common/HelpCard\";\nimport PageTitle from \"../components/Common/PageTitle\";\n\nconst Errors = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Errors;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout, IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport LogsView from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n  },\n];\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nexport default () => (\n  <Router basename={\"/\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker((props) => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  timeout: 15000,\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}