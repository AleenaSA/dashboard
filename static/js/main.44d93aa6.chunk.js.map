{"version":3,"sources":["data/exampleFlows.js","flux/constants.js","settings.js","components/Layout/MainNavbar/NavbarSpacer.tsx","components/Layout/MainNavbar/NavbarToggle.tsx","components/Layout/MainNavbar/ConnectionIndicator.tsx","components/Layout/MainNavbar/UserActions.tsx","components/Layout/MainNavbar/MainNavbar.tsx","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","flux/dispatcher.js","helpers.js","logger.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","flux/tranformLog.ts","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","components/Common/CookiesBanner.tsx","components/Common/InfoBanner.tsx","components/Common/ConnectionBanner.tsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","modals/LogDetails.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.tsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.tsx","components/FlowChart/NodePort.jsx","components/FlowChart/FlowSelection.jsx","views/FlowView.jsx","components/LogStream/ChartBase.jsx","components/LogStream/LogLevelSummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/LogLevelPieChart.jsx","components/Common/MultiFilterSelect.tsx","components/LogStream/useFilters.ts","components/LogStream/LogItem.tsx","hooks/useTimeoutFn.ts","components/LogStream/LogsTable.tsx","components/LogStream/usePrevious.ts","hooks/useDebounce.ts","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/options.js","components/Settings/FormItem.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","components/Common/HelpCard.tsx","views/NotFound.jsx","routes.js","views/PackageView.jsx","views/LogIn.jsx","withTracker.js","FallbackPage.tsx","App.js","theme.ts","index.js","flux/config.js"],"names":["module","exports","pokedex","name","type","yaml","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_FLOW","SHOW_POD_IN_FLOW","CREATE_NEW_FLOW","UPDATE_FLOW","DUPLICATE_FLOW","DELETE_FLOW","nodeOffset","x","y","NavbarSpacer","className","NavbarToggle","toggleSidebar","onClick","ConnectionIndicator","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","MainNavbar","usesAuth","usesConnection","useState","setUserActionsVisible","fluid","navbar","isVisible","href","style","lineHeight","id","maxWidth","item","hasSubItems","items","length","path","window","location","hash","substring","active","matches","forEach","match","startsWith","position","RouteNavLink","htmlBefore","dangerouslySetInnerHTML","__html","title","htmlAfter","top","map","subItem","idx","key","navItems","nav","SidebarNavItem","Dispatcher","YAML","require","settings","propertyList","toBlob","content","Blob","serializeLogsToJSONBlob","logs","fileContent","reduce","acc","log","i","JSON","stringify","serializeLogsToJSON","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","pod","node","label","ports","needs","send_to","properties","parents","Array","isArray","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","prop","formatAsYAML","chart","console","chartWith","with","needsByPodLabel","values","curr","nodeLabelsByPortId","getNodeLabelsByPortId","outPort","neededBy","inPort","push","arr","podProperties","entries","propValue","propName","decodePropValue","output","board","formatBytes","numBytes","parseFloat","toFixed","handleErrorMessage","msg","url","line","logger","logStream","taskStream","_store","logsEnabled","args","arguments","isEnabled","enable","_navigator","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","filename","Date","blob","saveAs","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","close","EventSource","onopen","onmessage","m","onerror","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","searchHub","category","q","sort","CHART_LEVELS","getExampleFlows","flows","exampleFlows","flow","parsed","e","getUserFlows","userFlows","localStorage","getItem","_","isEmpty","_userFlow","getInitialLevelOccurences","occurences","lastLog","levels","level","hostname","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadFlow","showPodByLabel","createNewFlow","updateFlow","deleteFlow","init","clearIntervals","shutdown","ready","images","banner","loading","modal","menuVisible","selectedFlow","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","taskData","qps","current","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","messages","bytes","selectedNode","modalParams","currentTab","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","updateChartInterval","clearInterval","updateTaskInterval","api","connectedFlow","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","setInterval","status","message","created","createdDate","fromUnixTime","nanoid","transformLog","unixTime","timestamp","formattedTimestamp","toLocaleString","process","levelname","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","updateSummaryCharts","flowchart","customYAML","flowId","newFlow","saveFlowsToStorage","flowNumbers","filter","f","largestNumber","omit","nonExampleFlows","toSave","setItem","setTimeout","String","includes","showError","image","reload","bannerTimeout","clearTimeout","hideBanner","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getLogLevelCharts","emptyItem","chartData","now","getLogLevelOccurences","getTaskData","getActivePanel","getConnectionStatus","isLoading","getFlowchart","getFlows","getSelectedFlowId","getAvailableProperties","getIndexedLog","getStoreCopy","cloneDeep","register","peakLogs","peakStore","this","EventEmitter","MainSidebar","props","onChange","setState","state","Store","getMenuState","sidebarNavItems","getSidebarItems","dispatch","on","removeListener","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","React","Component","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","CookiesBanner","acceptCookies","Button","InfoBanner","ConnectionBanner","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","inputRef","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","as","rows","submitReview","hiddenKeys","xs","IconSidebarLayout","componentWillUnmount","getData","acceptedCookies","yamlString","storeCopy","render","children","hideLogoText","LogDetails","PasteYAML","WriteReview","PageTitle","subtitle","sm","ChartNode","ButtonGroup","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","ReadOnly","duplicateFlow","EditLink","updateLink","deleteSelection","nodeFromId","nodeToId","choices","FormControl","choice","EditNode","updateLabel","updateNewValue","updateExistingValue","availableProperties","searchQuery","setSearchQuery","filteredProperties","setFilteredProperties","useEffect","results","property","toLowerCase","spellCheck","searchString","newProperties","PodMenu","defaultPods","FlowChartSidebar","readonly","updateNode","selectedId","selectedType","setNode","parseNode","Card","newNode","NodePort","data-html2canvas-ignore","SelectionIndicator","show","TitleConnectionIndicator","DeleteFlowButton","EditFlowsButton","isEditing","FlowSelection","selectedFlowId","setIsEditing","currentFlow","Toggle","Menu","Item","Header","currentIsEditing","itemId","syncEvents","FlowView","componentDidMount","querySelector","preventDefault","extension","classList","add","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","flowType","callback","newChart","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","syncFlow","selectNode","copyChartAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","stopPropagation","display","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","action","newChartTransformer","_levels","INFO","borderColor","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","ChartBase","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","ticks","maxRotation","getXAxisLabel","yAxes","scaleLabel","labelString","gridLines","borderDash","zeroLineColor","drawBorder","suggestedMin","autoSkip","maxTicksLimit","Number","isInteger","chartConfig","getLabels","datasets","getParsedDatasets","options","ChartElement","canvasRef","updateChart","animation","update","activePoints","getElementsAtEvent","amount","levelData","tick","borderWidth","height","createRef","LogLevelSummaryChart","showLog","_index","Body","_colors","background","PieChart","getColor","names","mode","LogLevelPieChart","customStyles","container","provided","selectProps","MultiFilterSelect","onFilterChange","rest","val","isMulti","styles","LogItem","memo","columns","showLogDetails","logData","logName","levelInitial","firstCol","secondCol","thirdCol","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","useTimeoutFn","fn","ms","useRef","isReady","useCallback","set","clear","miniSearchOptions","fields","generateFormatFileName","itemKey","toOption","arrayLike","LogsTable","scrolledToBottom","setScrolledToBottom","windowListRef","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","setSearchString","useMiniSearch","search","searchResults","addAllAsync","buffer","previousLength","usePrevious","newLog","resultData","filters","sources","Set","scrollToItem","deps","cancel","reset","useDebounce","DropdownButton","lineno","funcname","pathname","serializeLogsToCSV","serializeLogsToText","onScroll","scrollOffset","itemCount","itemSize","itemData","ElapsedCard","ProgressCard","percent","newData","hoverBorderColor","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","difference","suggestedMax","tension","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","Container","QueriesPerSecond","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","original","setOriginal","updates","setUpdates","expanded","setExpanded","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","StarRating","rating","userRated","rate","round","getStars","integer","remainder","j","ImageCard","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","HubView","sortBy","sortType","setCategory","updateSearch","BuildHistory","buildHistory","build","formattedCreated","buildSize","os","architecture","ImageDetails","version","documentation","source","license","vendor","ReadMe","readme","CopyCommand","copyCode","imageVar","repoTags","code","language","atomOneLight","ReviewCard","review","ImageReviews","newReview","HelpCard","icon","NotFound","exact","layout","IconSidebar","component","setLogs","newLogs","getImageData","imageData","readmeHTML","windowHash","windowParams","URLSearchParams","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","FallbackPage","resetErrorBoundary","App","basename","routes","route","FallbackComponent","onReset","palette","default","primary","main","secondary","warning","success","info","ReactDOM"],"mappings":"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","file":"static/js/main.44d93aa6.chunk.js","sourcesContent":["module.exports = {\n  pokedex: {\n    name:'Pokedex Query',\n    type: 'example',\n    yaml: `!Flow\n    with:\n      read_only: true\n      rest_api: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          chunk_seg:\n            x: 250\n            y: 268\n          tf_encode:\n            x: 250\n            y: 420\n          chunk_idx:\n            x: 250\n            y: 600\n          ranker:\n            x: 250\n            y: 836\n          doc_idx:\n            x: 249\n            y: 985\n    pods:\n      gateway: {}\n      chunk_seg:\n        uses: pods/craft.yml\n        parallel: $PARALLEL\n        needs: gateway\n      tf_encode:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 600000\n        needs: chunk_seg\n      chunk_idx:\n        uses: pods/chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        timeout_ready: 100000\n        needs: tf_encode\n      ranker:\n        uses: BiMatchRanker\n        needs: chunk_idx\n      doc_idx:\n        uses: pods/doc.yml\n        needs: ranker\n    \n    `,\n  },\n  flower:{\n    name:'Flower Search Query',\n    type: 'example',\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 250\n            y: 150\n          loader:\n            x: 250\n            y: 257\n          flipper:\n            x: 252\n            y: 407\n          normalizer:\n            x: 239\n            y: 563\n          encoder:\n            x: 252\n            y: 712\n          chunk_indexer:\n            x: 250\n            y: 872\n          ranker:\n            x: 252\n            y: 1066\n          doc_indexer:\n            x: 253\n            y: 1199\n    pods:\n      gateway: {}\n      loader:\n        uses: yaml/craft-load.yml\n        read_only: true\n        needs: gateway\n      flipper:\n        uses: yaml/craft-flip.yml\n        read_only: true\n        needs: loader\n      normalizer:\n        uses: yaml/craft-normalize.yml\n        read_only: true\n        needs: flipper\n      encoder:\n        uses: $ENCODER\n        timeout_ready: 600000\n        read_only: true\n        needs: normalizer\n      chunk_indexer:\n        uses: yaml/index-chunk.yml\n        separated_workspace: true\n        polling: all\n        uses_reducing: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: yaml/index-doc.yml\n        needs: ranker  \n    `\n  },\n  southpark: {\n    name: 'Southpark Query',\n    type: 'example',\n    yaml: `!Flow\n    with:\n      read_only: true\n      port_expose: $JINA_PORT\n      board:\n        canvas:\n          gateway:\n            x: 254\n            y: 147\n          splittor:\n            x: 254\n            y: 270\n          encoder:\n            x: 254\n            y: 448\n          chunk_indexer:\n            x: 251\n            y: 645\n          ranker:\n            x: 255\n            y: 862\n          doc_indexer:\n            x: 256\n            y: 1002\n    pods:\n      gateway: {}\n      splittor:\n        uses: pods/craft-split.yml\n        parallel: $PARALLEL\n        read_only: true\n        needs: gateway\n      encoder:\n        uses: pods/encode.yml\n        parallel: $PARALLEL\n        timeout_ready: 60000\n        read_only: true\n        needs: splittor\n      chunk_indexer:\n        uses: pods/index-chunk.yml\n        shards: $SHARDS\n        separated_workspace: true\n        polling: all\n        reducing_uses: _merge_all\n        needs: encoder\n      ranker:\n        uses: MinRanker\n        needs: chunk_indexer\n      doc_indexer:\n        uses: pods/index-doc.yml\n        needs: ranker\n    `,\n  }\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_FLOW: \"LOAD_FLOW\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n  CREATE_NEW_FLOW: \"CREATE_NEW_FLOW\",\n  UPDATE_FLOW: \"UPDATE_FLOW\",\n  DUPLICATE_FLOW: \"DUPLICATE_FLOW\",\n  DELETE_FLOW: \"DELETE_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","import React from \"react\";\n\nfunction NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n\nexport { NavbarSpacer };\n","import React from \"react\";\n\ntype Props = {\n  toggleSidebar: () => void;\n};\n\nfunction NavbarToggle({ toggleSidebar }: Props) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n\nexport { NavbarToggle };\n","import React from \"react\";\n// @ts-ignore\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\ntype Props = {\n  connected: boolean;\n  reconnect: () => void;\n};\n\nfunction ConnectionIndicator({ connected, reconnect }: Props) {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n\nexport { ConnectionIndicator };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n  // @ts-ignore\n} from \"shards-react\";\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  userActionsVisible: boolean;\n  user: User | null;\n  logOut: () => void;\n  toggleUserActions: () => void;\n};\n\nfunction UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}: Props) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n\nexport { UserActions };\n","import React, { useState } from \"react\";\n// @ts-ignore\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport { NavbarSpacer } from \"./NavbarSpacer\";\nimport { NavbarToggle } from \"./NavbarToggle\";\nimport { ConnectionIndicator } from \"./ConnectionIndicator\";\nimport { UserActions } from \"./UserActions\";\n\ntype User = {\n  displayName: string;\n  emails: [{ value: string }];\n  id: string;\n  nodeId: string;\n  photos: [{ value: string }];\n  profileUrl: string;\n  provider: string;\n  username: string;\n  _json: any;\n  _raw: any;\n};\n\ntype Props = {\n  usesAuth: boolean;\n  usesConnection: boolean;\n  connected: boolean;\n  logOut: () => void;\n  toggleSidebar: () => void;\n  reconnect: () => void;\n  user: User | null;\n};\n\nfunction MainNavbar({\n  usesAuth,\n  usesConnection,\n  logOut,\n  toggleSidebar,\n  reconnect,\n  connected,\n  user,\n}: Props) {\n  const [userActionsVisible, setUserActionsVisible] = useState(false);\n  function toggleUserActions() {\n    setUserActionsVisible((isVisible) => !isVisible);\n  }\n  return (\n    <div className=\"main-navbar bg-white sticky-top\">\n      <Container fluid className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarSpacer />\n          <Nav navbar className=\"border-left flex-row\">\n            {usesConnection && (\n              <ConnectionIndicator\n                reconnect={reconnect}\n                connected={connected}\n              />\n            )}\n            {usesAuth && (\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={toggleUserActions}\n                logOut={logOut}\n              />\n            )}\n          </Nav>\n          <NavbarToggle toggleSidebar={toggleSidebar} />\n        </Navbar>\n      </Container>\n    </div>\n  );\n}\n\nexport { MainNavbar };\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/podProperties.json\");\n\nfunction toBlob(content) {\n  return new Blob([content], { type: \"text,plain;charset=utf-8\" });\n}\nfunction serializeLogsToCSV(logs) {\n  const columns =\n    \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n    return acc;\n  }, columns);\n  return fileContent;\n}\n\nfunction serializeLogsToJSON(logs) {\n  const fileContent = logs.reduce((acc, log, i) => {\n    acc += JSON.stringify(log) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    return acc;\n  }, \"\\n\");\n  return `[${fileContent}]`;\n}\n\nfunction serializeLogsToText(logs) {\n  const fileContent = logs.reduce((acc, log) => {\n    acc += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    return acc;\n  }, \"\");\n  return fileContent;\n}\n\nconst serializeLogsToCSVBlob = (logs) => toBlob(serializeLogsToCSV(logs));\nconst serializeLogsToJSONBlob = (logs) => toBlob(serializeLogsToJSON(logs));\nconst serializeLogsToTextBlob = (logs) => toBlob(serializeLogsToText(logs));\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\nconst getNodeLabelsByPortId = ({ from, to }, nodes) => ({\n  [from.portId]: nodes[from.nodeId].label || nodes[from.nodeId].properties.name,\n  [to.portId]: nodes[to.nodeId].label || nodes[to.nodeId].properties.name,\n});\nconst decodePropValue = (propName, propValue) =>\n  propertyTypes[propName] === \"bool\" ? propValue === \"true\" : propValue;\nconst unpackIfLengthOne = (arr) =>\n  Array.isArray(arr) && arr.length === 1 ? arr[0] : arr;\n\nexport function formatAsYAML(chart) {\n  console.log(\"formatAsYAML input: \", chart);\n  const { with: chartWith, nodes, links } = chart;\n\n  const needsByPodLabel = Object.values(links).reduce((acc, curr) => {\n    const nodeLabelsByPortId = getNodeLabelsByPortId(curr, nodes);\n    const needs = nodeLabelsByPortId.outPort;\n    const neededBy = nodeLabelsByPortId.inPort;\n\n    if (!acc[neededBy]) {\n      acc[neededBy] = [];\n    }\n    acc[neededBy].push(needs);\n    return acc;\n  }, {});\n\n  const pods = Object.values(nodes).reduce((acc, node) => {\n    const { label } = node;\n    if (!label) return acc;\n\n    const podProperties = Object.entries(node.properties).reduce(\n      (acc, [key, propValue]) => {\n        acc[key] = decodePropValue(key, propValue);\n        return acc;\n      },\n      {}\n    );\n    if (needsByPodLabel[label]) {\n      podProperties.needs = unpackIfLengthOne(needsByPodLabel[label]);\n    }\n\n    acc[label] = { ...podProperties };\n    return acc;\n  }, {});\n\n  const canvas = Object.values(nodes).reduce((acc, node) => {\n    const {\n      position: { x, y },\n    } = node;\n    acc[node.label] = { x, y };\n    return acc;\n  }, {});\n\n  const output = { with: { ...chartWith, board: { canvas } }, pods };\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n\nexport {\n  serializeLogsToCSVBlob,\n  serializeLogsToTextBlob,\n  serializeLogsToJSONBlob,\n};\n","import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg, url, line) {\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nconst logger = {\n  log: function () {\n    if (!window.logsEnabled) return;\n    let args = [...arguments];\n    console.log(...args);\n    window.logs.push(args);\n  },\n  isEnabled: function () {\n    return window.logsEnabled;\n  },\n  enable: function () {\n    const _navigator = {};\n    for (let i in window.navigator) _navigator[i] = window.navigator[i];\n    window.logs = [];\n    window.logs.push(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    window.logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = window.logsFormat || \"json\";\n    const logs = window.logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","import axios from \"axios\";\nimport logger from \"../logger\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  connect: (settings, connectionUpdate, logUpdate, taskUpdate) => {\n    logger.log(\"api - connect - settings\", settings);\n\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    logger.log(\"api - connect - logString\", logString);\n\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logger.log(\"api - logStream.onopen called\");\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      logger.log(\"api - logStream.onerror - ERROR\", data);\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    logger.log(\"api - connect - taskString\", taskString);\n\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      logger.log(\"api - taskStream.onopen called\");\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      logger.log(\"api - taskStream.onerror - ERROR\", data);\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (settings) => {\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n    logger.log(\"api - getYAML - connectionString\", connectionString);\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nimport Dispatcher from \"./dispatcher\";\nimport { nanoid } from \"nanoid\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport logger from \"../logger\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleFlows from \"../data/exampleFlows\";\nimport { transformLog } from \"./tranformLog\";\n\nlet _store;\n\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getExampleFlows() {\n  const flows = {};\n\n  Object.entries(exampleFlows).forEach(([id, flow]) => {\n    const parsed = parseYAML(flow.yaml);\n    let canvas;\n    try {\n      canvas = parsed.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    const formatted = formatForFlowchart(parsed.data.pods, canvas);\n    flows[id] = {\n      ...flow,\n      flow: formatted,\n    };\n  });\n\n  return flows;\n}\n\nfunction getUserFlows() {\n  const userFlows = JSON.parse(localStorage.getItem(\"userFlows\"));\n  return _.isEmpty(userFlows)\n    ? {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n      }\n    : userFlows;\n}\n\nfunction getInitialFlow() {\n  return {\n    selected: {},\n    hovered: {},\n    scale: 1,\n    nodes: {\n      gateway: {\n        id: \"gateway\",\n        label: \"gateway\",\n        ports: {\n          outPort: {\n            id: \"outPort\",\n            type: \"output\",\n          },\n        },\n        properties: {},\n        position: { x: 629, y: 72 },\n      },\n    },\n    links: {},\n    offset: { x: 0, y: 0 },\n  };\n}\n\nfunction getInitialLevelOccurences() {\n  let occurences = {\n    lastLog: 0,\n    levels: {},\n  };\n  CHART_LEVELS.forEach((level) => {\n    occurences.levels[level] = 0;\n  });\n  return occurences;\n}\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flows: {\n      ...getUserFlows(),\n      ...getExampleFlows(),\n    },\n    selectedFlow: \"_userFlow\",\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: {},\n    currentTab: \"logStream\",\n  };\n}\n\nif (window.location.hostname === \"localhost\") logger.enable();\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    window.peakLogs = this.getLogs;\n    window.peakStore = () => console.log(_store);\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_FLOW:\n        this.loadFlow(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      case Constants.CREATE_NEW_FLOW:\n        this.createNewFlow();\n        break;\n      case Constants.DUPLICATE_FLOW:\n        this.createNewFlow(payload);\n        break;\n      case Constants.UPDATE_FLOW:\n        this.updateFlow(payload);\n        break;\n      case Constants.DELETE_FLOW:\n        this.deleteFlow(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    console.log(\"store:\", _store);\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async () => {\n    let flow;\n\n    try {\n      let str = await api.getYAML(_store.settings);\n      flow = parseYAML(str);\n    } catch (e) {\n      logger.log(\"initFlowChart - parseYAML[API] ERROR\", e);\n      return;\n    }\n\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n\n    logger.log(\"initFlowChart - flow\", flow);\n    logger.log(\"initFlowChart - canvas\", canvas);\n\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n\n    logger.log(\"initFlowChart - parsed\", parsed);\n\n    let flows = {};\n    flows.connectedFlow = {\n      flow: parsed,\n      name: \"Network Flow\",\n      type: \"remote\",\n    };\n    _store.flows = { ...flows, ..._store.flows };\n    _store.selectedFlow = \"connectedFlow\";\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status, message) => {\n    logger.log(\"handleLogConnectionStatus - status\", status);\n    logger.log(\"handleLogConnectionStatus - message\", message);\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n    }\n    this.emit(\"update-ui\");\n  };\n\n  handleNewLog = (message) => {\n    const { data } = message;\n    const log = transformLog(data);\n\n    log.unixTime = parseInt(log.created);\n    log.timestamp = new Date(log.unixTime * 1000);\n    log.formattedTimestamp = log.timestamp.toLocaleString();\n    log.idx = _store.logs.length;\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = async () => {\n    this.updateChartInterval = setInterval(this.updateSummaryCharts, 1000);\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    let x = 0;\n    let y = 0;\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n        x = value.position.x * -1 + 40;\n        y = value.position.y * -1 + 100;\n      }\n    }\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    logger.log(\"importCustomYAML - customYAML\", customYAML);\n    this.createNewFlow(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadFlow = (flowId) => {\n    _store.selectedFlow = flowId;\n    this.emit(\"update-flowchart\");\n  };\n\n  updateFlow = (newFlow) => {\n    _store.flows[_store.selectedFlow].flow = newFlow;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  createNewFlow = (customYAML) => {\n    let prefixString = \"Custom Flow\";\n\n    let userFlows = Object.values(_store.flows).filter((flow) =>\n      flow.name.startsWith(prefixString)\n    );\n\n    const flowNumbers = userFlows\n      .map((f) => parseInt(f.name.substring(prefixString.length)) || 0)\n      .sort((a, b) => a - b);\n\n    const largestNumber = flowNumbers[flowNumbers.length - 1] || 0;\n\n    const id = nanoid();\n\n    let flow;\n\n    if (customYAML) {\n      const parsed = parseYAML(customYAML);\n      let canvas;\n      try {\n        canvas = parsed.data.with.board.canvas;\n      } catch (e) {\n        canvas = {};\n      }\n      flow = formatForFlowchart(parsed.data.pods, canvas);\n    } else flow = getInitialFlow();\n\n    _store.flows[id] = {\n      name: `${prefixString} ${largestNumber + 1}`,\n      type: \"user-generated\",\n      flow,\n    };\n\n    _store.selectedFlow = id;\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  deleteFlow = (flowId) => {\n    _store.flows = _.omit(_store.flows, flowId);\n\n    const nonExampleFlows = Object.entries(_store.flows).filter(\n      ([id, flow]) => flow.type !== \"example\"\n    );\n\n    if (_store.selectedFlow === flowId && nonExampleFlows.length) {\n      _store.selectedFlow = nonExampleFlows[0][0];\n    } else if (!nonExampleFlows.length) {\n      _store.flows = {\n        _userFlow: {\n          name: \"Custom Flow 1\",\n          type: \"user-generated\",\n          flow: getInitialFlow(),\n        },\n        ..._store.flows,\n      };\n      _store.selectedFlow = \"_userFlow\";\n    }\n\n    this.saveFlowsToStorage();\n    this.emit(\"update-flowchart\");\n  };\n\n  saveFlowsToStorage = () => {\n    let toSave = {};\n    const { flows } = _store;\n    Object.entries(flows).forEach(([id, flow]) => {\n      if (flow.type === \"user-generated\") toSave[id] = flow;\n    });\n    localStorage.setItem(\"userFlows\", JSON.stringify(toSave));\n  };\n\n  saveSettings = (settings) => {\n    logger.log(\"saveSettings - settings\", settings);\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, modalParams } = data;\n    _store.modal = modal;\n    _store.modalParams = modalParams || {};\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = {};\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    let chartData = [];\n    let now = parseInt(new Date() / 1000);\n    for (let i = now - numSeconds; i < now; i++) {\n      chartData.push(\n        _store.logLevelOccurences[i] ? _store.logLevelOccurences[i] : emptyItem\n      );\n    }\n    return chartData;\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flows[_store.selectedFlow];\n  };\n\n  getFlows = () => {\n    return _store.flows;\n  };\n\n  getSelectedFlowId = () => {\n    return _store.selectedFlow;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n\n  getStoreCopy = () => {\n    return _.cloneDeep(_store);\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import { fromUnixTime } from \"date-fns\";\nimport { nanoid } from \"nanoid\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\nexport type RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n};\n\nexport type ProcessedLog = RawLog & {\n  createdDate: Date;\n  id: string;\n};\n\nfunction transformLog(log: RawLog) {\n  const { created } = log;\n  const createdDate = fromUnixTime(created);\n  const id = nanoid();\n  return { ...log, createdDate, id };\n}\n\nexport { transformLog };\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\ntype Props = {\n  show: boolean;\n  acceptCookies: () => void;\n};\n\nfunction CookiesBanner({ acceptCookies }: Props) {\n  return (\n    <div className=\"cookies-banner\">\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n\nexport { CookiesBanner };\n","import React from \"react\";\n\ntype Props = {\n  data: {\n    theme: string;\n    message: string;\n  };\n};\n\nfunction InfoBanner({ data }: Props) {\n  if (!data) return null;\n  return (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  );\n}\n\nexport { InfoBanner };\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  reconnect: () => void;\n};\n\nfunction ConnectionBanner({ reconnect }: Props) {\n  return (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport { ConnectionBanner };\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"msg\", \"unixTime\"];\n\nexport default ({ open, closeModal, modalParams }) => {\n  const log = modalParams.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.msg}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"msg\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport { MainNavbar } from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport { CookiesBanner } from \"../components/Common/CookiesBanner\";\nimport { InfoBanner } from \"../components/Common/InfoBanner\";\nimport { ConnectionBanner } from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      user: Store.getUser(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getUser);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getUser);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    const loggerEnabled = logger.isEnabled();\n    this.setState({\n      modal,\n      loading,\n      banner,\n      connected,\n      modalParams,\n      loggerEnabled,\n    });\n  };\n\n  getUser = () => {\n    const user = Store.getUser();\n    this.setState({ user });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      connected,\n      user,\n      loading,\n      modalParams,\n      loggerEnabled,\n    } = this.state;\n    const { children, usesAuth, usesConnection } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar\n              usesAuth={usesAuth}\n              usesConnection={usesConnection}\n              logOut={this.logOut}\n              toggleSidebar={this.toggleSidebar}\n              reconnect={this.reconnect}\n              connected={connected}\n              user={user}\n            />\n            <InfoBanner data={banner} />\n            {usesConnection && !loading && !connected && (\n              <ConnectionBanner reconnect={this.reconnect} />\n            )}\n            {children}\n            {!acceptedCookies && (\n              <CookiesBanner acceptCookies={this.acceptCookies} />\n            )}\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <LogDetails\n          open={modal === \"logDetails\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n          modalParams={modalParams}\n        />\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: string;\n  subtitle: string;\n  className: string;\n};\n\nfunction PageTitle({ title, subtitle, className }: Props) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n}\n\nexport { PageTitle };\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default function SidebarItem(props) {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport _ from \"lodash\";\nimport { IChart, ILink, INode } from \"@mrblenny/react-flow-chart\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\n\ninterface Node extends INode {\n  label?: string;\n}\n\ntype ParsedNode = {\n  label: string;\n  id: string;\n  properties: { [key: string]: string | number };\n  newProperties: { [key: string]: string | number };\n};\n\ntype NodesObject = {\n  [key: string]: Node;\n};\n\nconst parseNode = (node: Node): ParsedNode => {\n  const properties = { ...node.properties };\n  const newProperties = {};\n  const label = node.label || \"\";\n\n  return { label, id: node.id, properties, newProperties };\n};\n\nfunction ReadOnly({ duplicateFlow }: { duplicateFlow: () => void }) {\n  return (\n    <div className=\"readonly-overlay py-4 px-4 text-center\">\n      <h4 className=\"my-4\">\n        <b>\n          This flow is <span className=\"text-muted\">readonly</span>\n        </b>\n      </h4>\n      <p className=\"my-4\">To edit this flow, please duplicate it.</p>\n      <Button onClick={duplicateFlow}>Duplicate Flow</Button>\n    </div>\n  );\n}\n\ntype EditLinkProps = {\n  link: ILink;\n  nodes: NodesObject;\n  updateLink: (\n    linkId: string,\n    nodeFrom: string,\n    nodeTo: string | undefined\n  ) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditLink({ link, nodes, updateLink, deleteSelection }: EditLinkProps) {\n  let nodeFromId = link.from.nodeId;\n  let nodeToId = link.to.nodeId;\n\n  let choices = Object.keys(nodes).map((id) => {\n    return { label: nodes[id].label || nodes[id].properties.name, id };\n  });\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Edit Connection</b>\n      </h5>\n      <div className=\"flex-fill px-2\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>From</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, e.target.value, nodeToId)}\n            value={nodeFromId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n          <p className=\"mb-1\">\n            <b>To</b>\n          </p>\n          <FormControl\n            className=\"mb-2\"\n            as=\"select\"\n            onChange={(e) => updateLink(link.id, nodeFromId, e.target.value)}\n            value={nodeToId}\n          >\n            {choices.map((choice) => (\n              <option key={choice.id} value={choice.id}>\n                {choice.label}\n              </option>\n            ))}\n          </FormControl>\n        </div>\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Connection\n        </Button>\n      </div>\n    </div>\n  );\n}\n\ntype PropertyItem = {\n  name: string;\n  type: string;\n};\n\ntype EditNodeProps = {\n  node: ParsedNode;\n  availableProperties: PropertyItem[];\n  updateLabel: (label: string) => void;\n  updateNewValue: (key: string, value: string | number) => void;\n  updateExistingValue: (key: string, value: string | number) => void;\n  deleteSelection: () => void;\n};\n\nfunction EditNode({\n  node,\n  updateLabel,\n  updateNewValue,\n  updateExistingValue,\n  deleteSelection,\n  availableProperties,\n}: EditNodeProps) {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [filteredProperties, setFilteredProperties] = useState(\n    availableProperties\n  );\n\n  const updateSearchQuery = (searchString: string) => {\n    setSearchQuery(searchString);\n  };\n\n  useEffect(() => {\n    const results = availableProperties.filter((property: any) =>\n      property.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n    setFilteredProperties(results);\n  }, [searchQuery, availableProperties]);\n\n  useEffect(() => {\n    setSearchQuery(\"\");\n    setFilteredProperties(availableProperties);\n  }, [node.id, availableProperties]);\n\n  let label = node.label || node.properties.name;\n\n  return (\n    <div className=\"h-100 d-flex flex-column\">\n      <div className=\"p-2 mb-1\">\n        <p className=\"mb-1\">\n          <b>Pod Name</b>\n        </p>\n        <FormControl\n          spellCheck={false}\n          value={label}\n          onChange={(e) => updateLabel(e.target.value)}\n          className=\"pod-name-input\"\n        />\n      </div>\n      <p className=\"mb-0 px-2\">\n        <b>Properties</b>\n      </p>\n      <div className=\"m-2\">\n        <FormControl\n          spellCheck={false}\n          placeholder=\"search properties...\"\n          value={searchQuery}\n          onChange={(e) => updateSearchQuery(e.target.value)}\n        />\n      </div>\n      <div className=\"property-table flex-fill mx-2\">\n        {filteredProperties.map((property) => {\n          const { name, type } = property;\n          const value = node.properties[name];\n\n          if (typeof value == \"undefined\")\n            return (\n              <div key={name} className=\"property-item mb-2\">\n                <p className=\"property-label mb-1\">{name}</p>\n                <FormControl\n                  spellCheck={false}\n                  placeholder={type}\n                  type={type === \"int\" ? \"number\" : \"text\"}\n                  value={node.newProperties[name] || \"\"}\n                  onChange={(e) => updateNewValue(name, e.target.value)}\n                  className=\"property-value-input\"\n                ></FormControl>\n              </div>\n            );\n          return (\n            <div key={name} className=\"property-item mb-2\">\n              <p className=\"property-label mb-1\">{name}</p>\n              <FormControl\n                spellCheck={false}\n                placeholder={type}\n                type={type === \"int\" ? \"number\" : \"text\"}\n                value={value || \"\"}\n                onChange={(e) => updateExistingValue(name, e.target.value)}\n                className=\"property-value-input\"\n              />\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"p-2\">\n        <Button variant=\"danger\" className=\"w-100\" onClick={deleteSelection}>\n          Delete Pod\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nfunction PodMenu() {\n  return (\n    <div className=\"d-flex flex-column h-100\">\n      <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n        <b>Add Pods</b>\n      </h5>\n      <div className=\"p-3 scrollable flex-fill\">\n        <SidebarItem\n          ports={{\n            inPort: {\n              id: \"inPort\",\n              type: \"input\",\n            },\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          }}\n          properties={{}}\n        />\n        {defaultPods.map((pod, idx) => (\n          <SidebarItem\n            key={idx}\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={pod}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\ntype FlowChartSidebarProps = {\n  readonly: boolean;\n  chart: IChart;\n  duplicateFlow: () => void;\n  updateNode: (updates: any) => void;\n  deleteSelection: () => void;\n  updateLink: (\n    linkId: string,\n    nodeFromId: string,\n    nodeToId: string | undefined\n  ) => void;\n  availableProperties: PropertyItem[];\n};\n\nfunction FlowChartSidebar({\n  readonly,\n  chart,\n  duplicateFlow,\n  deleteSelection,\n  updateNode,\n  updateLink,\n  availableProperties,\n}: FlowChartSidebarProps) {\n  const {\n    selected: { id: selectedId, type: selectedType },\n    nodes,\n    links,\n  } = chart;\n\n  const [node, setNode] = useState<ParsedNode | undefined>();\n\n  useEffect(() => {\n    let node;\n    if (!selectedId) return;\n    const selectedNode = nodes[selectedId];\n    if (selectedNode) node = parseNode(selectedNode);\n    setNode(node);\n  }, [nodes, selectedId]);\n\n  function updateLabel(label: string) {\n    updateNode({\n      ...node,\n      label,\n    });\n  }\n\n  function updateNewValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.newProperties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  function updateExistingValue(key: string, value: any) {\n    if (!node) return;\n    let newNode = _.cloneDeep(node);\n    newNode.properties[key] = value;\n    updateNode({\n      ...newNode,\n    });\n  }\n\n  return (\n    <Card className=\"flowchart-sidebar mb-4\">\n      {selectedId ? (\n        selectedType === \"link\" ? (\n          <EditLink\n            nodes={nodes}\n            link={links[selectedId]}\n            updateLink={updateLink}\n            deleteSelection={deleteSelection}\n          />\n        ) : (\n          node && (\n            <EditNode\n              availableProperties={availableProperties}\n              node={node}\n              updateLabel={updateLabel}\n              updateNewValue={updateNewValue}\n              updateExistingValue={updateExistingValue}\n              deleteSelection={deleteSelection}\n            />\n          )\n        )\n      ) : (\n        <PodMenu />\n      )}\n      {readonly && <ReadOnly duplicateFlow={duplicateFlow} />}\n    </Card>\n  );\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Dropdown } from \"react-bootstrap\";\n\nfunction SelectionIndicator({ selected }) {\n  return selected ? (\n    <i className=\"material-icons text-primary\">radio_button_checked</i>\n  ) : (\n    <i className=\"material-icons\">radio_button_unchecked</i>\n  );\n}\n\nfunction ConnectionIndicator({ connected, show }) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons ml-2 text-success\">wifi</i>\n  ) : (\n    <i className=\"material-icons ml-2 text-warning\">wifi_off</i>\n  );\n}\n\nfunction TitleConnectionIndicator({ connected, show }) {\n  if (!show) return null;\n  return connected ? (\n    <i className=\"material-icons text-white ml-1 mr-2\">wifi</i>\n  ) : (\n    <i className=\"material-icons text-warning ml-1 mr-2\">wifi_off</i>\n  );\n}\n\nfunction DeleteFlowButton({ show, deleteFlow }) {\n  if (!show) return null;\n  return (\n    <i className=\"material-icons text-danger float-right\" onClick={deleteFlow}>\n      delete\n    </i>\n  );\n}\n\nfunction EditFlowsButton({ isEditing, onClick }) {\n  return isEditing ? (\n    <i\n      onClick={onClick}\n      className=\"material-icons float-right cursor-pointer text-success\"\n    >\n      done\n    </i>\n  ) : (\n    <i onClick={onClick} className=\"material-icons float-right cursor-pointer\">\n      edit\n    </i>\n  );\n}\n\nexport default function FlowSelection({\n  flows,\n  loadFlow,\n  selectedFlowId,\n  createNewFlow,\n  deleteFlow,\n  connected,\n}) {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const toggleEditing = () => {\n    setIsEditing((currentIsEditing) => !currentIsEditing);\n  };\n\n  const userFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type !== \"example\"\n  );\n\n  const exampleFlows = Object.entries(flows).filter(\n    ([id, flow]) => flow.type === \"example\"\n  );\n\n  const currentFlow = flows[selectedFlowId];\n\n  return (\n    <Dropdown className=\"flow-selection\">\n      <Dropdown.Toggle>\n        {currentFlow.name}\n        <TitleConnectionIndicator\n          show={currentFlow.type === \"remote\"}\n          connected={connected}\n        />\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item onClick={createNewFlow}>\n          <i className=\"material-icons\">add</i>New Flow\n        </Dropdown.Item>\n        <Dropdown.Header className=\"text-uppercase\">\n          Your Flows{\" \"}\n          <EditFlowsButton isEditing={isEditing} onClick={toggleEditing} />\n        </Dropdown.Header>\n        {userFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator selected={flowId === selectedFlowId} />\n            {flow.name}\n            <ConnectionIndicator\n              show={flow.type === \"remote\"}\n              connected={connected}\n            />\n            <DeleteFlowButton\n              show={flow.type === \"user-generated\" && isEditing}\n              deleteFlow={(e) => deleteFlow(e, flowId)}\n            />\n          </Dropdown.Item>\n        ))}\n        <Dropdown.Header className=\"text-uppercase\">Examples</Dropdown.Header>\n        {exampleFlows.map(([flowId, flow], idx) => (\n          <Dropdown.Item onClick={() => loadFlow(flowId)} key={idx}>\n            <SelectionIndicator itemId={flowId} selectedId={selectedFlowId} />\n            {flow.name}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar.tsx\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport FlowSelection from \"../components/FlowChart/FlowSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nconst syncEvents = [\n  \"onDragNodeStop\",\n  \"onCanvasDrop\",\n  \"onCanvasClick\",\n  \"onNodeClick\",\n  \"onDragCanvasStop\",\n  \"updateNode\",\n  \"updateLink\",\n];\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    const connected = Store.getConnectionStatus();\n    const availableProperties = Store.getAvailableProperties();\n    this.state = {\n      availableProperties,\n      flowType,\n      connected,\n      chart,\n      selectedFlowId,\n      flows,\n      showOverlay: false,\n    };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateFlow({ ...chart, ...newChart }, key);\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-ui\", this.getConnectionStatus);\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n    Store.removeListener(\"update-ui\", this.getConnectionStatus);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const { flow: chart, type: flowType } = Store.getFlowchart();\n    const selectedFlowId = Store.getSelectedFlowId();\n    const flows = Store.getFlows();\n    this.setState({ chart, flowType, selectedFlowId, flows });\n  };\n\n  getConnectionStatus = () => {\n    const connected = Store.getConnectionStatus();\n    this.setState({ connected });\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateNode\");\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateFlow({ ...chart, ...newChart }, \"updateLink\");\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateFlow = (flow, event) => {\n    if (syncEvents.includes(event)) return this.syncFlow(flow);\n    this.setState({ chart: flow });\n  };\n\n  syncFlow = (flow) => {\n    Dispatcher.dispatch({\n      actionType: Constants.UPDATE_FLOW,\n      payload: flow,\n    });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId }) => {\n    return !(fromNodeId === toNodeId || fromPortId === toPortId);\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadFlow = (flow) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_FLOW,\n      payload: flow,\n    });\n  };\n\n  createNewFlow = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.CREATE_NEW_FLOW,\n    });\n  };\n\n  deleteFlow = (e, flowId) => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dispatcher.dispatch({\n      actionType: Constants.DELETE_FLOW,\n      payload: flowId,\n    });\n  };\n\n  duplicateFlow = () => {\n    const yaml = formatAsYAML(this.state.chart);\n    Dispatcher.dispatch({\n      actionType: Constants.DUPLICATE_FLOW,\n      payload: yaml,\n    });\n  };\n\n  render = () => {\n    const {\n      chart,\n      flows,\n      selectedFlowId,\n      showOverlay,\n      connected,\n      flowType,\n      availableProperties,\n    } = this.state;\n    const readonly = flowType !== \"user-generated\";\n    console.log(\"chart:\", chart);\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <FlowSelection\n                connected={connected}\n                flows={flows}\n                selectedFlowId={selectedFlowId}\n                createNewFlow={this.createNewFlow}\n                loadFlow={this.loadFlow}\n                deleteFlow={this.deleteFlow}\n              />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    readonly,\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              availableProperties={availableProperties}\n              duplicateFlow={this.duplicateFlow}\n              readonly={readonly}\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _levels = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass ChartBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"top\",\n        labels: {\n          padding: 10,\n          boxWidth: 15,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              callback: this.getXAxisLabel,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Occurences\",\n            },\n            gridLines: {\n              labelString: \"hello\",\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: function (value) {\n                if (Number.isInteger(value)) {\n                  return value;\n                }\n              },\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: this.getParsedDatasets(),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: this.getParsedDatasets(),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  getXAxisLabel = (value, index, values) => {\n    if (index === 0) return values.length + \"s ago\";\n    else if (index === parseInt(values.length / 2)) return index + \"s ago\";\n    return;\n  };\n\n  getParsedDatasets = () => {\n    const { data } = this.props;\n    const datasets = Object.keys(_levels).map((level) => {\n      const levelData = data.map((tick) => tick.levels[level]);\n      return {\n        label: level,\n        fill: \"start\",\n        borderWidth: 1.5,\n        borderColor: _levels[level].borderColor,\n        backgroundColor: _levels[level].backgroundColor,\n        data: levelData,\n      };\n    });\n    return datasets;\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass LogLevelSummaryChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelCharts(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    const { chartData } = this.state;\n    let index = activePoints[0] && activePoints[0]._index;\n    console.log(\"index:\", index);\n\n    if (index && typeof index !== \"undefined\")\n      Dispatcher.dispatch({\n        actionType: Constants.SHOW_LOG_AT_INDEX,\n        payload: chartData[index].lastLog,\n      });\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header>Log Occurences by Level</Card.Header>\n        <Card.Body className=\"d-none d-md-block pb-2 pt-0\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelSummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport PieChart from \"./PieChart\";\n\nclass LogLevelPieChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelOccurences(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelOccurences();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header className=\"text-center\">Log Levels</Card.Header>\n        <Card.Body className=\"pt-0\">\n          <PieChart data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelPieChart;\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: string };\n\nconst customStyles = {\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n} & SelectProps;\n\nfunction MultiFilterSelect({ onFilterChange, options, ...rest }: Props) {\n  return (\n    <Select\n      onChange={(val) =>\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val])\n      }\n      isMulti\n      options={options}\n      styles={customStyles}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","const applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\nexport { applyFilters };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: any[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, msg, levelname, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useEffect, useRef } from \"react\";\n\nexport type UseTimeoutFnReturn = [() => boolean | null, () => void, () => void];\n\nfunction useTimeoutFn(fn: Function, ms: number = 0): UseTimeoutFnReturn {\n  const ready = useRef<boolean | null>(false);\n  const timeout = useRef<ReturnType<typeof setTimeout>>();\n  const callback = useRef(fn);\n\n  const isReady = useCallback(() => ready.current, []);\n\n  const set = useCallback(() => {\n    ready.current = false;\n    timeout.current && clearTimeout(timeout.current);\n\n    timeout.current = setTimeout(() => {\n      ready.current = true;\n      callback.current();\n    }, ms);\n  }, [ms]);\n\n  const clear = useCallback(() => {\n    ready.current = null;\n    timeout.current && clearTimeout(timeout.current);\n  }, []);\n\n  // update ref when function changes\n  useEffect(() => {\n    callback.current = fn;\n  }, [fn]);\n\n  // set on mount, clear on unmount\n  useEffect(() => {\n    set();\n\n    return clear;\n  }, [ms]);\n\n  return [isReady, clear, set];\n}\nexport { useTimeoutFn };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useMiniSearch } from \"react-minisearch\";\nimport { usePrevious } from \"./usePrevious\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { applyFilters } from \"./useFilters\";\nimport { LogItem } from \"./LogItem\";\nimport { ProcessedLog } from \"../../flux/tranformLog\";\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { useDebounce } from \"../../hooks/useDebounce\";\nimport {\n  serializeLogsToCSVBlob,\n  serializeLogsToJSONBlob,\n  serializeLogsToTextBlob,\n} from \"../../helpers\";\nimport { saveAs } from \"file-saver\";\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\nconst ROW_SIZE = 30;\n\nconst fields = [\"filename\", \"funcName\", \"msg\", \"name\", \"module\", \"pathname\"];\nconst miniSearchOptions = { fields };\n\nconst generateFormatFileName = (format: Format) =>\n  `jina-logs-${new Date()}.${format}`;\n\ntype Format = \"json\" | \"csv\" | \"txt\";\n\ntype Props = {\n  data: ProcessedLog[];\n  showLogDetails: (log: ProcessedLog) => void;\n};\n\nconst itemKey = (index: number, data: { items: ProcessedLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsTable({ data, showLogDetails }: Props) {\n  const [scrolledToBottom, setScrolledToBottom] = React.useState(true);\n  const windowListRef = useRef<any>();\n  const [selectedSources, setSelectedSources] = React.useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = React.useState<\n    { value: ProcessedLog[\"levelname\"] }[]\n  >([]);\n  const [searchString, setSearchString] = React.useState(\"\");\n  const { search, searchResults, addAllAsync } = useMiniSearch(\n    data,\n    miniSearchOptions\n  );\n  const buffer = useRef<any[]>([]);\n  const previousLength = usePrevious(data.length);\n  useEffect(() => {\n    if (previousLength && previousLength! > 0) {\n      const newLog = data[previousLength! - 1];\n      addAllAsync([newLog]);\n      buffer.current.push(newLog);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousLength, searchString]);\n\n  const unfiltered = searchString ? searchResults : data;\n\n  const resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n  useEffect(() => {\n    if (windowListRef.current && scrolledToBottom) {\n      windowListRef.current.scrollToItem(resultData.length);\n    }\n  }, [resultData.length, scrolledToBottom]);\n  useDebounce(\n    () => {\n      search(searchString);\n    },\n    1000,\n    [searchString]\n  );\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-3\">\n        <Row>\n          <Col md=\"8\">\n            <MultiFilterSelect\n              options={toOption(sources)}\n              onFilterChange={setSelectedSources}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Logsources\"\n            />\n            <MultiFilterSelect\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Levels\"\n            />\n            <DropdownButton\n              as={ButtonGroup}\n              title=\"Download Logs\"\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToCSVBlob(data),\n                    generateFormatFileName(\"csv\")\n                  )\n                }\n              >\n                Download as CSV\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToJSONBlob(data),\n                    generateFormatFileName(\"json\")\n                  )\n                }\n              >\n                Download as JSON\n              </Dropdown.Item>\n              <Dropdown.Item\n                onClick={() =>\n                  saveAs(\n                    serializeLogsToTextBlob(data),\n                    generateFormatFileName(\"txt\")\n                  )\n                }\n              >\n                Download as TXT\n              </Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col md=\"4\">\n            <Form.Control\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={(e) => {\n                setSearchString(e.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body\n        className=\"log-stream-container p-1 border-top\"\n        id=\"log-stream-container\"\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() =>\n              windowListRef.current.scrollToItem(resultData.length)\n            }\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        <AutoSizer>\n          {({ height, width }) => {\n            const firstCol = 300;\n            const secondCol = 300;\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - resultData.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={resultData.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: resultData,\n                  columns: { firstCol, secondCol, thirdCol },\n                  showLogDetails,\n                }}\n                ref={windowListRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import React from \"react\";\nfunction usePrevious(value: any) {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\nexport { usePrevious };\n","import { DependencyList, useEffect } from \"react\";\nimport { useTimeoutFn } from \"./useTimeoutFn\";\n\nexport type UseDebounceReturn = [() => boolean | null, () => void];\n\nfunction useDebounce(\n  fn: Function,\n  ms: number = 0,\n  deps: DependencyList = []\n): UseDebounceReturn {\n  const [isReady, cancel, reset] = useTimeoutFn(fn, ms);\n\n  useEffect(reset, deps);\n\n  return [isReady, cancel];\n}\n\nexport { useDebounce };\n","import React, { useEffect, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport LogLevelSummaryChart from \"../components/LogStream/LogLevelSummaryChart\";\nimport LogLevelPieChart from \"../components/LogStream/LogLevelPieChart\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store, Dispatcher, Constants } from \"../flux\";\nconst showLogDetails = (log) => {\n  Dispatcher.dispatch({\n    actionType: Constants.SHOW_MODAL,\n    payload: { modal: \"logDetails\", modalParams: { log } },\n  });\n};\n\nfunction LogsView() {\n  const [logs, setLogs] = useState([]);\n  function getData() {\n    const newLogs = Store.getLogs();\n    setLogs([...newLogs]);\n  }\n  useEffect(() => {\n    Store.on(\"update-logs\", getData);\n    return () => Store.removeListener(\"update-logs\", getData);\n  }, []);\n  return (\n    <Container fluid className=\"main-content-container px-0\">\n      <div className=\"px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Log Stream\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <Row>\n          <Col md=\"10\" className=\"mb-4\">\n            <LogLevelSummaryChart />\n          </Col>\n          <Col md=\"2\" className=\"mb-4\">\n            <LogLevelPieChart />\n          </Col>\n        </Row>\n        <LogsTable data={logs} showLogDetails={showLogDetails} />\n      </div>\n    </Container>\n  );\n}\n\nexport { LogsView };\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nexport default function ElapsedCard({ elapsed }) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState(Store.getSettings());\n  const [updates, setUpdates] = useState({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting, value) {\n    const newUpdates = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\nexport default function StarRating({ rating, userRated, rate }) {\n  const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n  const stars = getStars(formatted, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n}\n\nconst getStars = (amount, rate) => {\n  let stars = [];\n  let integer = parseInt(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default function ImageCard({ image }) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function BuildHistory(props) {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default function ImageDetails({ image }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReadMe({ readme, documentation }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default function CopyCommand(props) {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReviewCard({ review }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default function ImageReviews({ reviews, newReview }) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\ntype Props = {\n  title: string;\n  content: string;\n  icon: string;\n  theme: string;\n  link: string;\n};\n\nfunction HelpCard({ title, content, icon, theme, link }: Props) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n\nexport { HelpCard };\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport { HelpCard } from \"../components/Common/HelpCard\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport { LogsView } from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: IconSidebar,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n    props: {\n      usesConnection: true,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n    props: {\n      usesConnection: false,\n      usesAuth: false,\n    },\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n    props: {\n      usesConnection: false,\n      usesAuth: true,\n    },\n  },\n];\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport { PageTitle } from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, modalParams: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { FallbackProps } from \"react-error-boundary\";\nimport { PageTitle } from \"./components/Common/PageTitle\";\nimport { Button } from \"shards-react\";\n\nfunction FallbackPage({ error, resetErrorBoundary }: FallbackProps) {\n  return (\n    <Container fluid className=\"main-content-container p-5\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          title=\"Error\"\n          subtitle=\"This should not have happened\"\n          className=\"text-sm-left my-3\"\n        />\n      </Row>\n      <Row noGutters className=\"page-header py-4\">\n        <Col xs=\"12\" sm=\"3\">\n          <p>Something went wrong:</p>\n          <pre>\n            <code className=\"text-warning\">{error!.message}</code>\n          </pre>\n        </Col>\n      </Row>\n      <Row noGutters className=\"page-header\">\n        <Col>\n          <Button onClick={resetErrorBoundary}>Try again</Button>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport { FallbackPage };\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport { FallbackPage } from \"./FallbackPage\";\nimport { Store } from \"./flux/\";\n\nconst App = () => {\n  return (\n    <Router basename={\"/\"}>\n      <div>\n        {routes.map((route, index) => {\n          return (\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={withTracker((props) => {\n                return (\n                  <route.layout {...props} {...route.props}>\n                    <ErrorBoundary\n                      FallbackComponent={FallbackPage}\n                      onReset={() => Store.init()}\n                    >\n                      <route.component {...props} />\n                    </ErrorBoundary>\n                  </route.layout>\n                );\n              })}\n            />\n          );\n        })}\n      </div>\n    </Router>\n  );\n};\n\nexport { App };\n","const PERSIAN_GREEN = \"#009999\";\nconst GOLDEN_TANOI = \"#FFCC66\";\nconst BITTER_SWEET = \"#ff6666\";\nconst SCOOTER_GREEN = \"#32C8CD\";\n\nconst theme = {\n  palette: {\n    background: { default: \"#FFFFFF\" },\n    primary: {\n      main: PERSIAN_GREEN,\n    },\n    secondary: { main: GOLDEN_TANOI },\n    warning: { main: GOLDEN_TANOI },\n    error: { main: BITTER_SWEET },\n    success: { main: PERSIAN_GREEN },\n    info: { main: SCOOTER_GREEN },\n  },\n};\n\nexport { theme };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\nimport { ThemeProvider } from \"emotion-theming\";\nimport { theme } from \"./theme\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n","module.exports = {\n  timeout: 15000,\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}