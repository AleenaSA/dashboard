{"version":3,"sources":["data/yaml.js","flux/constants.js","settings.js","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/Notifications.js","components/Layout/MainNavbar/UserActions.js","flux/dispatcher.js","helpers.js","logger.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Default.jsx","components/Common/CookiesBanner.jsx","components/Common/InfoBanner.jsx","components/Common/ConnectionBanner.jsx","modals/PasteYAML.jsx","modals/WriteReview.jsx","modals/LogDetails.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/NodePort.jsx","components/FlowChart/ExampleSelection.jsx","views/FlowView.jsx","components/LogStream/ChartBase.jsx","components/LogStream/LogLevelSummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/LogLevelPieChart.jsx","components/Common/MultiFilterSelect.tsx","components/LogStream/useFilters.ts","components/LogStream/LogItem.tsx","components/LogStream/LogsTable.tsx","components/LogStream/usePrevious.ts","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/options.js","components/Settings/FormItem.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","views/PackageView.jsx","views/LogIn.jsx","withTracker.js","App.js","serviceWorker.js","index.js","flux/config.js"],"names":["module","exports","pokedex","flower","southpark","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_EXAMPLE","SHOW_POD_IN_FLOW","nodeOffset","x","y","NavbarSpacer","className","NavbarToggle","toggleSidebar","onClick","Notifications","connected","reconnect","pill","theme","UserActions","user","logOut","userActionsVisible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","to","DropdownMenu","right","small","open","Link","Dispatcher","YAML","require","settings","propertyList","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","type","parents","Array","isArray","i","length","nodeFrom","linkId","link","color","from","nodeId","portId","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","formatBytes","numBytes","parseFloat","toFixed","prop","name","handleErrorMessage","msg","url","line","logger","log","logStream","taskStream","_store","window","logsEnabled","args","arguments","console","logs","push","isEnabled","enable","_navigator","navigator","addEventListener","disable","removeEventListener","setFormat","format","logsFormat","exportLogs","content","JSON","stringify","filename","Date","blob","Blob","saveAs","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","connect","connectionUpdate","logUpdate","taskUpdate","logString","host","port","startsWith","close","EventSource","onopen","onmessage","m","onerror","taskString","profile","getProfile","a","get","result","getYAML","connectionString","getImages","getImage","postRating","imageId","stars","post","postReview","searchHub","category","q","sort","CHART_LEVELS","getInitialLevelOccurences","occurences","lastLog","levels","level","location","hostname","registerActions","actionType","payload","Constants","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","loadExample","showPodByLabel","init","clearIntervals","localStorage","getItem","yaml","shutdown","ready","images","banner","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","flowchart","outPort","logSources","logLevels","logLevelOccurences","logIndex","summaryCharts","processes","taskData","qps","current","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","messages","bytes","selectedNode","modalParams","currentTab","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","updateChartInterval","clearInterval","updateTaskInterval","yamlSTRING","flow","api","with","board","e","parsed","handleLogConnectionStatus","handleNewLog","handleNewTaskEvent","setInterval","status","message","nanoid","unixTime","created","timestamp","formattedTimestamp","toLocaleString","idx","process","levelname","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","map","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","updateSummaryCharts","entries","key","hash","customYAML","exampleName","exampleYAML","setItem","setTimeout","String","includes","showError","image","reload","bannerTimeout","clearTimeout","hideBanner","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getLogLevelCharts","emptyItem","chartData","now","getLogLevelOccurences","getTaskData","getActivePanel","path","substring","getConnectionStatus","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","getStoreCopy","_","cloneDeep","register","peakLogs","peakStore","this","EventEmitter","MainNavbar","componentWillUnmount","Store","removeListener","getData","setState","dispatch","state","render","fluid","navbar","on","React","Component","href","style","lineHeight","maxWidth","item","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","top","subItem","nav","SidebarNavItem","MainSidebar","props","onChange","getMenuState","sidebarNavItems","getSidebarItems","classes","classNames","lg","size","md","SidebarMainNavbar","SidebarNavItems","MainFooter","menuItems","copyright","loggerEnabled","enableLogger","disableLogger","defaultProps","contained","DashboardLayout","children","noNavbar","noFooter","sm","CookiesBanner","show","acceptCookies","Button","InfoBanner","ConnectionBanner","Row","Col","target","rel","variant","overlay","backgroundColor","border","bottom","maxHeight","left","padding","transform","width","overflow","inputRef","importYAML","ariaHideApp","isOpen","contentLabel","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","Form","Group","Label","Control","placeholder","ref","as","rows","submitReview","hiddenKeys","xs","filter","IconSidebarLayout","acceptedCookies","yamlString","storeCopy","hideLogoText","LogDetails","PasteYAML","WriteReview","PageTitle","subtitle","attrs","ChartNode","ButtonGroup","disabled","importChart","copyChart","exportImage","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","FlowChartSidebar","getInitialNodeState","newProperties","componentWillReceiveProps","nextProps","chart","searchResults","searchQuery","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","updateSearchQuery","searchProperties","query","indexProperties","search","availableProperties","lunr","field","add","renderEditNode","FormControl","spellCheck","property","deleteSelection","renderEditLink","nodeTo","choices","updateLink","choice","renderPodMenu","inPort","defaultPods","hasSelected","Card","NodePort","data-html2canvas-ignore","ExampleSelection","DropdownButton","Item","FlowView","componentDidMount","querySelector","preventDefault","extension","classList","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","updateChart","callback","newChart","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","copyChartAsYAML","output","propId","formatAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","example","display","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","reduce","action","newChartTransformer","_levels","INFO","borderColor","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","ChartBase","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","ticks","maxRotation","getXAxisLabel","yAxes","scaleLabel","labelString","gridLines","borderDash","zeroLineColor","drawBorder","suggestedMin","autoSkip","maxTicksLimit","Number","isInteger","chartConfig","getLabels","datasets","getParsedDatasets","options","ChartElement","canvasRef","animation","update","activePoints","getElementsAtEvent","amount","values","levelData","tick","borderWidth","height","createRef","LogLevelSummaryChart","showLog","_index","Header","Body","_colors","background","PieChart","getColor","names","mode","LogLevelPieChart","customStyles","container","provided","selectProps","MultiFilterSelect","onFilterChange","rest","val","isMulti","styles","LogItem","memo","columns","showLogDetails","logData","logName","levelInitial","firstCol","secondCol","thirdCol","toLowerCase","css","textOverflow","whiteSpace","paddingRight","marginRight","areEqual","miniSearchOptions","fields","itemKey","toOption","arrayLike","LogsTable","downloadLogs","useState","scrolledToBottom","setScrolledToBottom","windowListRef","useRef","selectedSources","setSelectedSources","selectedLevels","setSelectedLevels","searchString","setSearchString","useMiniSearch","addAllAsync","previousLength","useEffect","usePrevious","resultData","filters","acc","curr","sources","Set","scrollToItem","onScroll","scrollOffset","itemCount","itemSize","itemData","LogsView","lineno","funcname","pathname","Container","ElapsedCard","ProgressCard","percent","newData","hoverBorderColor","Chart","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","difference","suggestedMax","tension","percentage","increase","decrease","chartLabels","BarChartCard","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QueriesPerSecondCard","TaskView","QueriesPerSecond","baseOptions","advancedOptions","FormItem","colSpan","SettingsCard","original","setOriginal","updates","setUpdates","expanded","setExpanded","updateSetting","setting","newUpdates","form","aria-controls","aria-expanded","Collapse","in","SettingsView","Settings","StarRating","rating","userRated","rate","round","getStars","integer","remainder","j","ImageCard","reviews","official","author","description","totalStars","totalRatings","numReviews","Footer","HubView","sortBy","sortType","setCategory","updateSearch","BuildHistory","buildHistory","build","formattedCreated","buildSize","os","architecture","ImageDetails","version","documentation","source","license","vendor","ReadMe","readme","CopyCommand","copyCode","imageVar","repoTags","code","language","atomOneLight","ReviewCard","review","ImageReviews","newReview","HelpCard","icon","NotFound","exact","layout","DefaultLayout","component","IconSidebar","getImageData","imageData","readmeHTML","windowHash","windowParams","URLSearchParams","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","basename","routes","route","Boolean","ReactDOM","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.928e31c8.chunk.js","sourcesContent":["module.exports = {\n  pokedex: `!Flow\n  with:\n    read_only: true\n    rest_api: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        chunk_seg:\n          x: 250\n          y: 268\n        tf_encode:\n          x: 250\n          y: 420\n        chunk_idx:\n          x: 250\n          y: 600\n        ranker:\n          x: 250\n          y: 836\n        doc_idx:\n          x: 249\n          y: 985\n  pods:\n    gateway: {}\n    chunk_seg:\n      uses: pods/craft.yml\n      parallel: $PARALLEL\n      needs: gateway\n    tf_encode:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 600000\n      needs: chunk_seg\n    chunk_idx:\n      uses: pods/chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      timeout_ready: 100000\n      needs: tf_encode\n    ranker:\n      uses: BiMatchRanker\n      needs: chunk_idx\n    doc_idx:\n      uses: pods/doc.yml\n      needs: ranker\n  \n  `,\n  flower: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 250\n          y: 150\n        loader:\n          x: 250\n          y: 257\n        flipper:\n          x: 252\n          y: 407\n        normalizer:\n          x: 239\n          y: 563\n        encoder:\n          x: 252\n          y: 712\n        chunk_indexer:\n          x: 250\n          y: 872\n        ranker:\n          x: 252\n          y: 1066\n        doc_indexer:\n          x: 253\n          y: 1199\n  pods:\n    gateway: {}\n    loader:\n      uses: yaml/craft-load.yml\n      read_only: true\n      needs: gateway\n    flipper:\n      uses: yaml/craft-flip.yml\n      read_only: true\n      needs: loader\n    normalizer:\n      uses: yaml/craft-normalize.yml\n      read_only: true\n      needs: flipper\n    encoder:\n      uses: $ENCODER\n      timeout_ready: 600000\n      read_only: true\n      needs: normalizer\n    chunk_indexer:\n      uses: yaml/index-chunk.yml\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: yaml/index-doc.yml\n      needs: ranker  \n  `,\n  southpark: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n    board:\n      canvas:\n        gateway:\n          x: 254\n          y: 147\n        splittor:\n          x: 254\n          y: 270\n        encoder:\n          x: 254\n          y: 448\n        chunk_indexer:\n          x: 251\n          y: 645\n        ranker:\n          x: 255\n          y: 862\n        doc_indexer:\n          x: 256\n          y: 1002\n  pods:\n    gateway: {}\n    splittor:\n      uses: pods/craft-split.yml\n      parallel: $PARALLEL\n      read_only: true\n      needs: gateway\n    encoder:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 60000\n      read_only: true\n      needs: splittor\n    chunk_indexer:\n      uses: pods/index-chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      reducing_uses: _merge_all\n      needs: encoder\n    ranker:\n      uses: MinRanker\n      needs: chunk_indexer\n    doc_indexer:\n      uses: pods/index-doc.yml\n      needs: ranker\n  `,\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_EXAMPLE: \"LOAD_EXAMPLE\",\n  SHOW_POD_IN_FLOW: \"SHOW_POD_IN_FLOW\",\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","import React from \"react\";\n\nexport default function NavbarSpacer() {\n  return (\n    <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n  );\n}\n","import React from \"react\";\n\nexport default function NavbarToggle({ toggleSidebar }) {\n  return (\n    <nav className=\"nav cursor-pointer\">\n      <span\n        onClick={toggleSidebar}\n        className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n      >\n        <i className=\"material-icons\">&#xE5D2;</i>\n      </span>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport { NavItem, NavLink, Badge } from \"shards-react\";\n\nexport default function Notifications({ connected, reconnect }) {\n  return (\n    <NavItem\n      className=\"border-right dropdown notifications\"\n      onClick={reconnect}\n    >\n      <NavLink className=\"nav-link-icon text-center\">\n        <div className=\"nav-link-icon__wrapper\">\n          <i className=\"material-icons\">language</i>\n          {connected ? (\n            <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">done</i>\n            </Badge>\n          ) : (\n            <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n              <i className=\"material-icons\">close</i>\n            </Badge>\n          )}\n        </div>\n      </NavLink>\n    </NavItem>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n} from \"shards-react\";\n\nexport default function UserActions({\n  user,\n  logOut,\n  userActionsVisible,\n  toggleUserActions,\n}) {\n  return (\n    <NavItem tag={Dropdown} caret toggle={toggleUserActions}>\n      {user ? (\n        <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n          <img\n            className=\"user-avatar rounded-circle mr-2\"\n            src={user._json.avatar_url}\n            alt=\"User Avatar\"\n          />{\" \"}\n          <span className=\"d-none d-md-inline-block\">{user.username}</span>\n        </DropdownToggle>\n      ) : (\n        <Link to=\"/login\" className=\"nav-link px-3\">\n          <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n        </Link>\n      )}\n\n      <Collapse tag={DropdownMenu} right small open={userActionsVisible}>\n        <DropdownItem\n          tag={Link}\n          to=\"/\"\n          className=\"text-danger\"\n          onClick={logOut}\n        >\n          <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n        </DropdownItem>\n      </Collapse>\n    </NavItem>\n  );\n}\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/podProperties.json\");\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\n\nexport function formatAsYAML(chart) {\n  let output = {\n    with: chart.with || {},\n    pods: {},\n  };\n  output.with.board = { canvas: {} };\n\n  Object.keys(chart.nodes).forEach((id) => {\n    let node = chart.nodes[id];\n    node.label = node.label || node.properties.name;\n    if (node.properties.name) delete node.properties.name;\n  });\n\n  Object.keys(chart.nodes).forEach((id) => {\n    const node = chart.nodes[id];\n\n    if (!node.label) return;\n\n    output.pods[node.label] = {};\n\n    Object.keys(node.properties).forEach((propId) => {\n      let type = propertyTypes[propId];\n      if (type === \"bool\") {\n        output.pods[node.label][propId] =\n          String(node.properties[propId]) === \"true\";\n      } else if (type === \"int\")\n        output.pods[node.label][propId] = parseInt(node.properties[propId]);\n      else output.pods[node.label][propId] = node.properties[propId];\n    });\n    output.with.board.canvas[node.label] = {\n      x: node.position.x,\n      y: node.position.y,\n    };\n  });\n  Object.keys(chart.links).forEach((id) => {\n    const link = chart.links[id];\n    const nodeFrom = chart.nodes[link.from.nodeId].label;\n    const nodeTo = chart.nodes[link.to.nodeId].label;\n    if (!nodeFrom || !nodeTo) return;\n    if (output.pods[nodeTo].needs) {\n      if (!Array.isArray(output.pods[nodeTo].needs))\n        output.pods[nodeTo].needs = [output.pods[nodeTo].needs];\n      output.pods[nodeTo].needs.push(nodeFrom);\n    } else output.pods[nodeTo].needs = nodeFrom;\n  });\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n","import { saveAs } from \"file-saver\";\n\nfunction handleErrorMessage(msg, url, line) {\n  logger.log(\"window.onerror - ERROR\", msg, url, `line: ${line}`);\n}\n\nconst logger = {\n  log: function () {\n    if (!window.logsEnabled) return;\n    let args = [...arguments];\n    console.log(...args);\n    window.logs.push(args);\n  },\n  isEnabled: function () {\n    return window.logsEnabled;\n  },\n  enable: function () {\n    const _navigator = {};\n    for (let i in window.navigator) _navigator[i] = window.navigator[i];\n    window.logs = [];\n    window.logs.push(_navigator);\n    window.addEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = true;\n  },\n  disable: function () {\n    window.removeEventListener(\"error\", handleErrorMessage);\n    window.logsEnabled = false;\n  },\n  setFormat: function (format = \"json\") {\n    window.logsFormat = format;\n  },\n  exportLogs: function () {\n    const format = window.logsFormat || \"json\";\n    const logs = window.logs;\n    let content = \"[\\n\";\n    for (let i = 0; i < logs.length; ++i) {\n      let args = logs[i];\n      content += JSON.stringify(args) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n    }\n    content += \"]\";\n\n    let filename = `jina-dashboard-debug-output-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  },\n};\n\nexport default logger;\n","import axios from \"axios\";\nimport logger from \"../logger\";\nimport { hubURL, timeout } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  connect: (settings, connectionUpdate, logUpdate, taskUpdate) => {\n    logger.log(\"api - connect - settings\", settings);\n\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    logger.log(\"api - connect - logString\", logString);\n\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logger.log(\"api - logStream.onopen called\");\n      connectionUpdate(\n        \"connected\",\n        `Logserver connection established at ${settings.host}:${settings.port}`\n      );\n    };\n\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n\n    logStream.onerror = (data) => {\n      logger.log(\"api - logStream.onerror - ERROR\", data);\n      connectionUpdate(\n        \"failed\",\n        `Could not connect to logserver at ${settings.host}:${settings.port}`\n      );\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    logger.log(\"api - connect - taskString\", taskString);\n\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      logger.log(\"api - taskStream.onopen called\");\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n\n    taskStream.onerror = (data) => {\n      logger.log(\"api - taskStream.onerror - ERROR\", data);\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (connectionString) => {\n    logger.log(\"api - getYAML - connectionString\", connectionString);\n    const result = await axios.get(connectionString, { timeout });\n    return result.data;\n  },\n  getImages: async () => {\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport { nanoid } from \"nanoid\";\nimport _ from \"lodash\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport logger from \"../logger\";\nimport propertyList from \"../data/podProperties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleYAML from \"../data/yaml\";\n\nlet _store;\n\nconst HIDE_BANNER_TIMEOUT = 5000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getInitialLevelOccurences() {\n  let occurences = {\n    lastLog: 0,\n    levels: {},\n  };\n  CHART_LEVELS.forEach((level) => {\n    occurences.levels[level] = 0;\n  });\n  return occurences;\n}\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: false,\n    connected: false,\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected: {},\n      hovered: {},\n      scale: 1,\n      nodes: {\n        gateway: {\n          id: \"gateway\",\n          label: \"gateway\",\n          ports: {\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          },\n          properties: {},\n          position: { x: 629, y: 72 },\n        },\n      },\n      links: {},\n      offset: { x: 0, y: 0 },\n    },\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    logLevelOccurences: {},\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: {},\n    currentTab: \"logStream\",\n  };\n}\n\nif (window.location.hostname === \"localhost\") logger.enable();\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n    window.peakLogs = this.getLogs;\n    window.peakStore = () => console.log(_store);\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_EXAMPLE:\n        this.loadExample(payload);\n        break;\n      case Constants.SHOW_POD_IN_FLOW:\n        this.showPodByLabel(payload);\n        break;\n      default:\n    }\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async (yamlSTRING) => {\n    logger.log(\"initFlowChart - yamlString\", yamlSTRING);\n    let flow;\n    const { settings } = _store;\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n\n    if (yamlSTRING) {\n      flow = parseYAML(yamlSTRING);\n    } else {\n      try {\n        let str = await api.getYAML(connectionString);\n        flow = parseYAML(str);\n      } catch (e) {\n        logger.log(\"initFlowChart - parseYAML[API] ERROR\", e);\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      canvas = {};\n    }\n    logger.log(\"initFlowChart - flow\", flow);\n    logger.log(\"initFlowChart - canvas\", canvas);\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(\n      _store.settings,\n      this.handleLogConnectionStatus,\n      this.handleNewLog,\n      this.handleNewTaskEvent\n    );\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleLogConnectionStatus = (status, message) => {\n    logger.log(\"handleLogConnectionStatus - status\", status);\n    logger.log(\"handleLogConnectionStatus - message\", message);\n    _store.loading = false;\n    if (status === \"connected\") {\n      _store.connected = true;\n      return this.showBanner(message, \"success\");\n    } else {\n      _store.connected = false;\n      return this.showBanner(message, \"error\");\n    }\n  };\n\n  handleNewLog = (message) => {\n    const { data: log } = message;\n    const id = nanoid();\n\n    log.unixTime = parseInt(log.created);\n    log.timestamp = new Date(log.unixTime * 1000);\n    log.formattedTimestamp = log.timestamp.toLocaleString();\n    log.idx = _store.logs.length;\n    log.id = id;\n\n    const { process, name, levelname, unixTime } = log;\n\n    _store.logs.push(log);\n    _store.processes[process] = log.name;\n\n    if (_store.logSources[name]) _store.logSources[name]++;\n    else _store.logSources[name] = 1;\n\n    if (_store.logLevels[levelname]) _store.logLevels[levelname]++;\n    else _store.logLevels[levelname] = 1;\n\n    if (!_store.logLevelOccurences[unixTime])\n      _store.logLevelOccurences[unixTime] = getInitialLevelOccurences();\n\n    _store.logLevelOccurences[unixTime].levels[levelname]++;\n    _store.logLevelOccurences[unixTime].lastLog = log.idx;\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { data } = message;\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = async () => {\n    this.updateChartInterval = setInterval(this.updateSummaryCharts, 1000);\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n    } catch (e) {\n      _store.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (logIndex) => {\n    if (!logIndex || !_store.logs[logIndex]) return;\n    _store.logIndex = logIndex;\n    this.emit(\"show-log\");\n  };\n\n  showPodByLabel = (label) => {\n    let selected = {};\n    let x = 0;\n    let y = 0;\n    for (const [key, value] of Object.entries(_store.flowchart.nodes)) {\n      if (value.label === label) {\n        selected.id = key;\n        selected.type = \"node\";\n        x = value.position.x * -1 + 40;\n        y = value.position.y * -1 + 100;\n      }\n    }\n    _store.flowchart.selected = selected;\n    _store.flowchart.offset = { x, y };\n    this.emit(\"update-flowchart\");\n    window.location.hash = \"#/flow\";\n  };\n\n  importCustomYAML = (customYAML) => {\n    logger.log(\"importCustomYAML - customYAML\", customYAML);\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadExample = (exampleName) => {\n    const flow = exampleYAML[exampleName];\n    this.initFlowChart(flow);\n    this.emit(\"update-flowchart\");\n  };\n\n  saveSettings = (settings) => {\n    logger.log(\"saveSettings - settings\", settings);\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(error);\n    }\n    if (result.error) this.showError(result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = false;\n    this.emit(\"update-ui\");\n  };\n\n  showError = (message) => {\n    this.showBanner(message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, modalParams } = data;\n    _store.modal = modal;\n    _store.modalParams = modalParams || {};\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = {};\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = () => {\n    return _store.banner;\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getLogLevelCharts = (numSeconds = 60) => {\n    const emptyItem = getInitialLevelOccurences();\n    let chartData = [];\n    let now = parseInt(new Date() / 1000);\n    for (let i = now - numSeconds; i < now; i++) {\n      chartData.push(\n        _store.logLevelOccurences[i] ? _store.logLevelOccurences[i] : emptyItem\n      );\n    }\n    return chartData;\n  };\n\n  getLogLevelOccurences = () => {\n    return _store.logLevels;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    return _store.connected;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n\n  getStoreCopy = () => {\n    return _.cloneDeep(_store);\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import React from \"react\";\nimport { Container, Navbar, Nav } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarToggle from \"./NavbarToggle\";\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainNavbar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userActionsVisible: false,\n      connected: Store.getConnectionStatus(),\n      user: Store.getUser(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-user\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-user\", this.getData);\n  };\n\n  getData = () => {\n    const connected = Store.getConnectionStatus();\n    const user = Store.getUser();\n    this.setState({ connected, user });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  toggleUserActions = () => {\n    this.setState({\n      userActionsVisible: !this.state.userActionsVisible,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n  render = () => {\n    const { connected, user, userActionsVisible } = this.state;\n    return (\n      <div className=\"main-navbar bg-white sticky-top\">\n        <Container fluid className=\"p-0\">\n          <Navbar\n            type=\"light\"\n            className=\"align-items-stretch flex-md-nowrap p-0\"\n          >\n            <NavbarSpacer />\n            <Nav navbar className=\"border-left flex-row\">\n              <Notifications reconnect={this.reconnect} connected={connected} />\n              <UserActions\n                user={user}\n                userActionsVisible={userActionsVisible}\n                toggleUserActions={this.toggleUserActions}\n                logOut={this.logOut}\n              />\n            </Nav>\n            <NavbarToggle toggleSidebar={this.toggleSidebar} />\n          </Navbar>\n        </Container>\n      </div>\n    );\n  };\n}\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nexport default ({ toggleSidebar }) => {\n  return (\n    <div className=\"main-navbar\">\n      <Navbar\n        className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n        type=\"light\"\n      >\n        <NavbarBrand\n          className=\"w-100 mr-0\"\n          href=\"#\"\n          style={{ lineHeight: \"25px\" }}\n        >\n          <div className=\"d-table m-auto\">\n            <img\n              id=\"main-logo\"\n              className=\"d-inline-block align-top\"\n              style={{ maxWidth: \"50px\" }}\n              src=\"/jina-light.svg\"\n              alt=\"Jina Dashboard\"\n            />\n          </div>\n        </NavbarBrand>\n        <span\n          className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n          onClick={toggleSidebar}\n        >\n          <i className=\"material-icons\">&#xE5C4;</i>\n        </span>\n      </Navbar>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\n\nexport default ({ item, toggleSidebar }) => {\n  const hasSubItems = item.items && item.items.length;\n  const path = window.location.hash.substring(2, window.location.hash.length);\n  let active = false;\n  item.matches.forEach((match) => {\n    if (path.startsWith(match)) active = true;\n  });\n\n  return (\n    <NavItem style={{ position: \"relative\" }}>\n      <NavLink\n        className={hasSubItems && \"dropdown-toggle\"}\n        tag={hasSubItems ? \"a\" : RouteNavLink}\n        to={hasSubItems ? \"#\" : item.to}\n        active={active}\n        onClick={toggleSidebar}\n      >\n        {item.htmlBefore && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n          />\n        )}\n        {item.title && <span>{item.title}</span>}\n        {item.htmlAfter && (\n          <div\n            className=\"d-inline-block item-icon-wrapper\"\n            dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n          />\n        )}\n      </NavLink>\n      {hasSubItems && (\n        <Collapse tag={DropdownMenu} small open={item.open} style={{ top: 0 }}>\n          {item.items.map((subItem, idx) => (\n            <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n              {subItem.title}\n            </DropdownItem>\n          ))}\n        </Collapse>\n      )}\n    </NavItem>\n  );\n};\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\n\nexport default ({ navItems: items, toggleSidebar }) => {\n  return (\n    <div className=\"nav-wrapper\">\n      {items.map((nav, idx) => (\n        <div key={idx}>\n          <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n          {typeof nav.items !== \"undefined\" && nav.items.length && (\n            <Nav className=\"nav--no-borders flex-column\">\n              {nav.items.map((item, idx) => (\n                <SidebarNavItem\n                  key={idx}\n                  item={item}\n                  toggleSidebar={toggleSidebar}\n                />\n              ))}\n            </Nav>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store, Dispatcher, Constants } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange = () => {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  };\n\n  toggleSidebar = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  };\n\n  render() {\n    const { sidebarNavItems } = this.state;\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar toggleSidebar={this.toggleSidebar} />\n        <SidebarNavItems\n          navItems={sidebarNavItems}\n          toggleSidebar={this.toggleSidebar}\n        />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({\n  menuItems,\n  copyright,\n  loggerEnabled,\n  enableLogger,\n  disableLogger,\n  exportLogs,\n}) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n          {loggerEnabled ? (\n            <>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={disableLogger}\n              >\n                Exit Debug Mode\n              </span>\n              <span\n                className=\"nav-link text-warning cursor-pointer\"\n                onClick={exportLogs}\n              >\n                Export Debug Data\n              </span>\n            </>\n          ) : (\n            <span\n              className=\"nav-link text-warning cursor-pointer\"\n              onClick={enableLogger}\n            >\n              Debug Mode\n            </span>\n          )}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DashboardLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DashboardLayout;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function CookiesBanner({ show, acceptCookies }) {\n  return (\n    <div className={`cookies-banner ${show ? \"\" : \"hidden\"}`}>\n      <p className=\"mb-2\">\n        We and third parties use cookies or similar technologies (\"Cookies\") as\n        described below to collect and process personal data, such as your IP\n        address or browser information. You can learn more about how this site\n        uses Cookies by reading our privacy policy linked below. By clicking \"I\n        consent to cookies\", you accept the placement and use of these Cookies\n        for these purposes. You can change your mind and revisit your\n        preferences at any time by accessing the “Cookie Preferences” link in\n        the footer of this site.\n      </p>\n      <Button className=\"ml-auto d-block\" onClick={acceptCookies}>\n        I consent to cookies\n      </Button>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function InfoBanner({ data }) {\n  return data ? (\n    <div className=\"mr-4\">\n      <div className={`mb-0 banner px-4 banner-${data.theme}`}>\n        {data.message}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React from \"react\";\nimport { Button, Row, Col } from \"react-bootstrap\";\n\nexport default function ConnectionBanner({ loading, connected, reconnect }) {\n  return loading || connected ? (\n    \"\"\n  ) : (\n    <div className=\"mb-0 banner px-3 banner-warning\">\n      <Row>\n        <Col md=\"8\" className=\"my-1\">\n          Could not connect to Jina instance. Please make sure your{\" \"}\n          <a href=\"#/settings\">settings</a> are configured correctly.\n        </Col>\n        <Col md=\"4\" className=\"text-right\">\n          <a\n            href=\"https://github.com/jina-ai/dashboard#getting-started\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"mr-2\"\n          >\n            <Button variant=\"light\">View Docs</Button>\n          </a>\n          <Button variant=\"primary\" onClick={reconnect}>\n            <i className=\"material-icons mr-1\">refresh</i>Try Again\n          </Button>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, importYAML }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Import YAML</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Label>Custom YAML:</Form.Label>\n          <Form.Control\n            placeholder=\"Paste Here\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => importYAML(inputRef.value)}\n      >\n        Continue\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\n\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nexport default ({ open, closeModal, submitReview }) => {\n  let inputRef;\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Write a Review</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0\">\n        <Form.Group>\n          <Form.Control\n            placeholder=\"Tell the world about your experience\"\n            ref={(ref) => (inputRef = ref)}\n            as=\"textarea\"\n            rows=\"10\"\n          />\n        </Form.Group>\n      </div>\n      <Button\n        className=\"btn-primary\"\n        onClick={() => submitReview(inputRef.value)}\n      >\n        Submit\n      </Button>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport { Row, Col } from \"react-bootstrap\";\nconst style = {\n  overlay: {\n    backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n  },\n  content: {\n    border: \"none\",\n    bottom: \"auto\",\n    maxHeight: \"80%\", // set height\n    left: \"50%\",\n    padding: \"2rem\",\n    position: \"fixed\",\n    right: \"auto\",\n    top: \"50%\", // start from center\n    transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n    width: \"90%\",\n    maxWidth: \"800px\",\n    overflow: \"hidden\",\n  },\n};\n\nconst hiddenKeys = [\"msg\", \"unixTime\"];\n\nexport default ({ open, closeModal, modalParams }) => {\n  const log = modalParams.log || {};\n  return (\n    <ReactModal\n      ariaHideApp={false}\n      isOpen={open}\n      contentLabel=\"Action Modal\"\n      className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n      shouldCloseOnOverlayClick={true}\n      style={style}\n      onRequestClose={closeModal}\n      closeTimeoutMS={100}\n    >\n      <div className=\"modal-header p-0\">\n        <h4>\n          <b>Log Details</b>\n        </h4>\n        <h4>\n          <span className=\"float-right close-icon\">\n            <i className=\"material-icons\" onClick={closeModal}>\n              close\n            </i>\n          </span>\n        </h4>\n      </div>\n      <div className=\"modal-body px-0 pb-0 pt-1\">\n        <Row className=\"px-3\">\n          <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n            <span className=\"text-bold\">msg</span>\n          </Col>\n          <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n            {log.msg}\n          </Col>\n        </Row>\n        {Object.entries(log)\n          .filter(([key, value]) => !hiddenKeys.includes(key))\n          .map(([key, value]) =>\n            key === \"msg\" ? (\n              \"\"\n            ) : (\n              <Row className=\"px-3\" key={key}>\n                <Col xs=\"3\" className=\"border-bottom pb-1 px-0\">\n                  <span className=\"text-bold\">{key}</span>\n                </Col>\n                <Col xs=\"9\" className=\"border-bottom pb-1 px-0\">\n                  {JSON.stringify(value)}\n                </Col>\n              </Row>\n            )\n          )}\n      </div>\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport CookiesBanner from \"../components/Common/CookiesBanner\";\nimport InfoBanner from \"../components/Common/InfoBanner\";\nimport ConnectionBanner from \"../components/Common/ConnectionBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\nimport LogDetails from \"../modals/LogDetails\";\n\nimport logger from \"../logger\";\n\nimport { Store, Dispatcher, Constants } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loggerEnabled: logger.isEnabled(),\n      modal: Store.getModal(),\n      modalParams: Store.getModalParams(),\n      loading: Store.isLoading(),\n      banner: Store.getBanner(),\n      connected: Store.getConnectionStatus(),\n      acceptedCookies: localStorage.getItem(\"accepted-cookies\"),\n    };\n    Store.on(\"update-ui\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const modalParams = Store.getModalParams();\n    const loading = Store.isLoading();\n    const banner = Store.getBanner();\n    const connected = Store.getConnectionStatus();\n    const loggerEnabled = logger.isEnabled();\n    this.setState({ modal, loading, banner, connected, modalParams, loggerEnabled });\n  };\n\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ acceptedCookies: true });\n  };\n\n  closeModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  importYAML = (yamlString) => {\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  submitReview = (content) => {\n    const { imageId } = this.state.modalParams;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  enableLogger = () => {\n    logger.enable();\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\n        'Debug Mode Enabled. Click \"Export Debug Data\" to download Debug JSON.',\n        \"warning\",\n      ],\n    });\n  };\n\n  disableLogger = () => {\n    logger.disable();\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Debug Mode Disabled.\", \"warning\"],\n    });\n  };\n\n  exportLogs = () => {\n    const storeCopy = Store.getStoreCopy();\n    logger.log(\"Store Snapshot\", storeCopy);\n    logger.exportLogs();\n  };\n\n  render = () => {\n    const {\n      modal,\n      acceptedCookies,\n      banner,\n      connected,\n      loading,\n      modalParams,\n      loggerEnabled,\n    } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            <MainNavbar />\n            <InfoBanner data={banner} />\n            <ConnectionBanner\n              loading={loading}\n              connected={connected}\n              reconnect={this.reconnect}\n            />\n            {children}\n            <CookiesBanner\n              show={!acceptedCookies}\n              acceptCookies={this.acceptCookies}\n            />\n            <MainFooter\n              loggerEnabled={loggerEnabled}\n              enableLogger={this.enableLogger}\n              disableLogger={this.disableLogger}\n              exportLogs={this.exportLogs}\n            />\n          </Col>\n        </Row>\n        <LogDetails\n          open={modal === \"logDetails\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n          modalParams={modalParams}\n        />\n        <PasteYAML\n          open={modal === \"import\"}\n          closeModal={this.closeModal}\n          importYAML={this.importYAML}\n        />\n        <WriteReview\n          open={modal === \"review\"}\n          closeModal={this.closeModal}\n          submitReview={this.submitReview}\n        />\n      </Container>\n    );\n  };\n}\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nexport default function PageTitle({ title, subtitle, className, ...attrs }) {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  return (\n    <div className=\"command-bar-container\">\n      <div className=\"command-bar\">\n        <ButtonGroup>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">play_arrow</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">stop</i>\n          </Button>\n          <Button variant=\"secondary\" disabled>\n            <i className=\"material-icons\">schedule</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.importChart}>\n            <i className=\"material-icons\">save_alt</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={props.copyChart}>\n            <i className=\"material-icons\">assignment</i>\n          </Button>\n          <Button variant=\"secondary\" onClick={() => props.exportImage(\"png\")}>\n            <i className=\"material-icons\">camera_alt</i>\n          </Button>\n        </ButtonGroup>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nexport default function ChartNode(props) {\n  const { properties, label } = props.node;\n  const list = [];\n  Object.keys(properties).forEach((prop, idx) => {\n    if (properties[prop] && prop !== \"name\")\n      list.push(\n        <div key={idx}>\n          <span className=\"text-bold mr-1\">{prop}:</span>\n          {properties[prop]}\n        </div>\n      );\n  });\n  const isSpecial = Object.keys(properties).length > 0;\n  const isGateway = label === \"gateway\";\n  let labelText = typeof label === \"undefined\" ? properties.name : label || \"\";\n  return (\n    <div\n      className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}\n      id={`chart-node-${label}`}\n    >\n      <div className=\"node-header\">\n        <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n          <p className=\"m-1\">\n            <span className=\"text-bold\">\n              {labelText || <span className=\"text-warning\">Empty Pod</span>}\n            </span>\n            <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n              {properties.replicas}\n            </Badge>\n          </p>\n        </div>\n      </div>\n      {list.length > 0 && (\n        <div className=\"node-info border-top px-2\">{list}</div>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nexport default function SidebarItem(props) {\n  const { label, ports, properties } = props;\n  const ref = React.createRef();\n  return (\n    <div\n      ref={ref}\n      className=\"mb-3 draggable-container\"\n      draggable={true}\n      onDragStart={(event) => {\n        event.dataTransfer.setData(\n          REACT_FLOW_CHART,\n          JSON.stringify({ label, ports, properties, type: \"hello world\" })\n        );\n      }}\n    >\n      <ChartNode node={{ properties }} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport lunr from \"lunr\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  constructor(props) {\n    super();\n    let node = {};\n    if (props.chart.selected.id) {\n      const selectedNode = props.chart.nodes[props.chart.selected.id];\n      node = this.getInitialNodeState(selectedNode);\n    }\n\n    this.state = {\n      availableProperties: Store.getAvailableProperties(),\n      node,\n      searchResults: [],\n      searchQuery: \"\",\n    };\n  }\n\n  getInitialNodeState = (node) => {\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).forEach((key) => {\n      properties[key] = node.properties[key];\n    });\n\n    return { label, id: node.id, properties, newProperties };\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id) return;\n\n    this.setState({ searchResults: [], searchQuery: \"\" });\n\n    if (!id) return;\n\n    if (type === \"node\" && id !== this.state.node.id) {\n      const node = nodes[id];\n      this.setState({ node: this.getInitialNodeState(node) });\n    }\n  };\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.searchProperties);\n  };\n\n  searchProperties = () => {\n    const query = this.state.searchQuery;\n    if (!query) return this.setState({ searchResults: false });\n    this.indexProperties();\n    let searchResults = this.index.search(`${query} ${query}*`);\n    this.setState({ searchResults });\n  };\n\n  indexProperties = () => {\n    const { availableProperties } = this.state;\n    this.index = lunr(function () {\n      this.field(\"name\");\n\n      availableProperties.forEach((prop, idx) => {\n        prop.id = parseInt(idx);\n        this.add(prop);\n      });\n    });\n  };\n\n  renderEditNode = () => {\n    const {\n      availableProperties,\n      node,\n      searchQuery,\n      searchResults,\n    } = this.state;\n    let label =\n      typeof node.label === \"undefined\"\n        ? node.properties.name\n        : node.label || \"\";\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>Pod Name</b>\n          </p>\n          <FormControl\n            spellCheck={false}\n            value={label}\n            onChange={(e) => this.updateLabel(e.target.value)}\n            className=\"pod-name-input\"\n          />\n        </div>\n        <p className=\"mb-0 px-2\">\n          <b>Properties</b>\n        </p>\n        <div className=\"m-2\">\n          <FormControl\n            spellCheck={false}\n            placeholder=\"search properties...\"\n            value={searchQuery}\n            onChange={this.updateSearchQuery}\n          />\n        </div>\n        <div className=\"property-table flex-fill mx-2\">\n          {searchQuery && searchResults ? (\n            searchResults.map((result) => {\n              const property = availableProperties[result.ref];\n              const { name, type } = property;\n              const value = node.properties[name];\n\n              if (typeof value == \"undefined\")\n                return (\n                  <div key={name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={type}\n                      value={node.newProperties[name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                );\n              return (\n                <div key={name} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{name}</p>\n                  <FormControl\n                    spellCheck={false}\n                    value={value || \"\"}\n                    onChange={(e) =>\n                      this.updateExistingValue(name, e.target.value)\n                    }\n                    className=\"property-value-input\"\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              {Object.keys(node.properties).map((prop) => {\n                const value = node.properties[prop];\n                if (prop === \"name\") return \"\";\n                return (\n                  <div key={prop} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{prop}</p>\n                    <FormControl\n                      spellCheck={false}\n                      value={value || \"\"}\n                      onChange={(e) =>\n                        this.updateExistingValue(prop, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    />\n                  </div>\n                );\n              })}\n              {availableProperties.map((property) =>\n                typeof node.properties[property.name] == \"undefined\" ? (\n                  <div key={property.name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{property.name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={property.type}\n                      value={node.newProperties[property.name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(property.name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                ) : (\n                  \"\"\n                )\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Pod\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderEditLink = (link) => {\n    const { nodes } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId];\n    const nodeTo = nodes[link.to.nodeId];\n\n    let choices = Object.keys(nodes).map((id) => {\n      return { label: nodes[id].label || nodes[id].properties.name, id };\n    });\n\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Edit Connection</b>\n        </h5>\n        <div className=\"flex-fill px-2\">\n          <div className=\"p-2 mb-1\">\n            <p className=\"mb-1\">\n              <b>From</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, e.target.value, nodeTo.id)\n              }\n              value={nodeFrom.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n            <p className=\"mb-1\">\n              <b>To</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, nodeFrom.id, e.target.value)\n              }\n              value={nodeTo.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Connection\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderPodMenu = () => {\n    return (\n      <div className=\"d-flex flex-column h-100\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Add Pods</b>\n        </h5>\n        <div className=\"p-3 scrollable flex-fill\">\n          <SidebarItem\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={{}}\n          />\n          {defaultPods.map((pod, idx) => (\n            <SidebarItem\n              key={idx}\n              ports={{\n                inPort: {\n                  id: \"inPort\",\n                  type: \"input\",\n                },\n                outPort: {\n                  id: \"outPort\",\n                  type: \"output\",\n                },\n              }}\n              properties={pod}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {hasSelected\n          ? selected.type === \"link\"\n            ? this.renderEditLink(links[selected.id], nodes)\n            : this.renderEditNode(nodes[selected.id])\n          : this.renderPodMenu()}\n      </Card>\n    );\n  };\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nexport default function NodePort() {\n  return (\n    <div className=\"node-port\">\n      <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\n\nexport default function ExampleSelection(props) {\n  return (\n    <div className=\"example-selection\">\n      <DropdownButton\n        as={ButtonGroup}\n        title=\"Load Example\"\n        id=\"bg-nested-dropdown\"\n      >\n        <Dropdown.Item onClick={() => props.loadExample(\"pokedex\")}>\n          Pokedex Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"southpark\")}>\n          South Park Query\n        </Dropdown.Item>\n        <Dropdown.Item onClick={() => props.loadExample(\"flower\")}>\n          Flower Search Query\n        </Dropdown.Item>\n      </DropdownButton>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport ExampleSelection from \"../components/FlowChart/ExampleSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nclass FlowView extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart();\n    this.state = { chart, showOverlay: false };\n\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n\n    Store.on(\"update-flowchart\", this.getData);\n  }\n\n  componentDidMount = () => {\n    document\n      .querySelector(\".chart-container\")\n      .addEventListener(\"contextmenu\", (e) => e.preventDefault());\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateChart({ ...chart, ...newChart });\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateChart = (chart) => {\n    this.setState({ chart });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId, chart }) => {\n    if (fromPortId !== \"outPort\" || toPortId !== \"inPort\") return false;\n    if (fromNodeId === toNodeId) return false;\n    return true;\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadExample = (example) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_EXAMPLE,\n      payload: example,\n    });\n  };\n\n  render = () => {\n    const { chart, showOverlay } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"none\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <ExampleSelection loadExample={this.loadExample} />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowView;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _levels = {\n  INFO: {\n    borderColor: \"#009999\",\n    backgroundColor: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    borderColor: \"#32c8cd\",\n    backgroundColor: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    borderColor: \"#ffcc66\",\n    backgroundColor: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    borderColor: \"#ff6666\",\n    backgroundColor: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    borderColor: \"#ff4540\",\n    backgroundColor: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    borderColor: \"#6E7278\",\n    backgroundColor: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass ChartBase extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"top\",\n        labels: {\n          padding: 10,\n          boxWidth: 15,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 20,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            ticks: {\n              padding: 5,\n              maxRotation: 0,\n              callback: this.getXAxisLabel,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            scaleLabel: {\n              display: true,\n              labelString: \"Occurences\",\n            },\n            gridLines: {\n              labelString: \"hello\",\n              borderDash: [2.5, 5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n              autoSkip: true,\n              maxTicksLimit: 4,\n              callback: function (value) {\n                if (Number.isInteger(value)) {\n                  return value;\n                }\n              },\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: this.getParsedDatasets(),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: this.getParsedDatasets(),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  getXAxisLabel = (value, index, values) => {\n    if (index === 0) return values.length + \"s ago\";\n    else if (index === parseInt(values.length / 2)) return index + \"s ago\";\n    return;\n  };\n\n  getParsedDatasets = () => {\n    const { data } = this.props;\n    const datasets = Object.keys(_levels).map((level) => {\n      const levelData = data.map((tick) => tick.levels[level]);\n      return {\n        label: level,\n        fill: \"start\",\n        borderWidth: 1.5,\n        borderColor: _levels[level].borderColor,\n        backgroundColor: _levels[level].backgroundColor,\n        data: levelData,\n      };\n    });\n    return datasets;\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default ChartBase;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass LogLevelSummaryChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelCharts(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    const { chartData } = this.state;\n    let index = activePoints[0] && activePoints[0]._index;\n    console.log(\"index:\", index);\n\n    if (index && typeof index !== \"undefined\")\n      Dispatcher.dispatch({\n        actionType: Constants.SHOW_LOG_AT_INDEX,\n        payload: chartData[index].lastLog,\n      });\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header>Log Occurences by Level</Card.Header>\n        <Card.Body className=\"d-none d-md-block pb-2 pt-0\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelSummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass PieChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport PieChart from \"./PieChart\";\n\nclass LogLevelPieChart extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      chartData: Store.getLogLevelOccurences(),\n    };\n    Store.on(\"update-summary-chart\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getLogLevelOccurences();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Header className=\"text-center\">Log Levels</Card.Header>\n        <Card.Body className=\"pt-0\">\n          <PieChart data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default LogLevelPieChart;\n","import React from \"react\";\nimport Select, { Props as SelectProps } from \"react-select\";\n\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\n\ntype LevelType = typeof CHART_LEVELS[number];\ntype Option = { value: string; label: string };\n\nconst customStyles = {\n  container: (provided: any, { selectProps: { width } }: any) => ({\n    ...provided,\n    width: width,\n  }),\n};\n\nexport type Props = {\n  onFilterChange: (val: any[]) => void;\n  options: { value: string; label: string }[];\n} & SelectProps;\n\nfunction MultiFilterSelect({ onFilterChange, options, ...rest }: Props) {\n  return (\n    <Select\n      onChange={(val) =>\n        onFilterChange(Array.isArray(val) ? val : !val ? [] : [val])\n      }\n      isMulti\n      options={options}\n      styles={customStyles}\n      {...rest}\n    />\n  );\n}\n\nexport { MultiFilterSelect };\n","const applyFilters = <T extends Record<string, any>, K>(\n  item: T,\n  filters: { [key in keyof T]: any }\n) =>\n  Object.entries(filters).reduce((acc, curr) => {\n    const [key, value] = curr;\n    return acc && Array.isArray(value)\n      ? value.length === 0\n        ? true\n        : value.includes(item[key] as any)\n      : value === item[key];\n  }, true as boolean);\n\nexport { applyFilters };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { memo } from \"react\";\nimport { areEqual } from \"react-window\";\n\ntype Props = {\n  index: number;\n  style: any;\n  data: {\n    columns: { firstCol: number; secondCol: number; thirdCol: number };\n    items: any[];\n    showLogDetails: (log: any) => void;\n  };\n};\n\nconst LogItem = memo(\n  ({ index, style, data: { columns, items, showLogDetails } }: Props) => {\n    const logData = items[index];\n    const { name, msg, levelname, process, formattedTimestamp, idx } = logData;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    const { firstCol, secondCol, thirdCol } = columns;\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n        css={{ maxHeight: 84 }}\n        style={style}\n        onClick={() => showLogDetails(logData)}\n      >\n        <Row>\n          <Col\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n            css={{ maxWidth: firstCol }}\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            className=\"log-prefix px-0 text-left text-md-right text-bold cursor-pointer\"\n            css={{ maxWidth: secondCol }}\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col\n            className=\"px-0\"\n            css={{\n              maxHeight: 84,\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              width: thirdCol,\n              whiteSpace: \"nowrap\",\n              paddingRight: 0,\n              marginRight: 0,\n            }}\n          >\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n  areEqual\n);\n\nexport { LogItem };\n","/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { useMiniSearch } from \"react-minisearch\";\nimport { usePrevious } from \"./usePrevious\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { MultiFilterSelect } from \"../Common/MultiFilterSelect\";\nimport { applyFilters } from \"./useFilters\";\nimport { LogItem } from \"./LogItem\";\nimport {\n  Card,\n  Row,\n  Col,\n  Form,\n  DropdownButton,\n  ButtonGroup,\n  Dropdown,\n} from \"react-bootstrap\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\n\nconst levels = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n] as const;\ntype Level = typeof levels[number];\n\ntype RawLog = {\n  created: number;\n  filename: string;\n  funcName: string;\n  levelname: Level;\n  lineno: number;\n  module: string;\n  msg: string;\n  name: string;\n  pathname: string;\n  process: number;\n  processName: string;\n  thread: number;\n  threadName: string;\n  id: string;\n};\n\nconst ROW_SIZE = 30;\n\nconst fields = [\"filename\", \"funcName\", \"msg\", \"name\", \"module\", \"pathname\"];\nconst miniSearchOptions = { fields };\n\ntype Format = \"json\" | \"csv\" | \"tsv\" | \"txt\";\n\ntype Props = {\n  data: RawLog[];\n  downloadLogs: (format: Format) => void;\n  showLogDetails: (log: any) => void;\n};\n\nconst itemKey = (index: number, data: { items: RawLog[] }) =>\n  data.items[index].id;\n\nconst arrayLikeToArray = (arrayLike: Readonly<any[]> | Set<any>) =>\n  Array.isArray(arrayLike) ? arrayLike : Array.from(arrayLike);\n\nconst toOption = (list: Readonly<any[]> | Set<any>) =>\n  arrayLikeToArray(list).map((item) => ({ label: item, value: item }));\n\nfunction LogsTable({ data, downloadLogs, showLogDetails }: Props) {\n  const [scrolledToBottom, setScrolledToBottom] = React.useState(true);\n  const windowListRef = useRef<any>();\n  const [selectedSources, setSelectedSources] = React.useState<any[]>([]);\n  const [selectedLevels, setSelectedLevels] = React.useState<any[]>([]);\n  const [searchString, setSearchString] = React.useState(\"\");\n  const { search, searchResults, addAllAsync } = useMiniSearch(\n    data,\n    miniSearchOptions\n  );\n  const previousLength = usePrevious(data.length);\n  useEffect(() => {\n    if (previousLength && previousLength! > 0) {\n      addAllAsync([data[previousLength! - 1]]);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [previousLength]);\n\n  const unfiltered = searchString ? searchResults : data;\n\n  const resultData = (unfiltered || []).filter((result) =>\n    applyFilters(result as any, {\n      levelname: selectedLevels.map(({ value }) => value),\n      name: selectedSources.map(({ value }) => value),\n    })\n  );\n  const sources = data.reduce((acc, curr) => acc.add(curr.name), new Set());\n  useEffect(() => {\n    if (windowListRef.current && scrolledToBottom) {\n      windowListRef.current.scrollToItem(resultData.length);\n    }\n  }, [resultData.length, scrolledToBottom]);\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header className=\"p-3\">\n        <Row>\n          <Col md=\"8\">\n            <MultiFilterSelect\n              options={toOption(sources)}\n              onFilterChange={setSelectedSources}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Logsources\"\n            />\n            <MultiFilterSelect\n              options={toOption(levels as any) as any}\n              onFilterChange={setSelectedLevels}\n              className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              placeholder=\"All Levels\"\n            />\n            <DropdownButton\n              as={ButtonGroup}\n              title=\"Download Logs\"\n              id=\"bg-nested-dropdown\"\n            >\n              <Dropdown.Item onClick={() => downloadLogs(\"csv\")}>\n                Download as CSV\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => downloadLogs(\"json\")}>\n                Download as JSON\n              </Dropdown.Item>\n              <Dropdown.Item onClick={() => downloadLogs(\"txt\")}>\n                Download as TXT\n              </Dropdown.Item>\n            </DropdownButton>\n          </Col>\n          <Col md=\"4\">\n            <Form.Control\n              placeholder=\"search logs...\"\n              value={searchString}\n              onChange={(e) => {\n                search(e.target.value as string);\n                setSearchString(e.target.value);\n              }}\n            />\n          </Col>\n        </Row>\n      </Card.Header>\n      <Card.Body\n        className=\"log-stream-container p-1 border-top\"\n        id=\"log-stream-container\"\n      >\n        {!scrolledToBottom && (\n          <div\n            onClick={() =>\n              windowListRef.current.scrollToItem(resultData.length)\n            }\n            className={`back-to-bottom active`}\n          >\n            <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n          </div>\n        )}\n        <AutoSizer>\n          {({ height, width }) => {\n            const firstCol = 200;\n            const secondCol = 200;\n            const thirdCol = width - (firstCol + secondCol);\n            return (\n              <List\n                onScroll={({ scrollOffset }) => {\n                  setScrolledToBottom(\n                    (scrollOffset + height) / ROW_SIZE - resultData.length === 0\n                  );\n                }}\n                height={height}\n                width={width}\n                itemCount={resultData.length}\n                itemSize={ROW_SIZE}\n                itemKey={itemKey}\n                itemData={{\n                  items: resultData,\n                  columns: { firstCol, secondCol, thirdCol },\n                  showLogDetails: showLogDetails,\n                }}\n                ref={windowListRef}\n              >\n                {LogItem}\n              </List>\n            );\n          }}\n        </AutoSizer>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport { LogsTable };\n","import React from \"react\";\nfunction usePrevious(value: any) {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\nexport { usePrevious };\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport LogLevelSummaryChart from \"../components/LogStream/LogLevelSummaryChart\";\nimport LogLevelPieChart from \"../components/LogStream/LogLevelPieChart\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport { LogsTable } from \"../components/LogStream/LogsTable\";\nimport { Store, Dispatcher, Constants } from \"../flux\";\nimport { saveAs } from \"file-saver\";\n\nclass LogsView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      banner: Store.getBanner(\"logs\"),\n      logs: Store.getLogs(),\n    };\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-logs\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.on(\"update-logs\", this.getData);\n  };\n\n  getData = () => {\n    const banner = Store.getBanner(\"logs\");\n    const logs = Store.getLogs();\n    this.setState({ banner, logs });\n  };\n\n  downloadLogs = (format) => {\n    let logs = this.state.logs;\n    let content = \"\";\n    if (format === \"json\") content = \"[\\n\";\n    else if (format === \"csv\")\n      content =\n        \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n\n    for (let i = 0; i < logs.length; ++i) {\n      let log = logs[i];\n      if (format === \"json\")\n        content +=\n          JSON.stringify(logs[i]) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n      else if (format === \"csv\")\n        content += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n      else\n        content += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    }\n    if (format === \"json\") content += \"]\";\n\n    let filename = `jina-logs-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  };\n\n  showLogDetails = (log) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"logDetails\", modalParams: { log } },\n    });\n  };\n\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Log Stream\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"10\" className=\"mb-4\">\n              <LogLevelSummaryChart />\n            </Col>\n            <Col md=\"2\" className=\"mb-4\">\n              <LogLevelPieChart />\n            </Col>\n          </Row>\n          <LogsTable\n            downloadLogs={this.downloadLogs}\n            data={this.state.logs}\n            showLogDetails={this.showLogDetails}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default LogsView;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nexport default function ElapsedCard({ elapsed }) {\n  return (\n    <Card className=\"p-3 h-100\">\n      <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n        <b>{elapsed.task_name}</b>\n      </h6>\n      <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n      <h6 className=\"stats-small__label text-uppercase text-center\">\n        Elapsed Time\n      </h6>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass ProgressCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default ProgressCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass BarChartCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default BarChartCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QueriesPerSecondCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQueriesPerSecondCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QueriesPerSecondCard;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      taskData: Store.getTaskData(),\n    };\n    Store.on(\"update-task\", this.getData);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  render = () => {\n    const { taskData } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","export const baseOptions = [\n  {\n    label: \"Host\",\n    placeholder: \"0.0.0.0\",\n    value: \"host\",\n  },\n  {\n    label: \"Port\",\n    placeholder: \"5000\",\n    value: \"port\",\n  },\n];\n\nexport const advancedOptions = [\n  {\n    label: \"Log\",\n    placeholder: \"/stream/log\",\n    value: \"log\",\n  },\n  {\n    label: \"Profile\",\n    placeholder: \"/stream/profile\",\n    value: \"profile\",\n  },\n  {\n    label: \"YAML\",\n    placeholder: \"/data/yaml\",\n    value: \"yaml\",\n  },\n  {\n    label: \"Shutdown\",\n    placeholder: \"/action/shutdown\",\n    value: \"shutdown\",\n  },\n  {\n    label: \"Ready\",\n    placeholder: \"/status/isready\",\n    value: \"ready\",\n  },\n];\n","import React from \"react\";\nimport { Col, FormInput } from \"shards-react\";\n\nexport default function FormItem({\n  colSpan = 6,\n  label,\n  value,\n  placeholder,\n  onChange,\n}) {\n  return (\n    <Col md={colSpan} className=\"form-group\">\n      <label>{label}</label>\n      <FormInput placeholder={placeholder} value={value} onChange={onChange} />\n    </Col>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Button,\n  Form,\n} from \"shards-react\";\nimport { Collapse } from \"react-bootstrap\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport { baseOptions, advancedOptions } from \"./options\";\nimport FormItem from \"./FormItem\";\n\nfunction SettingsCard() {\n  const [original, setOriginal] = useState(Store.getSettings());\n  const [updates, setUpdates] = useState({});\n  const [expanded, setExpanded] = useState(false);\n\n  function getData() {\n    const original = Store.getSettings();\n    setOriginal(original);\n    setUpdates({});\n  }\n\n  useEffect(() => {\n    Store.on(\"update-settings\", getData);\n\n    return function cleanup() {\n      Store.removeListener(\"update-settings\", getData);\n    };\n  }, []);\n\n  function updateSetting(setting, value) {\n    const newUpdates = { ...updates };\n    newUpdates[setting] = value;\n    setUpdates(newUpdates);\n  }\n\n  function saveChanges() {\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  }\n\n  function toggleExpand() {\n    setExpanded(!expanded);\n  }\n\n  return (\n    <Card small className=\"mb-4\">\n      <CardHeader className=\"border-bottom\">\n        <h6 className=\"m-0\">Connection Preferences</h6>\n      </CardHeader>\n      <CardBody>\n        <Form>\n          <Row form>\n            {baseOptions.map(({ label, placeholder, value }) => (\n              <FormItem\n                key={value}\n                label={label}\n                placeholder={placeholder}\n                value={value in updates ? updates[value] : original[value]}\n                onChange={(e) => updateSetting(value, e.target.value)}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col xs=\"6\">\n              <strong\n                aria-controls=\"collapsed-form\"\n                aria-expanded={expanded}\n                onClick={toggleExpand}\n                className=\"text-primary d-inline-block mb-3 cursor-pointer\"\n              >\n                Advanced{\" \"}\n                <i className=\"material-icons\">\n                  {expanded ? \"arrow_drop_up\" : \"arrow_drop_down\"}\n                </i>\n              </strong>\n            </Col>\n            <Col xs=\"6\" className=\"text-right\">\n              <Button onClick={saveChanges}>Save Changes</Button>\n            </Col>\n          </Row>\n          <Collapse in={expanded}>\n            <div id=\"collapsed-form\">\n              <strong className=\"text-muted d-block mb-3\">Endpoints</strong>\n              <Row form>\n                {advancedOptions.map(({ label, placeholder, value }) => (\n                  <FormItem\n                    key={value}\n                    label={label}\n                    placeholder={placeholder}\n                    value={value in updates ? updates[value] : original[value]}\n                    onChange={(e) => updateSetting(value, e.target.value)}\n                  />\n                ))}\n              </Row>\n            </div>\n          </Collapse>\n        </Form>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass SettingsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default SettingsView;\n","import React from \"react\";\n\nexport default function StarRating({ rating, userRated, rate }) {\n  const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n  const stars = getStars(formatted, rate);\n  return (\n    <span\n      className={`app-rating ${rating ? \"existing\" : \"\"} ${\n        userRated ? \"userRated\" : \"\"\n      } text-muted`}\n    >\n      <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n      <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n      {stars}\n    </span>\n  );\n}\n\nconst getStars = (amount, rate) => {\n  let stars = [];\n  let integer = parseInt(amount);\n  let remainder = amount - integer;\n  let i;\n  for (i = 0; i < integer; ++i) {\n    let index = i;\n    stars.push(\n      <i key={i} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  }\n  if (remainder >= 0.8) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star\n      </i>\n    );\n  } else if (remainder >= 0.25) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_half\n      </i>\n    );\n  }\n  for (let j = stars.length; j < 5; ++j) {\n    let index = i;\n    stars.push(\n      <i key={i++} className=\"material-icons\" onClick={() => rate(index)}>\n        star_outline\n      </i>\n    );\n  }\n  return stars;\n};\n","import React from \"react\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nexport default function ImageCard({ image }) {\n  let {\n    name,\n    id,\n    official,\n    author,\n    description,\n    totalStars,\n    totalRatings,\n    numReviews,\n  } = image;\n\n  let rating;\n  if (image.totalStars && image.totalRatings) {\n    rating = totalStars / totalRatings;\n  }\n\n  let reviews;\n  if (!numReviews) reviews = <span className=\"text-muted\">no reviews</span>;\n  else if (numReviews > 1) reviews = <span>{numReviews} reviews</span>;\n  else reviews = <span>{numReviews} review</span>;\n\n  return (\n    <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n      <Card className=\"clickable mb-4 h-100\">\n        <Card.Body className=\"pb-0 mb-0 pt-3\">\n          <Row>\n            <Col xs=\"12\" className=\"px-0\">\n              <div className=\"app-title\">\n                {name}\n                {official && (\n                  <span title=\"Official Package\" className=\"float-right\">\n                    <i className=\"ml-2 material-icons verified-icon\">\n                      verified_user\n                    </i>\n                  </span>\n                )}\n              </div>\n              <div className=\"app-subtitle\">{author}</div>\n            </Col>\n            <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n              <div className=\"description-container\">\n                <div className=\"description-overlay\" />\n                <div className=\"app-description\">{description}</div>\n              </div>\n            </Col>\n          </Row>\n        </Card.Body>\n        <Card.Footer className=\"pt-0 px-3 pb-3\">\n          {reviews}\n          {rating && <StarRating rating={rating} />}\n        </Card.Footer>\n      </Card>\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      images: Store.getHubImages(),\n      sortType: \"suggested\",\n      category: \"all\",\n      searchQuery: \"\",\n    };\n\n    Store.on(\"update-hub\", this.getHubImages);\n  }\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function BuildHistory(props) {\n  const { buildHistory } = props.image;\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Build History</h6>\n      </CardHeader>\n      <CardBody className=\"p-0 build-history\">\n        {buildHistory &&\n          buildHistory.map((build, idx) => {\n            const formattedCreated = new Date(build.created).toLocaleString();\n            const buildSize = parseFloat(build.size / 1e6).toFixed(2);\n            return (\n              <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                <div className=\"user-activity__item__icon mt-2\">\n                  <i className=\"material-icons\">build</i>\n                </div>\n                <div className=\"user-activity__item__content\">\n                  <span className=\"text-light\">{formattedCreated}</span>\n                  <p>\n                    [{build.os}/{build.architecture}] {buildSize} MB\n                  </p>\n                </div>\n              </div>\n            );\n          })}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nexport default function ImageDetails({ image }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n      </CardHeader>\n      <CardBody className=\"pt-0 pb-2\">\n        <Row className=\"border-bottom py-2\">\n          <Col>Name</Col>\n          <Col>{image.name}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Version</Col>\n          <Col>{image.version}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Author</Col>\n          <Col>{image.author}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Description</Col>\n          <Col>{image.description}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Documentation</Col>\n          <Col>\n            <a\n              href={image.documentation}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {image.documentation}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Source</Col>\n          <Col>\n            <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.source}\n            </a>\n          </Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>License</Col>\n          <Col>{image.license}</Col>\n        </Row>\n        <Row className=\"border-bottom py-2\">\n          <Col>Vendor</Col>\n          <Col>{image.vendor}</Col>\n        </Row>\n        <Row className=\"py-2\">\n          <Col>URL</Col>\n          <Col>\n            <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              {image.url}\n            </a>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReadMe({ readme, documentation }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n        <div className=\"flex-fill d-inline-block\" />\n        <a\n          href={documentation}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"cursor-pointer text-primary\"\n        >\n          <i className=\"fab fa-github\"></i> View on GitHub\n        </a>\n      </CardHeader>\n      <CardBody>\n        {readme ? (\n          <div\n            className=\"markup\"\n            dangerouslySetInnerHTML={{ __html: readme }}\n          />\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n        )}\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default function CopyCommand(props) {\n  const { image, copyCode } = props;\n  const imageVar = image.repoTags[image.repoTags.length - 1];\n  let code = [\n    `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n    `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n    `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n    `jina pod --image ${imageVar}`,\n    `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n    `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n  ];\n  return (\n    <Card className=\"mb-4\">\n      <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">Usage</h6>\n      </CardHeader>\n      <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n        <p className=\"mb-1\">Use this image in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[0])}\n        >\n          {code[0]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Flow API and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[1])}\n        >\n          {code[1]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n        <SyntaxHighlighter\n          language=\"python\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[2])}\n        >\n          {code[2]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n        <SyntaxHighlighter\n          language=\"yaml\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[3])}\n        >\n          {code[3]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[4])}\n        >\n          {code[4]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[5])}\n        >\n          {code[5]}\n        </SyntaxHighlighter>\n        <p className=\"mb-1 mt-4\">\n          Use this image in Docker CLI and override YAML\n        </p>\n        <SyntaxHighlighter\n          language=\"bash\"\n          style={atomOneLight}\n          onClick={() => copyCode(code[6])}\n        >\n          {code[6]}\n        </SyntaxHighlighter>\n      </CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nexport default function ReviewCard({ review }) {\n  return (\n    <Card className=\"readme-container mb-4\">\n      <CardHeader className=\"border-bottom d-flex flex-row\">\n        <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n        <div className=\"flex-fill d-inline-block\" />\n      </CardHeader>\n      <CardBody className=\"py-3\">{review.content}</CardBody>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\n\nexport default function ImageReviews({ reviews, newReview }) {\n  return (\n    <div>\n      <div className=\"border-bottom d-flex flex-row mb-4\">\n        <h3 className=\"flex-fill\">Reviews</h3>\n        <div>\n          <Button onClick={newReview}>\n            <i className=\"material-icons mr-2\">add_comment</i>New Review\n          </Button>\n        </div>\n      </div>\n      {reviews.length > 0 ? (\n        reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n      ) : (\n        <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nexport default function HelpCard({ title, content, icon, theme, link }) {\n  return (\n    <a\n      className=\"unstyled-link\"\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <Card className=\"h-100\">\n        <Card.Body className=\"pt-3\">\n          <Row>\n            <Col xs=\"8\" className=\"pr-0\">\n              <h4>{title}</h4>\n              {content}\n            </Col>\n            <Col xs=\"4\" className=\"pl-0\">\n              <h1 className=\"mt-4 ml-4\">\n                <span className={`${icon} log-${theme}`} />\n              </h1>\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card>\n    </a>\n  );\n}\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from \"../components/Common/HelpCard\";\nimport PageTitle from \"../components/Common/PageTitle\";\n\nconst NotFound = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout, IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport LogsView from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n  },\n];\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\nimport { copyToClipboard } from \"../helpers\";\n\nclass PackageView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n    Store.on(\"update-hub\", this.getImageData);\n  }\n\n  componentDidMount = () => {\n    this.getData();\n    this.getImageData();\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  copyCode = (content) => {\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"Content copied to clipboard\", \"success\"],\n    });\n  };\n\n  newReview = () => {\n    const imageId = this.state.imageData.id;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, modalParams: { imageId } },\n    });\n  };\n\n  render = () => {\n    const { imageData, loading } = this.state;\n    const {\n      name,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} copyCode={this.copyCode} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme readme={readmeHTML} documentation={documentation} />\n                <ImageReviews reviews={reviews} newReview={this.newReview} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default PackageView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src=\"/jina-light.svg\"\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nexport default () => (\n  <Router basename={\"/\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker((props) => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  timeout: 15000,\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}