{"version":3,"sources":["images/jina-light.svg","data/yaml.js","settings.js","flux/constants.js","flux/dispatcher.js","helpers.js","flux/api.js","flux/store.js","data/sidebar-nav-items.js","modals/PasteYAML.jsx","layouts/Default.jsx","components/Layout/MainNavbar/NavbarSpacer.js","components/Layout/MainNavbar/NavbarNav/Notifications.js","components/Layout/MainNavbar/NavbarNav/UserActions.js","components/Layout/MainNavbar/NavbarNav/NavbarNav.js","components/Layout/MainNavbar/NavbarToggle.js","components/Layout/MainNavbar/MainNavbar.js","components/Layout/MainSidebar/SidebarMainNavbar.jsx","components/Layout/MainSidebar/SidebarNavItem.jsx","components/Layout/MainSidebar/SidebarNavItems.jsx","components/Layout/MainSidebar/MainSidebar.jsx","components/Layout/MainFooter.jsx","layouts/Dashboard.jsx","components/Common/CookiesBanner.jsx","modals/WriteReview.jsx","layouts/IconSidebar.jsx","components/Common/PageTitle.jsx","components/FlowChart/CommandBar.jsx","components/FlowChart/ChartNode.jsx","components/FlowChart/SidebarItem.jsx","components/FlowChart/Sidebar.jsx","components/FlowChart/NodePort.jsx","components/FlowChart/ExampleSelection.jsx","views/FlowView.jsx","components/LogStream/LogItem.jsx","components/LogStream/LogStream.jsx","components/LogStream/ChartBase.jsx","components/LogStream/SummaryChart.jsx","components/LogStream/PieChart.jsx","components/LogStream/OccurenceChart.jsx","views/LogsView.jsx","components/Task/ElapsedCard.jsx","components/Task/ProgressCard.jsx","components/Task/SpeedCard.jsx","components/Task/BarChartCard.jsx","components/Task/QueriesPerSecond.jsx","views/TaskView.jsx","components/Settings/Settings.jsx","views/Settings.jsx","components/Hub/StarRating.jsx","components/Hub/ImageCard.jsx","views/HubView.jsx","components/Hub/BuildHistory.jsx","components/Hub/ImageDetails.jsx","components/Hub/Readme.jsx","components/Hub/CopyCommand.jsx","components/Hub/ReviewCard.jsx","components/Hub/ImageReviews.jsx","views/PackageView.jsx","views/LogIn.jsx","components/Common/HelpCard.jsx","views/NotFound.jsx","routes.js","withTracker.js","App.js","serviceWorker.js","index.js","flux/config.js"],"names":["module","exports","flow1","pokedex","flower","southpark","nodeOffset","x","y","TOGGLE_SIDEBAR","SET_CURRENT_TAB","SELECT_NODE","IMPORT_CUSTOM_YAML","SHOW_MODAL","CLOSE_MODAL","SHOW_LOG_AT_INDEX","SAVE_SETTINGS","RECONNECT","POST_REVIEW","POST_RATING","LOG_OUT","SEARCH_HUB","SHOW_BANNER","LOAD_EXAMPLE","Dispatcher","YAML","require","settings","propertyList","propertyTypes","copyToClipboard","str","temp","document","createElement","value","body","appendChild","select","execCommand","removeChild","parseYAML","yamlSTR","data","parse","console","log","error","alert","formatForFlowchart","pods","canvas","formatted","offset","nodes","links","selected","hovered","scale","prevNode","gateway","newPods","Object","keys","forEach","id","pod","node","label","ports","needs","send_to","position","properties","type","parents","Array","isArray","i","length","nodeFrom","linkId","link","color","from","nodeId","portId","to","parseInt","depthPopulation","offsetX","offsetY","depth","getNodeDepth","currentId","currentDepth","longestDepth","parent","formatBytes","numBytes","parseFloat","toFixed","prop","name","logStream","taskStream","_store","hub","axios","create","baseURL","hubURL","withCredentials","timeout","headers","Accept","checkConnection","connectionString","host","port","ready","startsWith","get","connect","logUpdate","taskUpdate","logString","close","EventSource","onopen","onmessage","m","JSON","onerror","taskString","profile","getProfile","a","result","getYAML","getImages","getImage","postRating","imageId","stars","post","postReview","content","searchHub","category","q","sort","logOut","CHART_LEVELS","registerActions","actionType","payload","Constants","toggleSidebar","showModal","showBanner","importCustomYAML","closeModal","showLogAtIndex","saveSettings","reconnect","loadExample","checkNetwork","prevStatus","connected","api","init","clearIntervals","localStorage","getItem","yaml","shutdown","images","banner","flow","logs","status","loading","modal","menuVisible","navItems","title","items","htmlBefore","htmlAfter","matches","flowchart","outPort","logSources","logLevels","occurences","current","previous","lastLog","logIndex","summaryCharts","processes","taskData","qps","history","fill","elapsed","task_name","seconds","progress","currentRequest","bar_len","num_bars","speed","unit","lastUpdateChart","Date","messages","bytes","selectedNode","modalParams","currentTab","startNetworkMonitor","initFlowChart","initLogStream","initCharts","initHub","initUser","emit","checkNetworkInterval","setInterval","updateChartInterval","clearInterval","updateTaskInterval","yamlSTRING","with","board","e","parsed","handleNewLog","handleNewTaskEvent","message","formattedTimestamp","created","toLocaleString","idx","push","process","levelname","includes","task","numSeconds","event","speed_unit","bytes_recv","bytes_sent","msg_recv","msg_sent","num_reqs","index","map","obj","indexOf","msgData","sent","received","bytesData","b","slice","shift","level","updateSummaryCharts","user","numLogs","prevNum","customYAML","exampleName","exampleYAML","key","setItem","setTimeout","window","location","hash","String","showError","image","reload","target","theme","bannerTimeout","clearTimeout","hideBanner","params","getCurrentTab","getUser","getHubImages","getHubImage","getSettings","getBanner","panel","getModal","getModalParams","getLogs","getLogSources","getLogLevels","getSummaryCharts","getOccurencesByName","getTaskData","getActivePanel","path","substring","getConnectionStatus","activePanel","isLoading","getFlowchart","getAvailableProperties","getIndexedLog","register","this","EventEmitter","PasteYAML","state","style","overlay","backgroundColor","border","bottom","maxHeight","left","padding","right","top","transform","width","maxWidth","overflow","listenForEnter","charCode","importYAML","yamlString","inputRef","dispatch","render","open","props","ariaHideApp","isOpen","contentLabel","className","shouldCloseOnOverlayClick","onRequestClose","closeTimeoutMS","onClick","Form","Group","Label","Control","placeholder","ref","as","rows","Button","Component","React","Notifications","Store","componentWillMount","on","getData","componentWillUnmount","removeListener","setState","toggleNotifications","pill","UserActions","visible","toggleUserActions","tag","Dropdown","caret","toggle","NavLink","src","_json","avatar_url","alt","username","DropdownMenu","small","Link","navbar","NavbarToggle","handleClick","bind","MainNavbar","layout","stickyTop","classes","classNames","fluid","NavbarSpacer","NavbarNav","SidebarMainNavbar","handleToggleSidebar","href","lineHeight","SidebarNavItem","toggleDropdown","item","TOGGLE_SIDEBAR_DROPDOWN","hasSubItems","active","match","RouteNavLink","dangerouslySetInnerHTML","__html","subItem","SidebarNavItems","getSidebarItems","onChange","nav","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","hideLogoText","MainFooter","contained","menuItems","copyright","defaultProps","DefaultLayout","children","noNavbar","noFooter","sm","CookiesBanner","acceptCookies","accepted","WriteReview","submitReview","IconSidebarLayout","PageTitle","subtitle","attrs","xs","CommandBar","ButtonGroup","variant","disabled","importChart","copyChart","exportImage","ChartNode","getPropertiesString","propId","concat","getIcons","icons","getPropertiesList","list","isSpecial","isGateway","labelText","Badge","replicas","SidebarItem","draggable","onDragStart","dataTransfer","setData","REACT_FLOW_CHART","stringify","FlowChartSidebar","availableProperties","searchResults","searchQuery","componentWillReceiveProps","nextProps","chart","setInitialNode","newProperties","updateLabel","prevState","saveChanges","updateExistingValue","updateNewValue","updateNode","updateSearchQuery","searchProperties","query","indexProperties","search","lunr","field","add","renderEditNode","FormControl","spellCheck","property","deleteSelection","renderEditLink","nodeTo","choices","updateLink","choice","renderPodMenu","inPort","defaultPods","hasSelected","Card","data-html2canvas-ignore","ExampleSelection","DropdownButton","Item","FlowTab","componentDidMount","extension","querySelector","classList","showCaptureOverlay","canvasParams","foreignObjectRendering","logging","scrollX","scrollY","html2canvas","then","toDataURL","getElementById","setAttribute","click","showOverlay","updateChart","callback","newChart","cloneDeep","fromId","toId","cancelChanges","stateActionCallbacks","onCanvasClick","onDeleteKey","selectNode","copyChartAsYAML","output","formatAsYAML","validateLink","fromNodeId","toNodeId","fromPortId","toPortId","showImportModal","example","display","noGutters","Components","NodeInner","CustomNode","Port","CustomPort","callbacks","config","Sidebar","actions","reduce","action","newChartTransformer","LogItem","msg","logName","levelInitial","toLowerCase","Row","Col","StreamContainer","_cache","CellMeasurerCache","defaultHeight","fixedWidth","_resultsCache","_mostRecentWidth","_mostRecentHeight","_resizeAllFlag","_startIndex","_scrollIndex","_scrollTop","_scrolledToBottom","allLogs","sources","levels","prevQuery","results","showHelper","selectedSource","selectedLevel","downloadLogs","format","filename","lineno","funcname","pathname","blob","Blob","saveAs","_list","_resizeAll","backToBottom","filterLogs","scrollToBottom","scrollToLog","filter","setSelectedSource","setSelectedLevel","indexLogs","_resizeSearchResults","scrollToRow","scrollToBottomResults","_resultsList","clearSearchResults","renderSearchResults","height","deferredMeasurementCache","rowHeight","rowCount","rowRenderer","renderSearchResultRow","renderLogRow","isScrolling","cache","columnIndex","rowIndex","wordBreak","Header","source","onKeyPress","Body","onScroll","_onScroll","scrollToAlignment","_onRowsRendered","cb","startIndex","scrollTop","scrollHeight","clientHeight","difference","clearAll","recomputeRowHeights","_colors","INFO","background","SUCCESS","WARNING","ERROR","CRITICAL","DEBUG","Chart","renderChart","chartOptions","events","maintainAspectRatio","responsive","legend","labels","boxWidth","tooltips","enabled","custom","elements","point","radius","hitRadius","scales","xAxes","gridLines","ticks","yAxes","borderDash","zeroLineColor","drawBorder","suggestedMin","chartConfig","getLabels","datasets","chartData","borderWidth","borderColor","options","ChartElement","canvasRef","activePoints","getElementsAtEvent","amount","animation","update","createRef","SummaryChart","showLog","_index","ChartBase","getColor","names","mode","OccurenceChart","LogsView","Container","LogStream","ElapsedCard","SingleGoal","percent","newData","hoverBorderColor","cutoutPercentage","SpeedCard","newChartData","maxValue","Math","max","minValue","min","suggestedMax","line","tension","scaleLabel","percentage","increase","decrease","chartLabels","ProcessReport","componentDidUpdate","prevProps","lastUpdate","tab","tooltipItem","xLabel","datasetIndex","afterLabel","stacked","userCallback","formatYAxisLabel","d","pointBackgroundColor","pointHoverBackgroundColor","setTab","QPSCard","TaskView","ProgressCard","QueriesPerSecond","BarChartCard","SettingsCard","original","updates","updateSetting","setting","form","class","Settings","StarRating","newUser","getStars","integer","remainder","rate","j","rating","userRated","round","ImageCard","official","author","description","totalStars","totalRatings","numReviews","Footer","getNumReviews","reviews","HubView","sortType","sortBy","setCategory","updateSearch","BuildHistory","buildHistory","build","formattedCreated","os","architecture","Readme","version","documentation","rel","license","vendor","url","readme","CopyCommand","getCodeAtIndex","imageVar","repoTags","copyCode","language","atomOneLight","ReviewCard","review","newReview","getImageData","imageData","readmeHTML","ImageReviews","windowHash","windowParams","URLSearchParams","Login","code","testAuthentication","xhr","XMLHttpRequest","onload","send","icon","Errors","HelpCard","exact","DashboardLayout","component","IconSidebar","FlowView","NotFound","PackageView","LogIn","GoogleAnalytics","initialize","REACT_APP_GAID","withTracker","WrappedComponent","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","HOC","currentPage","nextPage","basename","routes","route","Boolean","hostname","ReactDOM","navigator","serviceWorker","registration","unregister","catch"],"mappings":"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","file":"static/js/main.778c946c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jina-light.07aba578.svg\";","module.exports = {\n  flow1: `!Flow\n  with:\n    board:\n      canvas:\n        chunk_seg:\n          x: 862\n          y: 138\n        encode1:\n          x: 198\n          y: 311\n        encode2:\n          x: 428\n          y: 309\n        pod_3:\n          x: 652\n          y: 308\n        pod_4:\n          x: 863\n          y: 307\n        pod_5:\n          x: 1084\n          y: 309\n        pod_6:\n          x: 1305\n          y: 311\n        connector:\n          x: 861\n          y: 477\n        midleft_1:\n          x: 530\n          y: 601\n        midright_1:\n          x: 1210\n          y: 598\n        midleft_2:\n          x: 331\n          y: 739\n        midright_2:\n          x: 1399\n          y: 733\n        pod_left:\n          x: 508\n          y: 862\n        pod_right:\n          x: 1226\n          y: 865\n        end_pod:\n          x: 870\n          y: 1083.6666641235352\n        pod_7:\n          x: 1526\n          y: 311.66666412353516\n  pods:\n    gateway:\n    chunk_seg:\n      replicas: 3\n    encode1:\n      replicas: 2\n      needs: chunk_seg\n    encode2:\n      replicas: 2\n      needs: chunk_seg\n    pod_3:\n      needs: chunk_seg\n    pod_4:\n      needs: chunk_seg\n    pod_5:\n      needs: chunk_seg\n    pod_6:\n      needs: chunk_seg\n    connector:\n      needs:\n        - encode1\n        - encode2\n        - pod_3\n        - pod_4\n        - pod_5\n        - pod_6\n        - pod_7\n    midleft_1:\n      needs: connector\n    midright_1:\n      needs: connector\n    midleft_2:\n      needs: midleft_1\n    midright_2:\n      needs: midright_1\n    pod_left:\n      needs:\n        - midleft_2\n        - midleft_1\n        - connector\n    pod_right:\n      needs:\n        - midright_2\n        - midright_1\n        - connector\n    end_pod:\n      needs:\n        - pod_left\n        - pod_right\n    pod_7:\n      needs: chunk_seg\n  `,\n  pokedex: `!Flow\n  with:\n    read_only: true  # better add this in the query time\n    rest_api: true\n    port_expose: $JINA_PORT\n  pods:\n    chunk_seg:\n      uses: pods/craft.yml\n      parallel: $PARALLEL\n    tf_encode:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 600000\n    chunk_idx:\n      uses: pods/chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n      timeout_ready: 100000 # larger timeout as in query time will read all the data\n    ranker:\n      uses: BiMatchRanker\n    doc_idx:\n      uses: pods/doc.yml\n  `,\n  flower: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n  pods:\n    loader:\n      uses: yaml/craft-load.yml\n      read_only: true\n    flipper:\n      uses: yaml/craft-flip.yml\n      read_only: true\n    normalizer:\n      uses: yaml/craft-normalize.yml\n      read_only: true\n    encoder:\n      uses: $ENCODER\n      timeout_ready: 600000\n      read_only: true\n    chunk_indexer:\n      uses: yaml/index-chunk.yml\n      separated_workspace: true\n      polling: all\n      uses_reducing: _merge_all\n    ranker:\n      uses: MinRanker\n    doc_indexer:\n      uses: yaml/index-doc.yml\n  `,\n  southpark: `!Flow\n  with:\n    read_only: true\n    port_expose: $JINA_PORT\n  pods:\n    splittor:\n      uses: pods/craft-split.yml\n      parallel: $PARALLEL\n      read_only: true\n    encoder:\n      uses: pods/encode.yml\n      parallel: $PARALLEL\n      timeout_ready: 60000\n      read_only: true\n    chunk_indexer:\n      uses: pods/index-chunk.yml\n      shards: $SHARDS\n      separated_workspace: true\n      polling: all\n      reducing_uses: _merge_all\n    ranker:\n      uses: MinRanker\n    doc_indexer:\n      uses: pods/index-doc.yml\n  `,\n};\n","module.exports = {\n  nodeOffset: {\n    x: 250,\n    y: 150,\n  },\n};\n","module.exports = {\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\",\n  SET_CURRENT_TAB: \"SET_CURRENT_TAB\",\n  SELECT_NODE: \"SELECT_NODE\",\n  IMPORT_CUSTOM_YAML: \"IMPORT_CUSTOM_YAML\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  SHOW_LOG_AT_INDEX: \"SHOW_LOG_AT_INDEX\",\n  SAVE_SETTINGS: \"SAVE_SETTINGS\",\n  RECONNECT: \"RECONNECT\",\n  POST_REVIEW: \"POST_REVIEW\",\n  POST_RATING: \"POST_RATING\",\n  LOG_OUT: \"LOG_OUT\",\n  SEARCH_HUB: \"SEARCH_HUB\",\n  SHOW_BANNER: \"SHOW_BANNER\",\n  LOAD_EXAMPLE: \"LOAD_EXAMPLE\",\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","const YAML = require(\"yaml\");\nconst settings = require(\"./settings\");\nconst propertyList = require(\"./data/properties.json\");\n\nconst propertyTypes = {};\npropertyList.forEach((prop) => (propertyTypes[prop.name] = prop.type));\n\nexport function copyToClipboard(str) {\n  const temp = document.createElement(\"textarea\");\n  temp.value = str;\n  document.body.appendChild(temp);\n  temp.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(temp);\n  return;\n}\nexport function parseYAML(yamlSTR) {\n  try {\n    const data = YAML.parse(yamlSTR);\n    console.log(\"data:\", data);\n    return { data };\n  } catch (error) {\n    alert(\"Error Parsing YAML:\\n\" + error);\n    return { error };\n  }\n}\nexport function formatForFlowchart(pods, canvas) {\n  const formatted = {\n    offset: {\n      x: 0,\n      y: 0,\n    },\n    nodes: {},\n    links: {},\n    selected: {},\n    hovered: {},\n    scale: 1,\n  };\n\n  let nodes = {};\n  let links = {};\n\n  let prevNode = false;\n\n  if (!pods.gateway) {\n    let newPods = {};\n    newPods = {\n      gateway: null,\n      ...pods,\n    };\n    pods = newPods;\n  }\n\n  Object.keys(pods).forEach((id) => {\n    const pod = pods[id] || {};\n    let node = {\n      id,\n      label: id,\n      ports: {},\n      needs: {},\n      send_to: {},\n      position: {},\n      properties: { ...pod },\n    };\n\n    if (node.properties.needs) delete node.properties.needs;\n\n    node.ports[\"inPort\"] = { id: \"inPort\", type: \"input\" };\n    node.ports[\"outPort\"] = { id: \"outPort\", type: \"output\" };\n\n    if (prevNode && !pod.needs && id !== \"gateway\") pod.needs = prevNode;\n\n    if (pod.needs) {\n      let parents = Array.isArray(pod.needs) ? pod.needs : [pod.needs];\n\n      for (let i = 0; i < parents.length; ++i) {\n        let nodeFrom = parents[i];\n        node.needs[nodeFrom] = true;\n\n        let linkId = `${nodeFrom}-to-${id}`;\n        let link = {\n          color: \"red\",\n          id: linkId,\n          from: { nodeId: nodeFrom, portId: \"outPort\" },\n          to: { nodeId: id, portId: \"inPort\" },\n        };\n        links[linkId] = link;\n      }\n    }\n\n    if (canvas && canvas[id]) {\n      const { x, y } = canvas[id];\n      node.position = { x: parseInt(x), y: parseInt(y) };\n    }\n\n    nodes[id] = node;\n    prevNode = id;\n  });\n\n  const depthPopulation = {}; //how many nodes at each depth\n  const offsetX = settings.nodeOffset.x;\n  const offsetY = settings.nodeOffset.y;\n\n  //fallback: if no position encoded on canvas portion of YAML, infer the position using depth and order\n  Object.keys(nodes).forEach((id) => {\n    let depth = getNodeDepth(nodes, id, 0);\n    // let depth = 1;\n    nodes[id].depth = depth;\n\n    if (depthPopulation[depth] >= 0) depthPopulation[depth]++;\n    else depthPopulation[depth] = 0;\n\n    if (!nodes[id].position.x)\n      nodes[id].position = {\n        y: depth * offsetY + offsetY,\n        x: depthPopulation[depth] * offsetX + offsetX,\n      };\n  });\n\n  formatted.nodes = nodes;\n  formatted.links = links;\n\n  return formatted;\n}\n\nexport function formatAsYAML(chart) {\n  console.log(\"formatAsYAML input: \", chart);\n  let output = {\n    with: chart.with || {},\n    pods: {},\n  };\n  output.with.board = { canvas: {} };\n\n  Object.keys(chart.nodes).forEach((id) => {\n    let node = chart.nodes[id];\n    node.label = node.label || node.properties.name;\n    if (node.properties.name) delete node.properties.name;\n  });\n\n  Object.keys(chart.nodes).forEach((id) => {\n    const node = chart.nodes[id];\n\n    if (!node.label) return;\n\n    output.pods[node.label] = {};\n\n    Object.keys(node.properties).forEach((propId) => {\n      let type = propertyTypes[propId];\n      if (type === \"bool\") {\n        output.pods[node.label][propId] = String(node.properties[propId]) === \"true\";\n      } else if (type === \"int\")\n        output.pods[node.label][propId] = parseInt(node.properties[propId]);\n      else output.pods[node.label][propId] = node.properties[propId];\n    });\n    output.with.board.canvas[node.label] = {\n      x: node.position.x,\n      y: node.position.y,\n    };\n  });\n  Object.keys(chart.links).forEach((id) => {\n    const link = chart.links[id];\n    const nodeFrom = chart.nodes[link.from.nodeId].label;\n    const nodeTo = chart.nodes[link.to.nodeId].label;\n    if (!nodeFrom || !nodeTo) return;\n    if (output.pods[nodeTo].needs) {\n      if (!Array.isArray(output.pods[nodeTo].needs))\n        output.pods[nodeTo].needs = [output.pods[nodeTo].needs];\n      output.pods[nodeTo].needs.push(nodeFrom);\n    } else output.pods[nodeTo].needs = nodeFrom;\n  });\n  return `!Flow\\n${YAML.stringify(output)}`;\n}\n\nexport function formatSeconds(numSeconds) {\n  let minute = 60;\n  let hour = 60 * 60;\n\n  if (numSeconds < minute) return `${numSeconds}s`;\n  if (numSeconds < hour)\n    return `${parseInt(numSeconds / minute)}m ${parseInt(\n      numSeconds % minute\n    )}s`;\n  else\n    return `${parseInt(numSeconds / hour)}h ${parseInt(\n      (numSeconds % hour) / minute\n    )}m ${parseInt(numSeconds % minute)}s`;\n}\n\nexport function formatBytes(numBytes) {\n  if (numBytes < 1024) return `${numBytes} Bytes`;\n  if (numBytes < 1024 ** 2) return `${parseFloat(numBytes).toFixed(1)} KB`;\n  if (numBytes < 1024 ** 3)\n    return `${parseFloat(numBytes / 1024 ** 2).toFixed(1)} MB`;\n  return `${parseFloat(numBytes / 1024 ** 3).toFixed(1)} GB`;\n}\n\nfunction getNodeDepth(nodes, currentId, currentDepth) {\n  let parents = Object.keys(nodes[currentId].needs);\n  let longestDepth = 0;\n\n  // console.log('nodes: ',nodes)\n  // console.log('currentId: ',currentId);\n  // console.log('parents: ',parents);\n  // console.log('currentDepth: ',currentDepth);\n\n  for (let i = 0; i < parents.length; ++i) {\n    let parent = parents[i];\n    console.log(\"\\tparent:\", parent);\n    let depth;\n    if (nodes[parent].depth) depth = nodes[parent].depth + 1;\n    else depth = getNodeDepth(nodes, parent, 1);\n    if (depth > longestDepth) longestDepth = depth;\n  }\n\n  return currentDepth + longestDepth;\n}\n","import axios from \"axios\";\nimport { hubURL } from \"./config\";\nlet logStream;\nlet taskStream;\n\nconst hub = axios.create({\n  baseURL: hubURL,\n  withCredentials: true,\n  timeout: 30000, // 30 secs\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport default {\n  checkConnection: (settings) => {\n    console.log(\"checking connection\");\n    let connectionString = `${settings.host}:${settings.port}${\n      settings.ready.startsWith(\"/\") ? settings.ready : \"/\" + settings.ready\n    }`;\n    console.log(\"checkConnection string:\", connectionString);\n    return axios.get(connectionString);\n  },\n  connect: (settings, logUpdate, taskUpdate) => {\n    const logString = `${settings.host}:${settings.port}${\n      settings.log.startsWith(\"/\") ? settings.log : \"/\" + settings.log\n    }`;\n    console.log(\"logs connectionString: \", logString);\n    if (logStream) logStream.close();\n    logStream = new EventSource(logString);\n\n    logStream.onopen = () => {\n      logUpdate({\n        type: \"connect\",\n        data: `Log connection established at ${logString}`,\n      });\n    };\n    logStream.onmessage = (m) => {\n      logUpdate({ type: \"log\", data: JSON.parse(m.data) });\n    };\n    logStream.onerror = (data) => {\n      logUpdate({\n        type: \"error\",\n        data: `Could not get log data from ${logString}`,\n      });\n      logStream.close();\n    };\n\n    const taskString = `${settings.host}:${settings.port}${\n      settings.profile.startsWith(\"/\")\n        ? settings.profile\n        : \"/\" + settings.profile\n    }`;\n    console.log(\"task connectionString:\", taskString);\n    if (taskStream) taskStream.close();\n    taskStream = new EventSource(taskString);\n\n    taskStream.onopen = () => {\n      taskUpdate({\n        type: \"connect\",\n        data: `Task connection established at ${taskString}`,\n      });\n    };\n    taskStream.onmessage = (m) => {\n      taskUpdate({ type: \"event\", data: JSON.parse(m.data) });\n    };\n    taskStream.onerror = (data) => {\n      taskUpdate({\n        type: \"error\",\n        data: `Could not get profile data from ${taskString}`,\n      });\n      taskStream.close();\n    };\n  },\n  getProfile: async () => {\n    const result = await hub.get(\"profile\");\n    return result.data;\n  },\n  getYAML: async (connectionString) => {\n    console.log(\"YAML connectionString: \", connectionString);\n    const result = await axios.get(connectionString);\n    return result.data;\n  },\n  getImages: async () => {\n    console.log(\"get images...\");\n    const result = await hub.get(\"images\");\n    return result.data;\n  },\n  getImage: async (id) => {\n    console.log(\"get image\", id);\n    const result = await hub.get(`/images/${id}`);\n    return result.data;\n  },\n  postRating: async (imageId, stars) => {\n    console.log(\"post rating\", imageId, stars);\n    const result = await hub.post(`/images/${imageId}/ratings`, { stars });\n    return result.data;\n  },\n  postReview: async (imageId, content) => {\n    console.log(\"post review\", imageId, content);\n    const result = await hub.post(`/images/${imageId}/reviews`, { content });\n    return result.data;\n  },\n  searchHub: async (category, q, sort) => {\n    console.log(\"search hub\", category, q, sort);\n    const result = await hub.get(\n      `/images?category=${category}&q=${q}&sort=${sort}`\n    );\n    return result.data;\n  },\n  logOut: async () => {\n    const result = await hub.post(\"/auth/logout\");\n    return result.data;\n  },\n};\n","import { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport { parseYAML, formatForFlowchart, formatSeconds } from \"../helpers\";\nimport api from \"./api\";\nimport propertyList from \"../data/properties.json\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nimport exampleYAML from \"../data/yaml\";\n\nconst HIDE_BANNER_TIMEOUT = 5000;\n\nlet _store;\n\nconst NUM_CHART_ELEMENTS = 60;\nconst CHART_UPDATE_INTERVAL = 1000;\nconst TASK_UPDATE_INTERVAL = 500;\nconst CHECK_NETWORK_INTERVAL = 1000;\nconst CHART_LEVELS = [\n  \"INFO\",\n  \"SUCCESS\",\n  \"WARNING\",\n  \"ERROR\",\n  \"CRITICAL\",\n  \"DEBUG\",\n];\n\nfunction getInitialStore() {\n  return {\n    settings: {\n      host: localStorage.getItem(\"preferences-host\") || \"http://localhost\",\n      port: localStorage.getItem(\"preferences-port\") || 5000,\n      log: localStorage.getItem(\"preferences-log\") || \"/stream/log\",\n      profile: localStorage.getItem(\"preferences-profile\") || \"/stream/profile\",\n      yaml: localStorage.getItem(\"preferences-yaml\") || \"/data/yaml\",\n      shutdown:\n        localStorage.getItem(\"preferences-shutdown\") || \"/action/shutdown\",\n      ready: localStorage.getItem(\"preferences-ready\") || \"/status/ready\",\n    },\n    images: {},\n    hub: [],\n    banner: {\n      flow: false,\n      logs: false,\n    },\n    connected: {\n      logs: false,\n      flow: false,\n      status: false,\n    },\n    loading: true,\n    modal: false,\n    menuVisible: false,\n    navItems: getSidebarNavItems(),\n    flowchart: {\n      selected: {},\n      hovered: {},\n      scale: 1,\n      nodes: {\n        gateway: {\n          id: \"gateway\",\n          label: \"gateway\",\n          ports: {\n            outPort: {\n              id: \"outPort\",\n              type: \"output\",\n            },\n          },\n          properties: {},\n          position: { x: 629, y: 72 },\n        },\n      },\n      links: {},\n      offset: { x: 0, y: 0 },\n    },\n    logs: [],\n    logSources: {},\n    logLevels: {},\n    occurences: {\n      current: {},\n      previous: {},\n      lastLog: [],\n    },\n    logIndex: false,\n    summaryCharts: {},\n    processes: {},\n    taskData: {\n      qps: {\n        current: 0,\n        history: new Array(30).fill(0),\n      },\n      elapsed: {\n        task_name: \"No Current Task\",\n        seconds: \"0s\",\n      },\n      progress: {\n        currentRequest: 0,\n        bar_len: 0,\n        num_bars: 0,\n      },\n      speed: {\n        current: 0,\n        unit: \"units\",\n        history: new Array(30).fill(0),\n      },\n      lastUpdateChart: new Date(),\n      messages: [],\n      bytes: [],\n    },\n    selectedNode: null,\n    modalParams: null,\n    currentTab: \"logStream\",\n  };\n}\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n    Dispatcher.register(this.registerActions);\n    this.init();\n  }\n\n  registerActions = ({ actionType, payload }) => {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      case Constants.SHOW_MODAL:\n        this.showModal(payload);\n        break;\n      case Constants.SHOW_BANNER:\n        this.showBanner(...payload);\n        break;\n      case Constants.IMPORT_CUSTOM_YAML:\n        this.importCustomYAML(payload);\n        break;\n      case Constants.CLOSE_MODAL:\n        this.closeModal();\n        break;\n      case Constants.SHOW_LOG_AT_INDEX:\n        this.showLogAtIndex(payload);\n        break;\n      case Constants.SAVE_SETTINGS:\n        this.saveSettings(payload);\n        break;\n      case Constants.RECONNECT:\n        this.reconnect(payload);\n        break;\n      case Constants.POST_RATING:\n        this.postRating(payload);\n        break;\n      case Constants.POST_REVIEW:\n        this.postReview(payload);\n        break;\n      case Constants.SEARCH_HUB:\n        this.searchHub(payload);\n        break;\n      case Constants.LOG_OUT:\n        this.logOut();\n        break;\n      case Constants.LOAD_EXAMPLE:\n        this.loadExample(payload);\n        break;\n      default:\n    }\n  };\n\n  checkNetwork = async () => {\n    let prevStatus = this.connected;\n    try {\n      await api.checkConnection(_store.settings);\n      this.connected = true;\n    } catch (e) {\n      this.connected = false;\n    }\n    console.log(\"prevStatus:\", prevStatus, \"connected:\", this.connected);\n    if (prevStatus !== this.connected) return this.init();\n  };\n\n  init = async () => {\n    this.clearIntervals();\n    _store = getInitialStore();\n\n    console.log(\"settings: \", _store.settings);\n\n    this.startNetworkMonitor();\n    await this.initFlowChart();\n    this.initLogStream();\n    this.initCharts();\n    this.initHub();\n    this.initUser();\n\n    _store.loading = false;\n    this.emit(\"update-ui\");\n    this.emit(\"update-settings\");\n  };\n\n  startNetworkMonitor = async () => {\n    if (!this.checkNetworkInterval)\n      this.checkNetworkInterval = setInterval(\n        this.checkNetwork,\n        CHECK_NETWORK_INTERVAL\n      );\n  };\n\n  clearIntervals = () => {\n    if (this.updateChartInterval) clearInterval(this.updateChartInterval);\n    if (this.updateTaskInterval) clearInterval(this.updateTaskInterval);\n  };\n\n  initFlowChart = async (yamlSTRING) => {\n    let flow;\n    const { settings } = _store;\n    const connectionString = `${settings.host}:${settings.port}${\n      settings.yaml.startsWith(\"/\") ? settings.yaml : \"/\" + settings.yaml\n    }`;\n\n    if (yamlSTRING) {\n      flow = parseYAML(yamlSTRING);\n      _store.connected.flow = false;\n    } else {\n      try {\n        let str = await api.getYAML(connectionString);\n        flow = parseYAML(str);\n        _store.connected.flow = true;\n        this.showBanner(\n          \"flow\",\n          `Getting YAML from ${connectionString}`,\n          \"success\"\n        );\n      } catch (e) {\n        _store.connected.flow = false;\n        this.showBanner(\n          \"flow\",\n          `Could not get YAML flow from ${connectionString}`,\n          \"error\"\n        );\n        return;\n      }\n    }\n    let canvas;\n    try {\n      canvas = flow.data.with.board.canvas;\n    } catch (e) {\n      console.log(\"could not find canvas\");\n      canvas = {};\n    }\n    console.log(\"pods: \", flow.data.pods);\n    const parsed = formatForFlowchart(flow.data.pods, canvas);\n    console.log(\"parsed: \", parsed);\n    parsed.with = flow.data.with;\n    _store.flowchart = parsed;\n    this.emit(\"update-ui\");\n    this.emit(\"update-flowchart\");\n  };\n\n  initLogStream = () => {\n    api.connect(_store.settings, this.handleNewLog, this.handleNewTaskEvent);\n    this.updateTaskInterval = setInterval(\n      () => this.emit(\"update-task\"),\n      TASK_UPDATE_INTERVAL\n    );\n  };\n\n  handleNewLog = (message) => {\n    const { type, data } = message;\n\n    if (type === \"connect\") {\n      _store.connected.logs = true;\n      return this.showBanner(\"logs\", data, \"success\");\n    }\n\n    if (type === \"error\") {\n      _store.connected.logs = false;\n      return this.showBanner(\"logs\", data, \"error\");\n    }\n\n    const log = data;\n\n    log.formattedTimestamp = new Date(log.created * 1000).toLocaleString();\n    log.idx = _store.logs.length;\n\n    _store.logs.push(log);\n    _store.processes[log.process] = log.name;\n    _store.logSources[log.name] = true;\n    _store.logLevels[log.levelname] = true;\n\n    if (CHART_LEVELS.includes(log.levelname)) {\n      _store.occurences.current[log.levelname]++;\n    }\n\n    this.emit(\"update-logs\");\n  };\n\n  handleNewTaskEvent = (message) => {\n    const { type, data } = message;\n\n    if (type === \"connect\") {\n      _store.connected.task = true;\n      return this.showBanner(\"task\", data, \"success\");\n    }\n\n    if (type === \"error\") {\n      _store.connected.task = false;\n      return this.showBanner(\"task\", data, \"error\");\n    }\n\n    const event = data;\n\n    const {\n      task_name,\n      process,\n      bar_len,\n      num_bars,\n      elapsed,\n      speed,\n      speed_unit,\n      bytes_recv,\n      bytes_sent,\n      msg_recv,\n      msg_sent,\n      num_reqs,\n      qps,\n    } = event;\n\n    if (bar_len && num_bars) {\n      _store.taskData.progress.currentRequest = num_reqs;\n      _store.taskData.progress.bar_len = bar_len;\n      _store.taskData.progress.num_bars = num_bars;\n    }\n\n    if (msg_recv && msg_sent) {\n      let index = _store.taskData.messages\n        .map((obj) => obj.process)\n        .indexOf(process);\n      let msgData = {\n        process,\n        sent: msg_sent,\n        received: msg_recv,\n        node: _store.processes[process],\n      };\n      let bytesData = {\n        process,\n        sent: bytes_sent,\n        received: bytes_recv,\n        node: _store.processes[process],\n      };\n      if (index < 0) {\n        _store.taskData.messages.push(msgData);\n        _store.taskData.bytes.push(bytesData);\n      } else {\n        _store.taskData.messages[index] = msgData;\n        _store.taskData.bytes[index] = bytesData;\n      }\n      _store.taskData.messages = _store.taskData.messages\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.bytes = _store.taskData.bytes\n        .sort((a, b) => b.sent + b.received - (a.sent + a.received))\n        .slice(0, 20);\n      _store.taskData.lastUpdateChart = new Date();\n    }\n\n    if (qps) {\n      _store.taskData.qps.current = parseFloat(qps).toFixed(1);\n      _store.taskData.qps.history.push(parseFloat(qps).toFixed(3));\n      _store.taskData.qps.history.shift();\n    }\n\n    if (speed && speed_unit) {\n      _store.taskData.speed.unit = speed_unit;\n      _store.taskData.speed.current = parseFloat(speed).toFixed(1);\n      _store.taskData.speed.history.push(parseFloat(speed).toFixed(3));\n      _store.taskData.speed.history.shift();\n    }\n\n    if (elapsed) {\n      _store.taskData.elapsed.seconds = formatSeconds(parseInt(elapsed));\n      _store.taskData.elapsed.task_name = `Task: ${task_name}`;\n    }\n  };\n\n  initCharts = () => {\n    for (let i = 0; i < CHART_LEVELS.length; ++i) {\n      let level = CHART_LEVELS[i];\n      _store.occurences.current[level] = 0;\n      _store.occurences.previous[level] = 0;\n      _store.summaryCharts[level] = new Array(NUM_CHART_ELEMENTS).fill(0);\n    }\n    _store.occurences.lastLog = new Array(NUM_CHART_ELEMENTS).fill({});\n    console.log(\"initial Occurences: \", _store.occurences);\n    console.log(\"initial summary charts: \", _store.summaryCharts);\n    this.updateChartInterval = setInterval(\n      this.updateSummaryCharts,\n      CHART_UPDATE_INTERVAL\n    );\n  };\n\n  initHub = async () => {\n    try {\n      const images = await api.getImages();\n      _store.hub = images;\n      _store.connected.hub = true;\n    } catch (e) {\n      _store.connected.hub = false;\n    }\n    this.emit(\"update-hub\");\n  };\n\n  initUser = async () => {\n    const user = await api.getProfile();\n    console.log(\"user\", user);\n    _store.user = user;\n    this.emit(\"update-user\");\n  };\n\n  updateSummaryCharts = () => {\n    const { current, previous } = _store.occurences;\n    for (let i = 0; i < CHART_LEVELS.length; ++i) {\n      let level = CHART_LEVELS[i];\n      const numLogs = current[level];\n      const prevNum = previous[level];\n      _store.summaryCharts[level].push(numLogs - prevNum);\n      _store.summaryCharts[level].shift();\n      _store.occurences.previous[level] = numLogs;\n    }\n    _store.occurences.lastLog.push(_store.logs.length - 1);\n    _store.occurences.lastLog.shift();\n    // console.log('summaryCharts:', _store.summaryCharts);\n    this.emit(\"update-summary-chart\");\n  };\n\n  reconnect() {\n    this.init();\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(\"update-ui\");\n  }\n\n  showLogAtIndex = (index) => {\n    console.log(\"index: \", index);\n    let logIndex = _store.occurences.lastLog[index];\n    console.log(\"logIndex: \", logIndex);\n    if (!logIndex) return;\n    _store.logIndex = _store.occurences.lastLog[index];\n    this.emit(\"show-log\");\n  };\n\n  importCustomYAML = (customYAML) => {\n    this.initFlowChart(customYAML);\n    this.closeModal();\n    this.emit(\"update-flowchart\");\n  };\n\n  loadExample = (exampleName) => {\n    const flow = exampleYAML[exampleName];\n    this.initFlowChart(flow);\n    this.emit(\"update-flowchart\");\n  };\n\n  saveSettings = (settings) => {\n    Object.keys(settings).forEach((key) => {\n      localStorage.setItem(`preferences-${key}`, settings[key]);\n    });\n    setTimeout(this.init, 100);\n  };\n\n  postRating = async ({ imageId, stars }) => {\n    console.log(\"posting rating: \", imageId, stars);\n    if (!_store.user) return (window.location.hash = \"#/login\");\n    let result;\n    try {\n      result = await api.postRating(imageId, stars);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Rated\" : e;\n      return this.showError(\"hub\", error);\n    }\n    if (result.error) this.showError(\"hub\", result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"hub\", \"Rating successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  postReview = async ({ imageId, content }) => {\n    if (!_store.user) {\n      this.closeModal();\n      return (window.location.hash = \"#/login\");\n    }\n    this.closeModal();\n    let result;\n    try {\n      result = await api.postReview(imageId, content);\n    } catch (e) {\n      let error = String(e).includes(\"409\") ? \"Already Reviewed\" : e;\n      return this.showError(\"hub\", error);\n    }\n    if (result.error) this.showError(\"hub\", result.error);\n    else if (result.data) {\n      const image = result.data;\n      _store.images[image.id] = image;\n      this.showBanner(\"hub\", \"Review successfully posted\", \"success\");\n    }\n    this.emit(\"update-hub\");\n  };\n\n  logOut = async () => {\n    await api.logOut();\n    window.location.reload();\n  };\n\n  searchHub = async ({ category, q, sort }) => {\n    const images = await api.searchHub(category, q, sort);\n    console.log(\"found\", images.length, \"images\");\n    _store.hub = images;\n    this.emit(\"update-hub\");\n  };\n\n  showBanner = (target, message, theme) => {\n    if (this.bannerTimeout) clearTimeout(this.bannerTimeout);\n    _store.banner[target] = { message: String(message), theme };\n    this.bannerTimeout = setTimeout(this.hideBanner, HIDE_BANNER_TIMEOUT);\n    this.emit(\"update-ui\");\n  };\n\n  hideBanner = () => {\n    _store.banner = { logs: false, flow: false };\n    this.emit(\"update-ui\");\n  };\n\n  showError = (target, message) => {\n    this.showBanner(target, message, \"error\");\n  };\n\n  showModal = (data) => {\n    const { modal, params } = data;\n    _store.modal = modal;\n    _store.modalParams = params;\n    this.emit(\"update-ui\");\n  };\n\n  closeModal = () => {\n    _store.modal = false;\n    _store.modalParams = \"\";\n    this.emit(\"update-ui\");\n  };\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getCurrentTab = () => {\n    return _store.currentTab;\n  };\n\n  getUser = () => {\n    return _store.user;\n  };\n\n  getHubImages = () => {\n    return _store.hub;\n  };\n\n  getHubImage = async (imageId) => {\n    if (!_store.images[imageId]) {\n      _store.images[imageId] = await api.getImage(imageId);\n    }\n    return _store.images[imageId];\n  };\n\n  getSettings = () => {\n    return _store.settings;\n  };\n\n  getBanner = (panel = \"logs\") => {\n    return _store.banner[panel];\n  };\n\n  getModal = () => {\n    return _store.modal;\n  };\n\n  getModalParams = () => {\n    return _store.modalParams;\n  };\n\n  getLogs = () => {\n    return _store.logs;\n  };\n\n  getLogSources = () => {\n    return _store.logSources;\n  };\n\n  getLogLevels = () => {\n    return _store.logLevels;\n  };\n\n  getSummaryCharts = () => {\n    return _store.summaryCharts;\n  };\n\n  getOccurencesByName = () => {\n    return _store.occurences.current;\n  };\n\n  getTaskData = () => {\n    return _store.taskData;\n  };\n\n  getActivePanel = () => {\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    if (path.startsWith(\"flow\")) return \"flow\";\n    if (path.startsWith(\"logs\")) return \"logs\";\n    if (path.startsWith(\"hub\") || path.startsWith(\"package\")) return \"hub\";\n    if (path.startsWith(\"task\")) return \"task\";\n    return \"neither\";\n  };\n\n  getConnectionStatus = () => {\n    const activePanel = this.getActivePanel();\n    const status = _store.connected[activePanel];\n    return status;\n  };\n\n  isLoading = () => {\n    return _store.loading;\n  };\n\n  getFlowchart = () => {\n    return _store.flowchart;\n  };\n\n  getAvailableProperties = () => {\n    return propertyList;\n  };\n\n  getIndexedLog = () => {\n    return _store.logIndex;\n  };\n}\n\nexport default new Store();\n","export default function () {\n  return [\n    {\n      title: \"Navigation\",\n      items: [\n        {\n          title: \"Home\",\n          to: \"/home\",\n          htmlBefore: '<i class=\"material-icons\">home</i>',\n          htmlAfter: \"\",\n          matches: [\"home\"],\n        },\n        {\n          title: \"Log Stream\",\n          to: \"/logs\",\n          htmlBefore: '<i class=\"material-icons\">insert_comment</i>',\n          htmlAfter: \"\",\n          matches: [\"logs\"],\n        },\n        {\n          title: \"Task\",\n          to: \"/task\",\n          htmlBefore: '<i class=\"material-icons\">assessment</i>',\n          htmlAfter: \"\",\n          matches: [\"task\"],\n        },\n        {\n          title: \"Flow Design\",\n          to: \"/flow\",\n          htmlBefore: '<i class=\"material-icons\">device_hub</i>',\n          htmlAfter: \"\",\n          matches: [\"flow\"],\n        },\n        {\n          title: \"Hub\",\n          to: \"/hub\",\n          htmlBefore: '<i class=\"material-icons\">store</i>',\n          htmlAfter: \"\",\n          matches: [\"hub\", \"package\"],\n        },\n        {\n          title: \"Settings\",\n          to: \"/settings\",\n          htmlBefore: '<i class=\"material-icons\">settings</i>',\n          htmlAfter: \"\",\n          matches: [\"settings\"],\n        },\n        {\n          title: \"Help\",\n          to: \"/help\",\n          htmlBefore: '<i class=\"material-icons\">help</i>',\n          htmlAfter: \"\",\n          matches: [\"help\"],\n        },\n      ],\n    },\n  ];\n}\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nimport { Dispatcher, Constants } from \"../flux\";\n\nclass PasteYAML extends Component {\n  state = {};\n  style = {\n    overlay: {\n      backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n    },\n    content: {\n      border: \"none\",\n      bottom: \"auto\",\n      maxHeight: \"80%\", // set height\n      left: \"50%\",\n      padding: \"2rem\",\n      position: \"fixed\",\n      right: \"auto\",\n      top: \"50%\", // start from center\n      transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n      width: \"90%\",\n      maxWidth: \"800px\",\n      overflow: \"hidden\",\n    },\n  };\n\n  listenForEnter = (key) => {\n    if (parseInt(key.charCode) === 13) {\n      this.importYAML();\n    }\n  };\n\n  importYAML = () => {\n    const yamlString = this.inputRef.value;\n    Dispatcher.dispatch({\n      actionType: Constants.IMPORT_CUSTOM_YAML,\n      payload: yamlString,\n    });\n  };\n\n  close = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  render = () => {\n    const { open } = this.props;\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={open}\n        contentLabel=\"Action Modal\"\n        className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n        shouldCloseOnOverlayClick={true}\n        style={this.style}\n        onRequestClose={this.close}\n        closeTimeoutMS={100}\n      >\n        <div className=\"modal-header p-0\">\n          <h4>\n            <b>Import YAML</b>\n          </h4>\n          <h4>\n            <span className=\"float-right close-icon\">\n              <i className=\"material-icons\" onClick={this.close}>\n                close\n              </i>\n            </span>\n          </h4>\n        </div>\n        <div className=\"modal-body px-0 pb-0\">\n          <Form.Group>\n            <Form.Label>Custom YAML:</Form.Label>\n            <Form.Control\n              placeholder=\"Paste Here\"\n              ref={(ref) => (this.inputRef = ref)}\n              as=\"textarea\"\n              rows=\"10\"\n            />\n          </Form.Group>\n        </div>\n        <Button className=\"btn-primary\" onClick={this.importYAML}>\n          Continue\n        </Button>\n      </ReactModal>\n    );\n  };\n}\n\nexport default PasteYAML;\n","import React from \"react\";\nimport { Container, Alert, Col, Row } from \"react-bootstrap\";\n\n// import Navbar from '../components/Layout/Navbar';\n// import Footer from '../components/Layout/Footer';\nimport PasteYAML from \"../modals/PasteYAML\";\n\nimport { Store } from \"../flux\";\n\nclass DefaultLayout extends React.Component {\n  state = {\n    modal: Store.getModal(),\n    loading: Store.isLoading(),\n  };\n\n  componentWillMount = () => {\n    Store.on(\"update-ui\", this.getData);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    this.setState({ modal, loading });\n  };\n\n  render = () => {\n    const { banner, loading, modal } = this.state;\n    const { children } = this.props;\n    return (\n      <Container fluid>\n        <Row>\n          {/* <Sidebar /> */}\n          <Col className=\"main-content p-0\" sm=\"12\" tag=\"main\">\n            {/* <Navbar /> */}\n            {banner && (\n              <Alert theme={banner.variant} className=\"alert-bar py-1\">\n                {banner.text}\n              </Alert>\n            )}\n            {loading ? (\n              <Container fluid className=\"main-content-container px-4\">\n                <div className=\"error\">\n                  <div className=\"loader\"></div>\n                </div>\n              </Container>\n            ) : (\n              children\n            )}\n            {/* <Footer /> */}\n          </Col>\n        </Row>\n        <PasteYAML open={modal === \"import\"} />\n      </Container>\n    );\n  };\n}\n\nexport default DefaultLayout;\n","import React from \"react\";\n\nexport default () => (\n  <div className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\"></div>\n);\n","import React from \"react\";\nimport { NavItem, NavLink, Badge } from \"shards-react\";\nimport { Store, Constants, Dispatcher } from \"../../../../flux\";\n\nexport default class Notifications extends React.Component {\n  state = {\n    connected: Store.getConnectionStatus(),\n  };\n\n  componentWillMount = () => {\n    Store.on(\"update-ui\", this.getData);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const connected = Store.getConnectionStatus();\n    this.setState({ connected });\n  };\n\n  reconnect = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.RECONNECT,\n    });\n  };\n\n  render() {\n    const { connected } = this.state;\n    return (\n      <NavItem\n        className=\"border-right dropdown notifications\"\n        onClick={this.reconnect}\n      >\n        <NavLink\n          className=\"nav-link-icon text-center\"\n          onClick={this.toggleNotifications}\n        >\n          <div className=\"nav-link-icon__wrapper\">\n            <i className=\"material-icons\">language</i>\n            {connected ? (\n              <Badge pill theme=\"success\" className=\"connection-indicator p-1\">\n                <i className=\"material-icons\">done</i>\n              </Badge>\n            ) : (\n              <Badge pill theme=\"danger\" className=\"connection-indicator p-1\">\n                <i className=\"material-icons\">close</i>\n              </Badge>\n            )}\n          </div>\n        </NavLink>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n  NavItem,\n  NavLink,\n  Button,\n} from \"shards-react\";\nimport { Store, Dispatcher, Constants } from \"../../../../flux\";\n\nexport default class UserActions extends React.Component {\n  state = {\n    visible: false,\n    user: Store.getUser(),\n  };\n  componentWillMount = () => {\n    Store.on(\"update-user\", this.getData);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-user\", this.getData);\n  };\n\n  getData = () => {\n    const user = Store.getUser();\n    this.setState({ user });\n  };\n\n  toggleUserActions = () => {\n    this.setState({\n      visible: !this.state.visible,\n    });\n  };\n\n  logOut = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOG_OUT,\n    });\n  };\n\n  render() {\n    const { user } = this.state;\n    return (\n      <NavItem tag={Dropdown} caret toggle={this.toggleUserActions}>\n        {user ? (\n          <DropdownToggle caret tag={NavLink} className=\"text-nowrap px-3\">\n            <img\n              className=\"user-avatar rounded-circle mr-2\"\n              src={user._json.avatar_url}\n              alt=\"User Avatar\"\n            />{\" \"}\n            <span className=\"d-none d-md-inline-block\">{user.username}</span>\n          </DropdownToggle>\n        ) : (\n          <Link to=\"/login\" className=\"nav-link px-3\">\n            <Button className=\"text-nowrap mb-0 mt-1\">Log in</Button>\n          </Link>\n        )}\n\n        <Collapse tag={DropdownMenu} right small open={this.state.visible}>\n          <DropdownItem\n            tag={Link}\n            to=\"/\"\n            className=\"text-danger\"\n            onClick={this.logOut}\n          >\n            <i className=\"material-icons text-danger\">&#xE879;</i> Logout\n          </DropdownItem>\n        </Collapse>\n      </NavItem>\n    );\n  }\n}\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport Notifications from \"./Notifications\";\nimport UserActions from \"./UserActions\";\n\nexport default () => (\n  <Nav navbar className=\"border-left flex-row\">\n    <Notifications />\n    <UserActions />\n  </Nav>\n);\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav cursor-pointer\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <span\n          onClick={this.handleClick}\n          className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\"\n        >\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </span>\n      </nav>\n    );\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Container, Navbar, NavbarBrand } from \"shards-react\";\n\nimport NavbarSpacer from \"./NavbarSpacer\";\nimport NavbarNav from \"./NavbarNav/NavbarNav\";\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const isHeaderNav = false;\n  const classes = classNames(\"main-navbar\", \"bg-white\", \"sticky-top\");\n\n  return (\n    <div className={classes}>\n      <Container fluid={!isHeaderNav || null} className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          {isHeaderNav && (\n            <NavbarBrand href=\"#\" style={{ lineHeight: \"25px\" }}>\n              <div className=\"d-table m-auto\">\n                <img\n                  id=\"main-logo\"\n                  className=\"d-inline-block align-top mr-1 ml-3\"\n                  style={{ maxWidth: \"25px\" }}\n                  src={require(\"../../../images/jina-light.svg\")}\n                  alt=\"Jina.ai\"\n                />\n                <span className=\"d-none d-md-inline ml-1\">Dashboard</span>\n              </div>\n            </NavbarBrand>\n          )}\n          <NavbarSpacer />\n          <NavbarNav />\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top\"\n                style={{ maxWidth: \"50px\" }}\n                src={require(\"../../../images/jina-light.svg\")}\n                alt=\"Jina Dashboard\"\n              />\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport {\n  NavItem,\n  NavLink,\n  DropdownMenu,\n  DropdownItem,\n  Collapse,\n} from \"shards-react\";\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarNavItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n  }\n\n  toggleDropdown(item) {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR_DROPDOWN,\n      payload: item,\n    });\n  }\n\n  render() {\n    const { item } = this.props;\n    const hasSubItems = item.items && item.items.length;\n    const path = window.location.hash.substring(2, window.location.hash.length);\n    let active = false;\n    item.matches.forEach((match) => {\n      if (path.startsWith(match)) active = true;\n    });\n\n    return (\n      <NavItem style={{ position: \"relative\" }}>\n        <NavLink\n          className={hasSubItems && \"dropdown-toggle\"}\n          tag={hasSubItems ? \"a\" : RouteNavLink}\n          to={hasSubItems ? \"#\" : item.to}\n          active={active}\n          onClick={() => this.toggleDropdown(item)}\n        >\n          {item.htmlBefore && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n            />\n          )}\n          {item.title && <span>{item.title}</span>}\n          {item.htmlAfter && (\n            <div\n              className=\"d-inline-block item-icon-wrapper\"\n              dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n            />\n          )}\n        </NavLink>\n        {hasSubItems && (\n          <Collapse\n            tag={DropdownMenu}\n            small\n            open={item.open}\n            style={{ top: 0 }}\n          >\n            {item.items.map((subItem, idx) => (\n              <DropdownItem key={idx} tag={RouteNavLink} to={subItem.to}>\n                {subItem.title}\n              </DropdownItem>\n            ))}\n          </Collapse>\n        )}\n      </NavItem>\n    );\n  }\n}\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { Store } from \"../../../flux\";\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      navItems: Store.getSidebarItems(),\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems(),\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        {items.map((nav, idx) => (\n          <div key={idx}>\n            <h6 className=\"main-sidebar__nav-title\">{nav.title}</h6>\n            {typeof nav.items !== \"undefined\" && nav.items.length && (\n              <Nav className=\"nav--no-borders flex-column\">\n                {nav.items.map((item, idx) => (\n                  <SidebarNavItem key={idx} item={item} />\n                ))}\n              </Nav>\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: false,\n      sidebarNavItems: Store.getSidebarItems(),\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.on(\"update-ui\", this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeListener(\"update-ui\", this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems(),\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col tag=\"aside\" className={classes} lg={{ size: 2 }} md={{ size: 3 }}>\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        {/* <SidebarSearch /> */}\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nexport default MainSidebar;\n","import React from \"react\";\nimport { Container, Row, Nav } from \"shards-react\";\n\nconst MainFooter = ({ contained, menuItems, copyright }) => (\n  <footer className=\"main-footer d-flex p-2 px-3 bg-white border-top\">\n    <Container fluid>\n      <Row>\n        <Nav>\n          {menuItems.map((item, idx) => (\n            <a key={idx} href={item.to} className=\"nav-link\">\n              {item.title}\n            </a>\n          ))}\n        </Nav>\n        <span className=\"copyright ml-auto my-auto mr-2\">{copyright}</span>\n      </Row>\n    </Container>\n  </footer>\n);\n\nMainFooter.defaultProps = {\n  contained: false,\n  copyright: \"Copyright © Jina AI Limited\",\n  menuItems: [\n    {\n      title: \"Home\",\n      to: \"https://jina.ai\",\n    },\n    {\n      title: \"Opensource\",\n      to: \"https://opensource.jina.ai\",\n    },\n    {\n      title: \"Learn\",\n      to: \"https://docs.jina.ai\",\n    },\n    {\n      title: \"Community\",\n      to: \"https://twitter.com/JinaAI_\",\n    },\n    {\n      title: \"Jobs\",\n      to: \"https://www.linkedin.com/company/jinaai/jobs/\",\n    },\n    {\n      title: \"Privacy & Terms\",\n      to: \"https://github.com/jina-ai/legal\",\n    },\n  ],\n};\n\nexport default MainFooter;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n        {!noFooter && <MainFooter />}\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nclass CookiesBanner extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      accepted: localStorage.getItem(\"accepted-cookies\"),\n    };\n  }\n  acceptCookies = () => {\n    localStorage.setItem(\"accepted-cookies\", true);\n    this.setState({ accepted: true });\n  };\n  render = () => {\n    const { accepted } = this.state;\n    return (\n      <div className={`cookies-banner ${accepted ? \"hidden\" : \"\"}`}>\n        <p className=\"mb-2\">\n          We and third parties use cookies or similar technologies (\"Cookies\")\n          as described below to collect and process personal data, such as your\n          IP address or browser information. You can learn more about how this\n          site uses Cookies by reading our privacy policy linked below. By\n          clicking \"I consent to cookies\", you accept the placement and use of\n          these Cookies for these purposes. You can change your mind and revisit\n          your preferences at any time by accessing the “Cookie Preferences”\n          link in the footer of this site.\n        </p>\n        <Button className=\"ml-auto d-block\" onClick={this.acceptCookies}>\n          I consent to cookies\n        </Button>\n      </div>\n    );\n  };\n}\n\nexport default CookiesBanner;\n","import React, { Component } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\n\nclass WriteReview extends Component {\n  state = {};\n  style = {\n    overlay: {\n      backgroundColor: \"rgba(38, 50, 56, 0.5)\",\n    },\n    content: {\n      border: \"none\",\n      bottom: \"auto\",\n      maxHeight: \"80%\", // set height\n      left: \"50%\",\n      padding: \"2rem\",\n      position: \"fixed\",\n      right: \"auto\",\n      top: \"50%\", // start from center\n      transform: \"translate(-50%,-50%)\", // adjust top \"up\" based on height\n      width: \"90%\",\n      maxWidth: \"800px\",\n      overflow: \"hidden\",\n    },\n  };\n\n  listenForEnter = (key) => {\n    if (parseInt(key.charCode) === 13) {\n      this.importYAML();\n    }\n  };\n\n  submitReview = () => {\n    const params = Store.getModalParams();\n    const { imageId } = params;\n    const content = this.inputRef.value;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_REVIEW,\n      payload: { content, imageId },\n    });\n  };\n\n  close = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.CLOSE_MODAL,\n    });\n  };\n\n  render = () => {\n    const { open } = this.props;\n    return (\n      <ReactModal\n        ariaHideApp={false}\n        isOpen={open}\n        contentLabel=\"Action Modal\"\n        className=\"modal-content tiny-modal px-4 pt-3 pb-4\"\n        shouldCloseOnOverlayClick={true}\n        style={this.style}\n        onRequestClose={this.close}\n        closeTimeoutMS={100}\n      >\n        <div className=\"modal-header p-0\">\n          <h4>\n            <b>Write a Review</b>\n          </h4>\n          <h4>\n            <span className=\"float-right close-icon\">\n              <i className=\"material-icons\" onClick={this.close}>\n                close\n              </i>\n            </span>\n          </h4>\n        </div>\n        <div className=\"modal-body px-0 pb-0\">\n          <Form.Group>\n            <Form.Control\n              placeholder=\"Tell the world about your experience\"\n              ref={(ref) => (this.inputRef = ref)}\n              as=\"textarea\"\n              rows=\"10\"\n            />\n          </Form.Group>\n        </div>\n        <Button className=\"btn-primary\" onClick={this.submitReview}>\n          Submit\n        </Button>\n      </ReactModal>\n    );\n  };\n}\n\nexport default WriteReview;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/Layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/Layout/MainSidebar/MainSidebar\";\nimport MainFooter from \"../components/Layout/MainFooter\";\nimport CookiesBanner from \"../components/Common/CookiesBanner\";\n\nimport PasteYAML from \"../modals/PasteYAML\";\nimport WriteReview from \"../modals/WriteReview\";\n\nimport { Store } from \"../flux\";\n\nclass IconSidebarLayout extends React.Component {\n  state = {\n    modal: Store.getModal(),\n    loading: Store.isLoading(),\n  };\n\n  componentWillMount = () => {\n    Store.on(\"update-ui\", this.getData);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n\n  getData = () => {\n    const modal = Store.getModal();\n    const loading = Store.isLoading();\n    this.setState({ modal, loading });\n  };\n\n  render = () => {\n    const { modal } = this.state;\n    const { noNavbar, children, noFooter } = this.props;\n    return (\n      <Container fluid className=\"icon-sidebar-nav\">\n        <Row>\n          <MainSidebar hideLogoText />\n          <Col className=\"main-content col\" tag=\"main\">\n            {!noNavbar && <MainNavbar />}\n            {children}\n            <CookiesBanner />\n            {!noFooter && <MainFooter />}\n          </Col>\n        </Row>\n        <PasteYAML open={modal === \"import\"} />\n        <WriteReview open={modal === \"review\"} />\n      </Container>\n    );\n  };\n}\n\nIconSidebarLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false,\n};\n\nexport default IconSidebarLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"3\" className={classes} {...attrs}>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  );\n};\n\nexport default PageTitle;\n","import React from \"react\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\n\nclass CommandBar extends React.Component {\n  render = () => {\n    return (\n      <div className=\"command-bar-container\">\n        <div className=\"command-bar\">\n          <ButtonGroup>\n            <Button variant=\"secondary\" disabled>\n              <i className=\"material-icons\">play_arrow</i>\n            </Button>\n            <Button variant=\"secondary\" disabled>\n              <i className=\"material-icons\">stop</i>\n            </Button>\n            <Button variant=\"secondary\" disabled>\n              <i className=\"material-icons\">schedule</i>\n            </Button>\n            <Button variant=\"secondary\" onClick={this.props.importChart}>\n              <i className=\"material-icons\">save_alt</i>\n            </Button>\n            <Button variant=\"secondary\" onClick={this.props.copyChart}>\n              <i className=\"material-icons\">assignment</i>\n            </Button>\n            <Button\n              variant=\"secondary\"\n              onClick={() => this.props.exportImage(\"png\")}\n            >\n              <i className=\"material-icons\">camera_alt</i>\n            </Button>\n          </ButtonGroup>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default CommandBar;\n","import React from \"react\";\nimport { Badge } from \"react-bootstrap\";\n\nclass ChartNode extends React.Component {\n  getPropertiesString = () => {\n    const properties = this.props.node.properties || {};\n    let str = \"\";\n    Object.keys(properties).forEach((propId) => {\n      str = str.concat(`pod-${propId}-${properties[propId]} `);\n    });\n    return str;\n  };\n  getIcons = () => {\n    const { properties } = this.props.node;\n    let icons = [];\n    Object.keys(properties).forEach((prop) => {\n      if (prop === \"image\" && properties[prop])\n        icons.push(<span className=\"fab fa-docker mx-1\" />);\n      if (prop === \"num_part\" && properties[prop])\n        icons.push(<span className=\"fas fa-code-branch mx-1\" />);\n      if (prop === \"read_only\" && properties[prop])\n        icons.push(<span className=\"fas fa-lock mx-1\" />);\n      if (prop === \"host\" && properties[prop])\n        icons.push(<span className=\"fas fa-network-wired mx-1\" />);\n      if (prop === \"separated_workspace\" && properties[prop])\n        icons.push(<span className=\"fas fa-columns mx-1\" />);\n      if (prop === \"py_modules\" && properties[prop])\n        icons.push(<span className=\"fab fa-python mx-1\" />);\n    });\n    return icons;\n  };\n  getPropertiesList = () => {\n    const { properties } = this.props.node;\n    let list = [];\n    Object.keys(properties).forEach((prop) => {\n      if (properties[prop] && prop !== \"name\")\n        list.push(\n          <div>\n            <span className=\"text-bold mr-1\">{prop}:</span>\n            {properties[prop]}\n          </div>\n        );\n    });\n    return list;\n  };\n  render = () => {\n    const { label, properties } = this.props.node;\n    const list = this.getPropertiesList();\n    const isSpecial = Object.keys(properties).length > 0;\n    const isGateway = label === \"gateway\";\n    let labelText =\n      typeof label === \"undefined\" ? properties.name : label || \"\";\n    return (\n      <div className={`chart-node ${isGateway ? \"gateway\" : \"\"}`}>\n        <div className=\"node-header\">\n          <div className={`p-1 ${isSpecial ? \"special\" : \"\"}`}>\n            <p className=\"m-1\">\n              <span className=\"text-bold\">\n                {labelText || <span className=\"text-warning\">Empty Pod</span>}\n              </span>\n              <Badge variant=\"primary\" className=\"ml-2 mt-1 py-1 px-2\">\n                {properties.replicas}\n              </Badge>\n            </p>\n          </div>\n        </div>\n        {list.length > 0 && (\n          <div className=\"node-info border-top px-2\">{list}</div>\n        )}\n      </div>\n    );\n  };\n}\n\nexport default ChartNode;\n","import * as React from \"react\";\nimport { REACT_FLOW_CHART } from \"@mrblenny/react-flow-chart\";\nimport ChartNode from \"./ChartNode\";\n\nclass SidebarItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n  render = () => {\n    const { label, ports, properties } = this.props;\n    return (\n      <div\n        ref={this.ref}\n        className=\"mb-3 draggable-container\"\n        draggable={true}\n        onDragStart={(event) => {\n          event.dataTransfer.setData(\n            REACT_FLOW_CHART,\n            JSON.stringify({ label, ports, properties, type: \"hello world\" })\n          );\n        }}\n      >\n        <ChartNode node={{ properties }} />\n      </div>\n    );\n  };\n}\n\nexport default SidebarItem;\n","import React from \"react\";\nimport SidebarItem from \"./SidebarItem\";\nimport defaultPods from \"../../data/defaultPods.json\";\nimport lunr from \"lunr\";\nimport { Button, FormControl, Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\n\nclass FlowChartSidebar extends React.Component {\n  state = {\n    availableProperties: Store.getAvailableProperties(),\n    node: {},\n    searchResults: [],\n    searchQuery: \"\",\n  };\n\n  componentWillReceiveProps = (nextProps) => {\n    const { selected, nodes } = nextProps.chart;\n    const { id, type } = selected;\n\n    if (id === this.state.node.id) return;\n\n    this.setState({ searchResults: [], searchQuery: \"\" });\n    console.log(\"test\");\n\n    if (!id) return;\n\n    if (type === \"node\" && id !== this.state.node.id) {\n      const node = nodes[id];\n      this.setInitialNode(node);\n    }\n  };\n\n  setInitialNode = (node) => {\n    console.log(\"setInititailNode:\", node);\n    const properties = {};\n    const newProperties = {};\n    const label = node.label;\n\n    Object.keys(node.properties).forEach((key) => {\n      properties[key] = node.properties[key];\n    });\n\n    this.setState({ node: { label, id: node.id, properties, newProperties } });\n  };\n\n  updateLabel = (label) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.label = label;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateExistingValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.properties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  updateNewValue = (prop, value) => {\n    this.setState((prevState) => {\n      const { node } = prevState;\n      node.newProperties[prop] = value;\n      return { node };\n    }, this.saveChanges);\n  };\n\n  saveChanges = () => {\n    const { node } = this.state;\n    this.props.updateNode(node);\n    console.log(\"save changes: \", node);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.searchProperties);\n  };\n\n  searchProperties = () => {\n    const query = this.state.searchQuery;\n    console.log(\"search query: \", query);\n    if (!query) return this.setState({ searchResults: false });\n    this.indexProperties();\n    let searchResults = this.index.search(`${query} ${query}*`);\n    this.setState({ searchResults });\n    console.log(\"search results: \", searchResults);\n  };\n\n  indexProperties = () => {\n    const { availableProperties } = this.state;\n    console.log(\n      \"indexing\",\n      availableProperties.length,\n      \"properties for search\"\n    );\n    this.index = lunr(function () {\n      this.field(\"name\");\n\n      availableProperties.forEach((prop, idx) => {\n        prop.id = parseInt(idx);\n        this.add(prop);\n      });\n    });\n  };\n\n  renderEditNode = () => {\n    const {\n      availableProperties,\n      node,\n      searchQuery,\n      searchResults,\n    } = this.state;\n    let label =\n      typeof node.label === \"undefined\"\n        ? node.properties.name\n        : node.label || \"\";\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <div className=\"p-2 mb-1\">\n          <p className=\"mb-1\">\n            <b>Pod Name</b>\n          </p>\n          <FormControl\n            spellCheck={false}\n            value={label}\n            onChange={(e) => this.updateLabel(e.target.value)}\n            className=\"pod-name-input\"\n          />\n        </div>\n        <p className=\"mb-0 px-2\">\n          <b>Properties</b>\n        </p>\n        <div className=\"m-2\">\n          <FormControl\n            spellCheck={false}\n            placeholder=\"search properties...\"\n            value={searchQuery}\n            onChange={this.updateSearchQuery}\n          />\n        </div>\n        <div className=\"property-table flex-fill mx-2\">\n          {searchQuery && searchResults ? (\n            searchResults.map((result) => {\n              const property = availableProperties[result.ref];\n              const { name, type } = property;\n              const value = node.properties[name];\n\n              if (typeof value == \"undefined\")\n                return (\n                  <div key={name} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{name}</p>\n                    <FormControl\n                      spellCheck={false}\n                      placeholder={type}\n                      value={node.newProperties[name] || \"\"}\n                      onChange={(e) =>\n                        this.updateNewValue(name, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    ></FormControl>\n                  </div>\n                );\n              return (\n                <div key={name} className=\"property-item mb-2\">\n                  <p className=\"property-label mb-1\">{name}</p>\n                  <FormControl\n                    spellCheck={false}\n                    value={value || \"\"}\n                    onChange={(e) =>\n                      this.updateExistingValue(name, e.target.value)\n                    }\n                    className=\"property-value-input\"\n                  />\n                </div>\n              );\n            })\n          ) : (\n            <div>\n              {Object.keys(node.properties).map((prop) => {\n                const value = node.properties[prop];\n                if (prop === \"name\") return '';\n                return (\n                  <div key={prop} className=\"property-item mb-2\">\n                    <p className=\"property-label mb-1\">{prop}</p>\n                    <FormControl\n                      spellCheck={false}\n                      value={value || \"\"}\n                      onChange={(e) =>\n                        this.updateExistingValue(prop, e.target.value)\n                      }\n                      className=\"property-value-input\"\n                    />\n                  </div>\n                );\n              })}\n              {availableProperties.map((property) => \n                typeof node.properties[property.name] == \"undefined\"?\n                    <div key={property.name} className=\"property-item mb-2\">\n                      <p className=\"property-label mb-1\">{property.name}</p>\n                      <FormControl\n                        spellCheck={false}\n                        placeholder={property.type}\n                        value={node.newProperties[property.name] || \"\"}\n                        onChange={(e) =>\n                          this.updateNewValue(property.name, e.target.value)\n                        }\n                        className=\"property-value-input\"\n                      ></FormControl>\n                    </div>\n                  : \n                  ''\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Pod\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderEditLink = (link) => {\n    const { nodes, links } = this.props.chart;\n    const nodeFrom = nodes[link.from.nodeId];\n    const nodeTo = nodes[link.to.nodeId];\n\n    let choices = Object.keys(nodes).map((id) => {\n      return { label: nodes[id].label || nodes[id].properties.name, id };\n    });\n\n    console.log(\"links:\", links, \"\\nlink:\", link, \"\\nnodes:\", nodes);\n    return (\n      <div className=\"h-100 d-flex flex-column\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Edit Connection</b>\n        </h5>\n        <div className=\"flex-fill px-2\">\n          <div className=\"p-2 mb-1\">\n            <p className=\"mb-1\">\n              <b>From</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, e.target.value, nodeTo.id)\n              }\n              value={nodeFrom.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n            <p className=\"mb-1\">\n              <b>To</b>\n            </p>\n            <FormControl\n              className=\"mb-2\"\n              as=\"select\"\n              onChange={(e) =>\n                this.props.updateLink(link.id, nodeFrom.id, e.target.value)\n              }\n              value={nodeTo.id}\n            >\n              {choices.map((choice) => (\n                <option key={choice.id} value={choice.id}>\n                  {choice.label}\n                </option>\n              ))}\n            </FormControl>\n          </div>\n        </div>\n        <div className=\"p-2\">\n          <Button\n            variant=\"danger\"\n            className=\"w-100\"\n            onClick={this.props.deleteSelection}\n          >\n            Delete Connection\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  renderPodMenu = () => {\n    return (\n      <div className=\"d-flex flex-column h-100\">\n        <h5 className=\"px-3 py-2 mb-0 border-bottom\">\n          <b>Add Pods</b>\n        </h5>\n        <div className=\"p-3 scrollable flex-fill\">\n          <SidebarItem\n            ports={{\n              inPort: {\n                id: \"inPort\",\n                type: \"input\",\n              },\n              outPort: {\n                id: \"outPort\",\n                type: \"output\",\n              },\n            }}\n            properties={{}}\n          />\n          {defaultPods.map((pod) => (\n            <SidebarItem\n              ports={{\n                inPort: {\n                  id: \"inPort\",\n                  type: \"input\",\n                },\n                outPort: {\n                  id: \"outPort\",\n                  type: \"output\",\n                },\n              }}\n              properties={pod}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  render = () => {\n    const { selected, nodes, links } = this.props.chart;\n    const hasSelected = Object.keys(selected).length > 0;\n    return (\n      <Card className=\"flowchart-sidebar mb-4\">\n        {hasSelected\n          ? selected.type === \"link\"\n            ? this.renderEditLink(links[selected.id], nodes)\n            : this.renderEditNode(nodes[selected.id])\n          : this.renderPodMenu()}\n      </Card>\n    );\n  };\n}\n\nexport default FlowChartSidebar;\n","import React from \"react\";\n\nclass ChartNode extends React.Component {\n  render = () => {\n    return (\n      <div className=\"node-port\">\n        <i className=\"fa fa-chevron-down\" data-html2canvas-ignore=\"true\"></i>\n      </div>\n    );\n  };\n}\n\nexport default ChartNode;\n","import React from \"react\";\nimport { ButtonGroup, Dropdown, DropdownButton } from \"react-bootstrap\";\n\nclass ExampleSelection extends React.Component {\n  render = () => {\n    return (\n      <div className=\"example-selection\">\n        <DropdownButton\n          as={ButtonGroup}\n          title=\"Load Example\"\n          id=\"bg-nested-dropdown\"\n        >\n          <Dropdown.Item onClick={() => this.props.loadExample(\"pokedex\")}>\n            Pokedex\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => this.props.loadExample(\"southpark\")}>\n            South Park\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => this.props.loadExample(\"flower\")}>\n            Flower Search\n          </Dropdown.Item>\n        </DropdownButton>\n      </div>\n    );\n  };\n}\n\nexport default ExampleSelection;\n","import React from \"react\";\nimport { cloneDeep } from \"lodash\";\nimport { FlowChart } from \"@mrblenny/react-flow-chart\";\nimport * as actions from \"@mrblenny/react-flow-chart/src/container/actions\";\nimport { Container, Row, Card } from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport html2canvas from \"html2canvas\";\n\nimport CommandBar from \"../components/FlowChart/CommandBar\";\nimport Sidebar from \"../components/FlowChart/Sidebar\";\nimport CustomNode from \"../components/FlowChart/ChartNode\";\nimport CustomPort from \"../components/FlowChart/NodePort\";\nimport ExampleSelection from \"../components/FlowChart/ExampleSelection\";\nimport { formatAsYAML, copyToClipboard } from \"../helpers\";\n\nclass FlowTab extends React.Component {\n  constructor(props) {\n    super(props);\n    const chart = Store.getFlowchart();\n    const banner = Store.getBanner(\"flow\");\n    this.state = { chart, banner, showOverlay: false };\n\n    console.log(\"actions:\", actions);\n    this.stateActionCallbacks = Object.keys(actions).reduce((obj, key, idx) => {\n      obj[key] = (...args) => {\n        let { chart } = this.state;\n        let action = actions[key];\n        let newChartTransformer = action(...args);\n        let newChart = newChartTransformer(chart);\n        this.updateChart({ ...chart, ...newChart });\n        return newChart;\n      };\n      return obj;\n    }, {});\n  }\n\n  componentWillMount = () => {\n    Store.on(\"update-flowchart\", this.getData);\n    Store.on(\"update-ui\", this.getBanner);\n  };\n\n  componentDidMount = () => {\n    // document.addEventListener('contextmenu', (e)=>e.preventDefault())\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-flowchart\", this.getData);\n    Store.removeListener(\"update-ui\", this.getBanner);\n  };\n\n  exportImage = (extension = \"png\") => {\n    document.querySelector(\".capture-overlay\").classList.add(\"fade-out\");\n    this.showCaptureOverlay();\n    setTimeout(() => this.showCaptureOverlay(false), 500);\n    let canvasParams = {\n      foreignObjectRendering: true,\n      logging: true,\n      x: 0,\n      y: 0,\n      scrollX: 0,\n      scrollY: 0,\n      scale: 5,\n    };\n    html2canvas(document.querySelector(\".chart-container\"), canvasParams).then(\n      (canvas) => {\n        var image = canvas.toDataURL(`image/${extension}`);\n        var link = document.getElementById(\"download-link\");\n        link.setAttribute(\"download\", `jina-flow-visual.${extension}`);\n        link.setAttribute(\"href\", image);\n        link.click();\n      }\n    );\n  };\n\n  showCaptureOverlay = (showOverlay = true) => {\n    this.setState({ showOverlay });\n  };\n\n  getData = () => {\n    const chart = Store.getFlowchart();\n    this.updateChart(chart);\n  };\n\n  getBanner = () => {\n    const banner = Store.getBanner(\"flow\");\n    this.setState({ banner });\n  };\n\n  updateNode = (node, callback) => {\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n    console.log(\"newChart: \", newChart);\n    newChart.nodes[node.id].label = node.label;\n\n    let props = {\n      ...node.properties,\n      ...node.newProperties,\n    };\n\n    Object.keys(props).forEach((id) => {\n      if (props[id] === \"\" || typeof props[id] === \"undefined\") {\n        delete props[id];\n      }\n    });\n\n    newChart.nodes[node.id].properties = props;\n\n    this.updateChart({ ...chart, ...newChart });\n    return newChart.nodes[node.id];\n  };\n\n  updateLink = (linkId, fromId, toId) => {\n    if (fromId === toId) return;\n    let { chart } = this.state;\n    let newChart = cloneDeep(chart);\n\n    newChart.links[linkId].from.nodeId = fromId;\n    newChart.links[linkId].to.nodeId = toId;\n\n    this.updateChart({ ...chart, ...newChart });\n  };\n\n  cancelChanges = () => {\n    this.stateActionCallbacks.onCanvasClick({});\n  };\n\n  deleteSelection = () => {\n    this.stateActionCallbacks.onDeleteKey({});\n  };\n\n  updateChart = (chart) => {\n    this.setState({ chart });\n  };\n\n  selectNode = (data) => {\n    Dispatcher.dispatch({\n      actionType: Constants.SELECT_NODE,\n      payload: data.nodeId,\n    });\n  };\n\n  copyChartAsYAML = () => {\n    copyToClipboard(formatAsYAML(this.state.chart));\n    alert(\"Chart copied to clipboard as YAML\");\n  };\n\n  validateLink = ({ fromNodeId, toNodeId, fromPortId, toPortId, chart }) => {\n    if (fromPortId !== \"outPort\" || toPortId !== \"inPort\") return false;\n    if (fromNodeId === toNodeId) return false;\n    return true;\n  };\n\n  showImportModal = () => {\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal: \"import\" },\n    });\n  };\n\n  loadExample = (example) => {\n    Dispatcher.dispatch({\n      actionType: Constants.LOAD_EXAMPLE,\n      payload: example,\n    });\n  };\n\n  render = () => {\n    const { chart, banner, showOverlay } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        <div className=\"px-4\">\n          <a href=\"/#\" id=\"download-link\" style={{ display: \"hidden\" }}>\n            download\n          </a>\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Flow Design\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <div className=\"flow-container d-flex flex-column flex-md-row\">\n            <Card className=\"chart-section-container p-1 mr-md-4 mb-4\">\n              <ExampleSelection loadExample={this.loadExample} />\n              <CommandBar\n                copyChart={this.copyChartAsYAML}\n                importChart={this.showImportModal}\n                exportImage={this.exportImage}\n              />\n              <div className=\"chart-container\">\n                <div\n                  className=\"capture-overlay\"\n                  style={{ display: showOverlay ? \"\" : \"none\" }}\n                >\n                  <div className=\"capture-overlay-top\"></div>\n                  <div className=\"capture-overlay-bottom\"></div>\n                </div>\n                <FlowChart\n                  chart={chart}\n                  Components={{ NodeInner: CustomNode, Port: CustomPort }}\n                  callbacks={this.stateActionCallbacks}\n                  config={{\n                    validateLink: this.validateLink,\n                  }}\n                />\n              </div>\n            </Card>\n            <Sidebar\n              chart={chart}\n              cancelChanges={this.cancelChanges}\n              deleteSelection={this.deleteSelection}\n              updateNode={this.updateNode}\n              updateLink={this.updateLink}\n            />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n}\nexport default FlowTab;\n","import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nclass LogItem extends React.Component {\n  render = () => {\n    const { data } = this.props;\n    const { name, msg, levelname, process, formattedTimestamp, idx } = data;\n    let logName = String(name);\n    logName = logName.length > 20 ? logName.substring(0, 20) : logName;\n    let levelInitial = String(levelname)[0];\n    return (\n      <div\n        className={`log log-${String(\n          levelname\n        ).toLowerCase()} px-4 border-bottom py-1`}\n      >\n        <Row>\n          <Col\n            lg=\"2\"\n            md=\"3\"\n            className=\"log-prefix text-muted px-0 d-flex flex-row\"\n          >\n            <div className=\"text-bold mr-2\">{idx}</div>\n            <div className=\"ml-auto\">{formattedTimestamp}</div>\n          </Col>\n          <Col\n            lg=\"3\"\n            md=\"4\"\n            className=\"log-prefix px-0 text-left text-md-right text-bold\"\n          >\n            {logName}@{process}[{levelInitial}]:\n          </Col>\n          <Col sm=\"12\" md=\"5\" lg=\"7\" className=\"px-0\">\n            {msg}\n          </Col>\n        </Row>\n      </div>\n    );\n  };\n}\n\nexport default LogItem;\n","import React from \"react\";\nimport {\n  Card,\n  FormControl,\n  Row,\n  Col,\n  ButtonGroup,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport LogItem from \"./LogItem\";\nimport lunr from \"lunr\";\nimport { saveAs } from \"file-saver\";\nimport { Store } from \"../../flux\";\n\nimport List from \"react-virtualized/dist/commonjs/List\";\nimport AutoSizer from \"react-virtualized/dist/commonjs/AutoSizer\";\nimport CellMeasurer, {\n  CellMeasurerCache,\n} from \"react-virtualized/dist/commonjs/CellMeasurer\";\n\nclass StreamContainer extends React.Component {\n  _cache = new CellMeasurerCache({ defaultHeight: 10, fixedWidth: true });\n  _resultsCache = new CellMeasurerCache({\n    defaultHeight: 10,\n    fixedWidth: true,\n  });\n\n  _mostRecentWidth = 0;\n  _mostRecentHeight = 0;\n  _resizeAllFlag = false;\n  _startIndex = 0;\n  _scrollIndex = 0;\n  _scrollTop = 0;\n  _scrolledToBottom = true;\n\n  state = {\n    allLogs: Store.getLogs(),\n    logs: Store.getLogs(),\n    sources: Store.getLogSources(),\n    levels: Store.getLogLevels(),\n    searchQuery: \"\",\n    prevQuery: \"\",\n    results: [],\n    showHelper: false,\n    selectedSource: false,\n    selectedLevel: false,\n  };\n\n  componentWillMount = () => {\n    Store.on(\"update-logs\", this.getData);\n    Store.on(\"show-log\", this.getIndexedLog);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-logs\", this.getData);\n    Store.removeListener(\"show-log\", this.getIndexedLog);\n  };\n\n  downloadLogs = (format) => {\n    let logs = this.state.allLogs;\n    let content = \"\";\n    if (format === \"json\") content = \"[\\n\";\n    else if (format === \"csv\")\n      content =\n        \"created,formatted timestamp,name,process,level name,message,filename,line number,module,funcname,pathname\\n\";\n\n    for (let i = 0; i < logs.length; ++i) {\n      let log = logs[i];\n      if (format === \"json\")\n        content +=\n          JSON.stringify(logs[i]) + `${i < logs.length - 1 ? \",\" : \"\"}\\n`;\n      else if (format === \"csv\")\n        content += `${log.created},\"${log.formattedTimestamp}\",${log.name},${log.process},${log.levelname},\"${log.msg}\",${log.filename},${log.lineno},${log.module},${log.funcname},${log.pathname}\\n`;\n      else\n        content += `${log.formattedTimestamp} ${log.name}@${log.process} [${log.levelname}]: ${log.msg}\\n`;\n    }\n    if (format === \"json\") content += \"]\";\n\n    let filename = `jina-logs-${new Date()}.${format}`;\n    let blob = new Blob([content], { type: \"text,plain;charset=utf-8\" });\n    saveAs(blob, filename);\n  };\n\n  componentDidMount = () => {\n    setTimeout(() => {\n      if (this._list) {\n        this._resizeAll();\n        this.backToBottom();\n      }\n    }, 1);\n  };\n\n  getData = () => {\n    const allLogs = Store.getLogs();\n    const sources = Store.getLogSources();\n    const levels = Store.getLogLevels();\n    this.setState({ sources, levels, allLogs }, this.filterLogs);\n    if (this._scrolledToBottom && this._list) this.scrollToBottom();\n  };\n\n  getIndexedLog = () => {\n    const index = Store.getIndexedLog();\n    const selectedSource = false;\n    const selectedLevel = false;\n    const logs = this.state.allLogs;\n    this.setState({ selectedSource, selectedLevel, logs });\n    console.log(\"scrolling to index: \", index);\n    this.scrollToLog(index);\n  };\n\n  filterLogs = () => {\n    let { allLogs, selectedSource, selectedLevel } = this.state;\n    if (selectedSource === \"false\") selectedSource = false;\n    if (selectedLevel === \"false\") selectedLevel = false;\n\n    if (!selectedSource && !selectedLevel)\n      return this.setState({ logs: allLogs });\n    let logs = allLogs.filter((log) => {\n      if (selectedSource && selectedLevel)\n        return log.levelname === selectedLevel && log.name === selectedSource;\n      else if (selectedSource) return log.name === selectedSource;\n      else if (selectedLevel) return log.levelname === selectedLevel;\n      return false;\n    });\n\n    this.setState({ logs }, this._resizeAll);\n  };\n\n  setSelectedSource = (selectedSource) => {\n    this.setState({ selectedSource }, this.filterLogs);\n  };\n\n  setSelectedLevel = (selectedLevel) => {\n    this.setState({ selectedLevel }, this.filterLogs);\n  };\n\n  search = () => {\n    const query = this.state.searchQuery;\n    console.log(\"search query: \", query);\n    if (!query) return this.setState({ results: false }, this._resizeAll);\n    this.indexLogs();\n    let results = this.index.search(`${query}*`);\n    this.setState({ results }, this._resizeSearchResults);\n    console.log(\"search results: \", results);\n  };\n\n  listenForEnter = (key) => {\n    if (parseInt(key.charCode) === 13) {\n      this.search();\n    }\n  };\n\n  indexLogs = () => {\n    const { logs } = this.state;\n    console.log(\"indexing\", logs.length, \"logs for search\");\n    this.index = lunr(function () {\n      this.field(\"filename\");\n      this.field(\"funcName\");\n      this.field(\"msg\");\n      this.field(\"name\");\n      this.field(\"module\");\n      this.field(\"pathname\");\n\n      logs.forEach((log, idx) => {\n        log.id = parseInt(idx);\n        this.add(log);\n      });\n    });\n  };\n\n  scrollToLog = (index) => {\n    this._list.scrollToRow(index);\n  };\n\n  scrollToBottom = () => {\n    this._list.scrollToRow(this.state.logs.length);\n    this._scrolledToBottom = true;\n  };\n\n  scrollToBottomResults = () => {\n    this._resultsList.scrollToRow(this.state.results.length);\n    this._scrolledToBottom = true;\n  };\n\n  backToBottom = () => {\n    this.scrollToBottom();\n    setTimeout(this.scrollToBottom, 1);\n  };\n\n  updateSearchQuery = (e) => {\n    this.setState({ searchQuery: e.target.value }, this.search);\n  };\n\n  clearSearchResults = () => {\n    this.setState({\n      results: false,\n      searchQuery: \"\",\n    });\n  };\n\n  renderSearchResults = () => {\n    const { results } = this.state;\n    return (\n      <AutoSizer>\n        {({ height, width }) => {\n          if (this._mostRecentWidth !== width) {\n            this._mostRecentWidth = width;\n            setTimeout(this._resizeSearchResults, 0);\n          }\n          if (this._mostRecentHeight !== height) {\n            this._mostRecentHeight = height;\n            setTimeout(this._resizeSearchResults, 0);\n          }\n          return (\n            <List\n              width={width}\n              height={height}\n              ref={(ref) => (this._resultsList = ref)}\n              deferredMeasurementCache={this._resultsCache}\n              rowHeight={this._resultsCache.rowHeight}\n              rowCount={results.length}\n              rowRenderer={this.renderSearchResultRow}\n            />\n          );\n        }}\n      </AutoSizer>\n    );\n  };\n\n  renderLogRow = ({ index, isScrolling, key, parent, style }) => {\n    const log = this.state.logs[index];\n    return (\n      <CellMeasurer\n        cache={this._cache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <div\n          style={{\n            ...style,\n            wordBreak: \"break-word\",\n          }}\n        >\n          <LogItem index={index} data={log} />\n        </div>\n      </CellMeasurer>\n    );\n  };\n\n  renderSearchResultRow = ({ index, isScrolling, key, parent, style }) => {\n    const result = this.state.results[index];\n    const log = this.state.logs[result.ref];\n    return (\n      <CellMeasurer\n        cache={this._resultsCache}\n        columnIndex={0}\n        key={key}\n        parent={parent}\n        rowIndex={index}\n      >\n        <div\n          style={{\n            ...style,\n            wordBreak: \"break-word\",\n          }}\n        >\n          <LogItem data={log} />\n        </div>\n      </CellMeasurer>\n    );\n  };\n\n  render = () => {\n    const {\n      results,\n      searchQuery,\n      logs,\n      showHelper,\n      sources,\n      levels,\n    } = this.state;\n    return (\n      <Card className=\"mb-4\">\n        <Card.Header className=\"p-3\">\n          <Row>\n            <Col md=\"8\" xs=\"6\">\n              <FormControl\n                as=\"select\"\n                onChange={(e) => this.setSelectedSource(e.target.value)}\n                className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              >\n                <option value={false}>All Logs</option>\n                {Object.keys(sources).map((source) => (\n                  <option key={source} value={source}>\n                    {source}\n                  </option>\n                ))}\n              </FormControl>\n              <FormControl\n                as=\"select\"\n                onChange={(e) => this.setSelectedLevel(e.target.value)}\n                className=\"logstream-select mb-2 mr-0 mb-md-0 mr-md-2\"\n              >\n                <option value={false}>All Levels</option>\n                {Object.keys(levels).map((level) => (\n                  <option key={level} value={level}>\n                    {level}\n                  </option>\n                ))}\n              </FormControl>\n              <DropdownButton\n                as={ButtonGroup}\n                title=\"Download Logs\"\n                id=\"bg-nested-dropdown\"\n              >\n                <Dropdown.Item onClick={() => this.downloadLogs(\"csv\")}>\n                  Download as CSV\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => this.downloadLogs(\"json\")}>\n                  Download as JSON\n                </Dropdown.Item>\n                <Dropdown.Item onClick={() => this.downloadLogs(\"txt\")}>\n                  Download as TXT\n                </Dropdown.Item>\n              </DropdownButton>\n            </Col>\n            <Col md=\"4\" xs=\"6\">\n              <FormControl\n                placeholder=\"search logs...\"\n                onKeyPress={this.listenForEnter}\n                onChange={this.updateSearchQuery}\n                value={searchQuery}\n              />\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body\n          className=\"log-stream-container p-1 border-top\"\n          id=\"log-stream-container\"\n        >\n          {searchQuery && results ? (\n            \"\"\n          ) : (\n            <div\n              onClick={this.backToBottom}\n              className={`back-to-bottom ${showHelper && \"active\"}`}\n            >\n              <i className=\"material-icons\">arrow_downward</i> Back to Bottom\n            </div>\n          )}\n          {searchQuery && results ? (\n            this.renderSearchResults()\n          ) : (\n            <AutoSizer>\n              {({ height, width }) => {\n                if (this._mostRecentWidth !== width) {\n                  this._mostRecentWidth = width;\n                  setTimeout(this._resizeAll, 0);\n                  setTimeout(this.backToBottom, 1);\n                }\n                if (this._mostRecentHeight !== height) {\n                  this._mostRecentHeight = height;\n                  setTimeout(this._resizeAll, 0);\n                  setTimeout(this.backToBottom, 1);\n                }\n                return (\n                  <List\n                    width={width}\n                    height={height}\n                    ref={(ref) => (this._list = ref)}\n                    deferredMeasurementCache={this._cache}\n                    rowHeight={this._cache.rowHeight}\n                    rowCount={logs.length}\n                    rowRenderer={this.renderLogRow}\n                    onScroll={this._onScroll}\n                    scrollToAlignment=\"center\"\n                  />\n                );\n              }}\n            </AutoSizer>\n          )}\n        </Card.Body>\n      </Card>\n    );\n  };\n\n  _onRowsRendered = (data, cb) => {\n    const { startIndex } = data;\n    this._startIndex = startIndex;\n  };\n\n  _onScroll = (data) => {\n    const { scrollTop, scrollHeight, clientHeight } = data;\n    this._scrollTop = scrollTop;\n    let difference = scrollHeight - (scrollTop + clientHeight);\n\n    if (difference < 10) this._scrolledToBottom = true;\n    else {\n      this._scrolledToBottom = false;\n    }\n\n    if (difference > 75 && !this.state.showHelper)\n      this.setState({ showHelper: true });\n    else if (difference <= 75 && this.state.showHelper)\n      this.setState({ showHelper: false });\n  };\n\n  _resizeAll = () => {\n    this._resizeAllFlag = false;\n    this._cache.clearAll();\n    if (this._list) {\n      this._list.recomputeRowHeights();\n    }\n  };\n\n  _resizeSearchResults = () => {\n    this._resizeAllFlag = false;\n    this._resultsCache.clearAll();\n    if (this._resultsList) {\n      this._resultsList.recomputeRowHeights();\n    }\n  };\n}\n\nexport default StreamContainer;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = {\n  INFO: {\n    border: \"#009999\",\n    background: \"rgba(0, 153, 153, 0.9)\",\n  },\n  SUCCESS: {\n    border: \"#32c8cd\",\n    background: \"rgba(50, 200, 205, 0.9)\",\n  },\n  WARNING: {\n    border: \"#ffcc66\",\n    background: \"rgba(255, 204, 102, 0.9)\",\n  },\n  ERROR: {\n    border: \"#ff6666\",\n    background: \"rgba(255, 102, 102, 0.9)\",\n  },\n  CRITICAL: {\n    border: \"#ff4540\",\n    background: \"rgba(255, 70, 64, 0.9)\",\n  },\n  DEBUG: {\n    border: \"#6E7278\",\n    background: \"rgba(110, 114, 120, 0.9)\",\n  },\n};\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const chartOptions = {\n      events: [\"click\"],\n      onClick: this.onClick,\n      maintainAspectRatio: true,\n      responsive: true,\n      legend: {\n        position: \"bottom\",\n        labels: {\n          padding: 10,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        enabled: false,\n        custom: false,\n      },\n      elements: {\n        point: {\n          radius: 0,\n          hitRadius: 10,\n        },\n      },\n      scales: {\n        xAxes: [\n          {\n            gridLines: false,\n            color: \"red\",\n            ticks: {\n              display: false,\n            },\n          },\n        ],\n        yAxes: [\n          {\n            gridLines: {\n              borderDash: [2.5, 5],\n              // zeroLineBorderDash: [5,5],\n              zeroLineColor: \"#6c757d\",\n              drawBorder: false,\n              color: \"#6c757d\",\n            },\n            ticks: {\n              padding: 5,\n              suggestedMin: 0,\n            },\n          },\n        ],\n      },\n    };\n\n    const chartConfig = {\n      onClick: this.onClick,\n      type: \"line\",\n      labels: this.getLabels(60),\n      data: {\n        datasets: Object.keys(data).map((level) => {\n          const chartData = data[level];\n          return {\n            label: level,\n            fill: \"start\",\n            borderWidth: 1.5,\n            borderColor: _colors[level].border,\n            backgroundColor: _colors[level].background,\n            data: chartData,\n          };\n        }),\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  onClick = (e) => {\n    const activePoints = this.chart.getElementsAtEvent(e);\n    this.props.onClick(activePoints);\n  };\n\n  getLabels = (amount) => {\n    const labels = [];\n    for (let i = 0; i < amount; ++i) {\n      labels.push(i);\n    }\n    return labels;\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const chartData = {\n      labels: this.getLabels(60),\n      datasets: Object.keys(data).map((level) => {\n        const chartData = data[level];\n        return {\n          label: level,\n          fill: \"start\",\n          borderWidth: 1.5,\n          borderColor: _colors[level].border,\n          backgroundColor: _colors[level].background,\n          data: chartData,\n        };\n      }),\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 10}\n          width={width || 100}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default Chart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store, Dispatcher, Constants } from \"../../flux\";\nimport ChartBase from \"./ChartBase\";\n\nclass SummaryChart extends React.Component {\n  state = {\n    chartData: Store.getSummaryCharts(),\n  };\n  componentWillMount = () => {\n    Store.on(\"update-summary-chart\", this.getData);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  showLog = (activePoints) => {\n    let index = activePoints[0] && activePoints[0]._index;\n    if (index && typeof index !== \"undefined\");\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_LOG_AT_INDEX,\n      payload: index,\n    });\n  };\n\n  getData = () => {\n    const chartData = Store.getSummaryCharts();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Body className=\"d-none d-md-block pb-2\">\n          <ChartBase\n            data={chartData}\n            height={10}\n            width={70}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n        <Card.Body className=\"d-md-none pb-2\">\n          <ChartBase\n            data={chartData}\n            height={20}\n            width={50}\n            onClick={this.showLog}\n          />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default SummaryChart;\n","import React from \"react\";\nimport ChartElement from \"chart.js\";\n\nconst _colors = [\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.85)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.75)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.65)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.55)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.45)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.35)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.25)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.15)\",\n  },\n  {\n    border: \"#fff\",\n    background: \"rgba(0, 153, 153, 0.05)\",\n  },\n];\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    this.renderChart();\n  };\n\n  getColor = (index) => {\n    let color = false;\n    while (!color) {\n      if (_colors[index]) color = _colors[index];\n      else index -= _colors.length;\n    }\n    return color;\n  };\n\n  renderChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartOptions = {\n      legend: {\n        display: false,\n        position: \"bottom\",\n        labels: {\n          padding: 25,\n          boxWidth: 20,\n        },\n      },\n      tooltips: {\n        custom: false,\n        mode: \"index\",\n        position: \"nearest\",\n      },\n    };\n\n    const chartConfig = {\n      type: \"pie\",\n      labels: names,\n      data: {\n        datasets: [\n          {\n            borderWidth: 1,\n            data: names.map((name) => data[name]),\n            borderColor: names.map((name, idx) => this.getColor(idx).border),\n            backgroundColor: names.map(\n              (name, idx) => this.getColor(idx).background\n            ),\n          },\n        ],\n      },\n      options: chartOptions,\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new ChartElement(this.canvasRef.current, chartConfig);\n  };\n\n  updateChart = () => {\n    const { data } = this.props;\n    const names = Object.keys(data);\n    const chartData = {\n      labels: names,\n      datasets: [\n        {\n          borderWidth: 1,\n          data: names.map((name) => data[name]),\n          borderColor: names.map((name, idx) => this.getColor(idx).border),\n          backgroundColor: names.map(\n            (name, idx) => this.getColor(idx).background\n          ),\n        },\n      ],\n    };\n    this.chart.data = chartData;\n    this.chart.options.animation = false;\n    this.chart.update();\n  };\n\n  render = () => {\n    if (this.canvasRef.current && this.chart) this.updateChart();\n    const { width, height } = this.props;\n    return (\n      <div className=\"graph-container\">\n        <canvas\n          height={height || 50}\n          width={width || 50}\n          ref={this.canvasRef}\n        />\n      </div>\n    );\n  };\n}\n\nexport default Chart;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Store } from \"../../flux\";\nimport ChartBase from \"./PieChart\";\n\nclass OccurenceChart extends React.Component {\n  state = {\n    chartData: Store.getOccurencesByName(),\n  };\n  componentWillMount = () => {\n    Store.on(\"update-summary-chart\", this.getData);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-summary-chart\", this.getData);\n  };\n\n  getData = () => {\n    const chartData = Store.getOccurencesByName();\n    this.setState({ chartData });\n  };\n\n  render = () => {\n    const { chartData } = this.state;\n    return (\n      <Card className=\"h-100\">\n        <Card.Body>\n          <ChartBase data={chartData} />\n        </Card.Body>\n      </Card>\n    );\n  };\n}\n\nexport default OccurenceChart;\n","import React from \"react\";\nimport { Container, Row, Col} from \"react-bootstrap\";\nimport {Store } from \"../flux\";\nimport LogStream from \"../components/LogStream/LogStream\";\nimport SummaryChart from \"../components/LogStream/SummaryChart\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport OccurenceChart from \"../components/LogStream/OccurenceChart\";\n\nclass LogsView extends React.Component {\n  state = {\n    banner: Store.getBanner(\"logs\"),\n  };\n  componentWillMount = () => {\n    Store.on(\"update-ui\", this.getData);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n  };\n  getData = () => {\n    const banner = Store.getBanner(\"logs\");\n    this.setState({ banner });\n  };\n  render = () => {\n    const { banner } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Log Stream\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"10\" className=\"mb-4\">\n              <SummaryChart />\n            </Col>\n            <Col md=\"2\" className=\"mb-4\">\n              <OccurenceChart />\n            </Col>\n          </Row>\n          <LogStream />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default LogsView;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nclass ElapsedCard extends React.Component {\n  render() {\n    const { elapsed } = this.props;\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center mb-0\">\n          <b>{elapsed.task_name}</b>\n        </h6>\n        <h2 className=\"my-3 mx-auto\">{elapsed.seconds}</h2>\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          Elapsed Time\n        </h6>\n      </Card>\n    );\n  }\n}\n\nexport default ElapsedCard;\n","import React from \"react\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SingleGoal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"doughnut\",\n      data: {\n        datasets: [\n          {\n            hoverBorderColor: \"#fff\",\n            data: [0, 100],\n            backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n          },\n        ],\n        labels: [\"Label 1\", \"Label 2\"],\n      },\n      options: {\n        legend: false,\n        responsive: false,\n        cutoutPercentage: 70,\n        animation: false,\n        tooltips: false,\n      },\n    });\n  }\n\n  updateChart = () => {\n    const { progress } = this.props;\n    const percent = (progress.num_bars / progress.bar_len || 1) * 100;\n    let newData = {\n      datasets: [\n        {\n          hoverBorderColor: \"#fff\",\n          data: [percent, 100 - percent],\n          backgroundColor: [\"#32c8cd\", \"#E9ECEF\"],\n        },\n      ],\n      labels: [\"Label 1\", \"Label 2\"],\n    };\n    this.chart.data = newData;\n    this.chart.update();\n  };\n\n  render() {\n    const { progress } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"p-3 h-100\">\n        <h6 className=\"stats-small__label text-uppercase text-center\">\n          <b>Progress</b>\n        </h6>\n        <div className=\"go-stats__chart mx-auto d-flex flex-row\">\n          <div className=\"mr-4 mt-3\">\n            <h6 className=\"stats-small__label text-uppercase text-center\">\n              Request\n            </h6>\n            <h4 className=\"mb-0\">{progress.currentRequest}</h4>\n          </div>\n\n          <canvas\n            ref={this.canvasRef}\n            style={{ width: \"100px\", height: \"100px\" }}\n            className=\"my-auto\"\n          />\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default SingleGoal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass SpeedCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.speed;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n                borderColor: \"#009999\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.speed;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n            borderColor: \"#009999\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { speed } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>Speed</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{speed.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            {speed.unit}/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nSpeedCard.propTypes = {\n  /**\n   * The goal object.\n   */\n  goal: PropTypes.object,\n};\n\nSpeedCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(0, 153, 153, 0.25)\",\n      borderColor: \"#009999\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default SpeedCard;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  ButtonGroup,\n  Button,\n} from \"shards-react\";\nimport { formatBytes } from \"../../helpers\";\nimport Chart from \"chart.js\";\n\nclass ProcessReport extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.legendRef = React.createRef();\n    this.canvasRef = React.createRef();\n    this.state = {\n      tab: \"messages\",\n    };\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (this.props.lastUpdate !== prevProps.lastUpdate) this.updateChart();\n  };\n\n  componentDidMount = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n\n    const chartOptions = {\n      ...{\n        // legend: false,\n        // Uncomment the next line in order to disable the animations.\n        animation: false,\n        tooltips: {\n          callbacks: {\n            title: function (tooltipItem, data) {\n              return `Pod: ${tooltipItem[0].xLabel}`;\n            },\n            label: (tooltipItem, data) => {\n              let { tab } = this.state;\n              let label = `${data.datasets[tooltipItem.datasetIndex].label}: ${\n                tab === \"bytes\"\n                  ? formatBytes(tooltipItem.value)\n                  : tooltipItem.value\n              }`;\n              return label;\n            },\n            afterLabel: (tooltipItem, data) => {\n              let { tab } = this.state;\n              const chartData = this.props[tab];\n              let text =\n                \"\\nProcess ID: \" + chartData[tooltipItem.index].process;\n              return text;\n            },\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              stacked: true,\n              gridLines: false,\n            },\n          ],\n          yAxes: [\n            {\n              stacked: true,\n              ticks: {\n                userCallback: this.formatYAxisLabel,\n              },\n            },\n          ],\n        },\n      },\n    };\n\n    this.chart = new Chart(this.canvasRef.current, {\n      type: \"bar\",\n      options: chartOptions,\n      data: {\n        labels: chartData.map((d) => d.node),\n        datasets: [\n          {\n            label: \"msg sent\",\n            fill: \"start\",\n            data: chartData.map((d) => d.sent),\n            backgroundColor: \"#009999\",\n            borderColor: \"#009999\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#009999\",\n            borderWidth: 1.5,\n          },\n          {\n            label: \"msg received\",\n            fill: \"start\",\n            data: chartData.map((d) => d.received),\n            backgroundColor: \"#32C8CD\",\n            borderColor: \"#32C8CD\",\n            pointBackgroundColor: \"#FFFFFF\",\n            pointHoverBackgroundColor: \"#32C8CD\",\n            borderWidth: 1.5,\n          },\n        ],\n      },\n    });\n  };\n\n  updateChart = () => {\n    const { tab } = this.state;\n    const chartData = this.props[tab];\n    this.chart.data = {\n      labels: chartData.map((d) => d.node),\n      datasets: [\n        {\n          label: `${tab} sent`,\n          fill: \"start\",\n          data: chartData.map((d) => d.sent),\n          backgroundColor: \"#009999\",\n          borderColor: \"#009999\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#009999\",\n          borderWidth: 1.5,\n        },\n        {\n          label: `${tab} received`,\n          fill: \"start\",\n          data: chartData.map((d) => d.received),\n          backgroundColor: \"#32C8CD\",\n          borderColor: \"#32C8CD\",\n          pointBackgroundColor: \"#FFFFFF\",\n          pointHoverBackgroundColor: \"#32C8CD\",\n          borderWidth: 1.5,\n        },\n      ],\n    };\n    this.chart.update();\n  };\n\n  formatYAxisLabel = (label) => {\n    const { tab } = this.state;\n    if (tab === \"bytes\") return formatBytes(label);\n    return label > 999 ? `${(label / 1000).toFixed(0)}k` : label;\n  };\n\n  setTab = (tab) => {\n    this.setState({ tab }, this.updateChart);\n  };\n\n  render() {\n    const { tab } = this.state;\n    return (\n      <Card small className=\"h-100 mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Network Load</h6>\n        </CardHeader>\n\n        <CardBody className=\"pt-0\">\n          <Row className=\"border-bottom py-2 bg-light\">\n            <Col sm=\"6\" className=\"col d-flex mb-2 mb-sm-0\">\n              <ButtonGroup>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"messages\"}\n                  onClick={() => this.setTab(\"messages\")}\n                >\n                  Messages\n                </Button>\n                <Button\n                  theme=\"white\"\n                  active={tab === \"bytes\"}\n                  onClick={() => this.setTab(\"bytes\")}\n                >\n                  Bytes\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n          {/* <div ref={this.legendRef} /> */}\n          <canvas\n            height=\"100\"\n            ref={this.canvasRef}\n            style={{ maxWidth: \"100% !important\" }}\n            className=\"sales-overview-sales-report\"\n          />\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nexport default ProcessReport;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"shards-react\";\n\nimport Chart from \"chart.js\";\n\nclass QPSCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { history } = this.props.qps;\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n    const chartOptions = {\n      ...{\n        maintainAspectRatio: true,\n        responsive: true,\n        animation: false,\n        legend: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n          custom: false,\n        },\n        elements: {\n          point: {\n            radius: 0,\n          },\n          line: {\n            tension: 0.33,\n          },\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: false,\n              ticks: {\n                display: false,\n              },\n            },\n          ],\n          yAxes: [\n            {\n              gridLines: false,\n              scaleLabel: false,\n              ticks: {\n                display: false,\n                // Avoid getting the graph line cut of at the top of the canvas.\n                // Chart.js bug link: https://github.com/chartjs/Chart.js/issues/4790\n                suggestedMax: maxValue + difference * 0.1,\n                suggestedMin: minValue - difference * 0.1,\n              },\n            },\n          ],\n        },\n      },\n      ...this.props.chartOptions,\n    };\n\n    const chartConfig = {\n      ...{\n        type: \"line\",\n        data: {\n          ...{\n            labels: new Array(history.length).fill(null),\n          },\n          ...{\n            datasets: [\n              {\n                label: \"Today\",\n                fill: \"start\",\n                borderWidth: 1.5,\n                backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n                borderColor: \"#32c8cd\",\n                data: history,\n              },\n            ],\n          },\n        },\n        options: chartOptions,\n      },\n      ...this.props.chartConfig,\n    };\n\n    this.chart = new Chart(this.canvasRef.current, chartConfig);\n  }\n\n  updateChart = () => {\n    const { history } = this.props.qps;\n    let newChartData = {\n      ...this.chart.data,\n      ...{\n        datasets: [\n          {\n            label: \"Today\",\n            fill: \"start\",\n            borderWidth: 1.5,\n            backgroundColor: \"rgba(50, 200, 205, 0.25)\",\n            borderColor: \"#32c8cd\",\n            data: history,\n          },\n        ],\n      },\n    };\n    let maxValue = Math.max(...history);\n    let minValue = Math.min(...history);\n\n    let difference = maxValue - minValue;\n\n    this.chart.options.scales.yAxes[0].ticks.suggestedMax =\n      maxValue + difference * 0.1;\n    this.chart.options.scales.yAxes[0].ticks.suggestedMin =\n      minValue - difference * 0.1;\n    this.chart.data = newChartData;\n    this.chart.update();\n  };\n\n  render() {\n    const { qps } = this.props;\n    if (this.chart) this.updateChart();\n    return (\n      <Card className=\"pt-0 h-100 stats-small\">\n        <div className=\"stats-small__data mx-auto\">\n          <h6 className=\"stats-small__label text-uppercase text-center mb-0 pt-0 mt-0\">\n            <b>QPS</b>\n          </h6>\n          <h2 className=\"my-3 mx-auto\">{qps.current}</h2>\n          <h6 className=\"stats-small__label under text-uppercase text-center\">\n            Queries/Second\n          </h6>\n        </div>\n        <canvas height=\"100\" ref={this.canvasRef} className={`stats-small-1`} />\n      </Card>\n    );\n  }\n}\n\nQPSCard.propTypes = {\n  /**\n   * The goal object.\n   */\n  goal: PropTypes.object,\n};\n\nQPSCard.defaultProps = {\n  label: \"New Customers\",\n  value: \"29\",\n  percentage: \"2.71%\",\n  increase: false,\n  decrease: true,\n  chartLabels: [null, null, null, null, null, null, null],\n  chartData: [\n    {\n      label: \"Today\",\n      fill: \"start\",\n      borderWidth: 1.5,\n      backgroundColor: \"rgba(#32c8cd, 0.25)\",\n      borderColor: \"#32c8cd\",\n      data: [1, 7, 1, 3, 1, 4, 8],\n    },\n  ],\n};\n\nexport default QPSCard;\n","import React from \"react\";\nimport { Container, Row, Col} from \"react-bootstrap\";\nimport {Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ElapsedCard from \"../components/Task/ElapsedCard\";\nimport ProgressCard from \"../components/Task/ProgressCard\";\nimport SpeedCard from \"../components/Task/SpeedCard\";\nimport BarChartCard from \"../components/Task/BarChartCard\";\nimport QueriesPerSecond from \"../components/Task/QueriesPerSecond\";\n\nclass TaskView extends React.Component {\n  state = {\n    taskData: Store.getTaskData(),\n    banner: Store.getBanner(\"task\"),\n  };\n  componentWillMount = () => {\n    Store.on(\"update-task\", this.getData);\n    Store.on(\"update-ui\", this.getBanner);\n  };\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-task\", this.getData);\n    Store.removeListener(\"update-ui\", this.getBanner);\n  };\n  getData = () => {\n    const taskData = Store.getTaskData();\n    this.setState({ taskData });\n  };\n  getBanner = () => {\n    const banner = Store.getBanner(\"task\");\n    this.setState({ banner });\n  };\n  render = () => {\n    const { taskData, banner } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        <div className=\"px-4\">\n          <Row noGutters className=\"page-header py-4\">\n            <PageTitle\n              title=\"Task\"\n              subtitle=\"Network\"\n              className=\"text-sm-left mb-3\"\n            />\n          </Row>\n          <Row>\n            <Col md=\"3\" className=\"mb-4\">\n              <ElapsedCard elapsed={taskData.elapsed} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <ProgressCard progress={taskData.progress} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <QueriesPerSecond qps={taskData.qps} />\n            </Col>\n            <Col md=\"3\" className=\"mb-4\">\n              <SpeedCard speed={taskData.speed} />\n            </Col>\n          </Row>\n          <BarChartCard\n            messages={taskData.messages}\n            bytes={taskData.bytes}\n            lastUpdate={taskData.lastUpdateChart}\n          />\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default TaskView;\n","import React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Row,\n  Col,\n  Form,\n  FormInput,\n  Button,\n} from \"shards-react\";\n\nimport { Store, Dispatcher, Constants } from \"../../flux\";\n\nclass SettingsCard extends React.Component {\n  state = {\n    original: Store.getSettings(),\n    updates: {},\n  };\n\n  componentWillMount = () => {\n    Store.on(\"update-settings\", this.getData);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-settings\", this.getData);\n  };\n\n  getData = () => {\n    const original = Store.getSettings();\n    this.setState({ original, updates: {} });\n  };\n\n  updateSetting = (setting, value) => {\n    this.setState((prevState) => {\n      let { updates } = prevState;\n      updates[setting] = value;\n      return { updates };\n    });\n    console.log(\"updates: \", this.state.updates);\n  };\n\n  saveChanges = () => {\n    const { original, updates } = this.state;\n\n    const settings = { ...original, ...updates };\n\n    Dispatcher.dispatch({\n      actionType: Constants.SAVE_SETTINGS,\n      payload: settings,\n    });\n  };\n\n  render = () => {\n    const { original, updates } = this.state;\n    return (\n      <Card small className=\"mb-4\">\n        <CardHeader className=\"border-bottom\">\n          <h6 className=\"m-0\">Connection Preferences</h6>\n        </CardHeader>\n        <CardBody>\n          <Form>\n            <Row form>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Host</label>\n                <FormInput\n                  placeholder=\"0.0.0.0\"\n                  value={\"host\" in updates ? updates.host : original.host}\n                  onChange={(e) => this.updateSetting(\"host\", e.target.value)}\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Port</label>\n                <FormInput\n                  placeholder=\"5000\"\n                  value={\"port\" in updates ? updates.port : original.port}\n                  onChange={(e) => this.updateSetting(\"port\", e.target.value)}\n                />\n              </Col>\n            </Row>\n            <strong class=\"text-muted d-block mb-3\">Endpoints</strong>\n            <Row form>\n              {/* Email */}\n              <Col md=\"6\" className=\"form-group\">\n                <label>Log</label>\n                <FormInput\n                  placeholder=\"/stream/log\"\n                  value={\"log\" in updates ? updates.log : original.log}\n                  onChange={(e) => this.updateSetting(\"log\", e.target.value)}\n                />\n              </Col>\n              {/* Password */}\n              <Col md=\"6\" className=\"form-group\">\n                <label>Profile</label>\n                <FormInput\n                  placeholder=\"/stream/profile\"\n                  value={\n                    \"profile\" in updates ? updates.profile : original.profile\n                  }\n                  onChange={(e) =>\n                    this.updateSetting(\"profile\", e.target.value)\n                  }\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>YAML</label>\n                <FormInput\n                  placeholder=\"/data/yaml\"\n                  value={\"yaml\" in updates ? updates.yaml : original.yaml}\n                  onChange={(e) => this.updateSetting(\"yaml\", e.target.value)}\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Shutdown</label>\n                <FormInput\n                  placeholder=\"/action/shutdown\"\n                  value={\n                    \"shutdown\" in updates ? updates.shutdown : original.shutdown\n                  }\n                  onChange={(e) =>\n                    this.updateSetting(\"shutdown\", e.target.value)\n                  }\n                />\n              </Col>\n              <Col md=\"6\" className=\"form-group\">\n                <label>Ready</label>\n                <FormInput\n                  placeholder=\"/status/isready\"\n                  value={\"ready\" in updates ? updates.ready : original.ready}\n                  onChange={(e) => this.updateSetting(\"ready\", e.target.value)}\n                />\n              </Col>\n            </Row>\n          </Form>\n          <Button theme=\"primary\" onClick={this.saveChanges}>\n            Save Settings\n          </Button>\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default SettingsCard;\n","import React from \"react\";\nimport { Container, Row} from \"react-bootstrap\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport SettingsCard from \"../components/Settings/Settings\";\n\nclass LogsView extends React.Component {\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row noGutters className=\"page-header py-4\">\n          <PageTitle\n            title=\"Settings\"\n            subtitle=\"Network\"\n            className=\"text-sm-left mb-3\"\n          />\n        </Row>\n        <SettingsCard />\n      </Container>\n    );\n  };\n}\n\nexport default LogsView;\n","import React from \"react\";\n\nclass StarRating extends React.Component {\n  state = {\n    isOpen: false,\n    newUser: \"\",\n  };\n\n  getStars = (amount) => {\n    let stars = [];\n    let integer = parseInt(amount);\n    let remainder = amount - integer;\n    let i;\n    for (i = 0; i < integer; ++i) {\n      let index = i;\n      stars.push(\n        <i key={i} className=\"material-icons\" onClick={() => this.rate(index)}>\n          star\n        </i>\n      );\n    }\n    if (remainder >= 0.8) {\n      let index = i;\n      stars.push(\n        <i\n          key={i++}\n          className=\"material-icons\"\n          onClick={() => this.rate(index)}\n        >\n          star\n        </i>\n      );\n    } else if (remainder >= 0.25) {\n      let index = i;\n      stars.push(\n        <i\n          key={i++}\n          className=\"material-icons\"\n          onClick={() => this.rate(index)}\n        >\n          star_half\n        </i>\n      );\n    }\n\n    for (let j = stars.length; j < 5; ++j) {\n      let index = i;\n      stars.push(\n        <i\n          key={i++}\n          className=\"material-icons\"\n          onClick={() => this.rate(index)}\n        >\n          star_outline\n        </i>\n      );\n    }\n    return stars;\n  };\n\n  rate = (index) => {\n    if (this.props.rate) this.props.rate(index + 1);\n  };\n\n  render = () => {\n    const { rating, userRated } = this.props;\n    const formatted = parseFloat(Math.round(rating * 10 || 0) / 10).toFixed(1);\n    const stars = this.getStars(formatted);\n    return (\n      <span\n        className={`app-rating ${rating ? \"existing\" : \"\"} ${\n          userRated ? \"userRated\" : \"\"\n        } text-muted`}\n      >\n        <span className=\"text-faded\">{userRated ? \"You Rated: \" : \"\"}</span>\n        <span className=\"rating-num\">{rating ? formatted : \"\"}</span>\n        {stars}\n      </span>\n    );\n  };\n}\n\nexport default StarRating;\n","import React from \"react\";\nimport {\n  Row,\n  Col,\n  Card,\n} from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport StarRating from \"./StarRating\";\n\nclass ImageCard extends React.Component {\n  state = {\n    isOpen: false,\n    newUser: \"\",\n  };\n\n  render = () => {\n    const { image } = this.props;\n    let {\n      name,\n      id,\n      official,\n      author,\n      description,\n      totalStars,\n      totalRatings,\n      numReviews,\n    } = image;\n    let rating;\n    if (image.totalStars && image.totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Link className=\"unstyled-link\" to={`/package?id=${id}`}>\n        <Card className=\"clickable mb-4 h-100\">\n          <Card.Body className=\"pb-0 mb-0 pt-3\">\n            <Row>\n              <Col xs=\"12\" className=\"px-0\">\n                <div className=\"app-title\">\n                  {name}\n                  {official && (\n                    <span title=\"Official Package\" className=\"float-right\">\n                      <i className=\"ml-2 material-icons verified-icon\">\n                        verified_user\n                      </i>\n                    </span>\n                  )}\n                </div>\n                <div className=\"app-subtitle\">{author}</div>\n              </Col>\n              <Col sm=\"12\" className=\"px-0 pt-3 pb-0\">\n                <div className=\"description-container\">\n                  <div className=\"description-overlay\" />\n                  <div className=\"app-description\">{description}</div>\n                </div>\n              </Col>\n            </Row>\n          </Card.Body>\n          <Card.Footer className=\"pt-0 px-3 pb-3\">\n            {this.getNumReviews(numReviews)}\n            {rating && <StarRating rating={rating} />}\n          </Card.Footer>\n        </Card>\n      </Link>\n    );\n  };\n\n  getNumReviews(reviews) {\n    if (!reviews) return <span className=\"text-muted\">no reviews</span>;\n\n    if (reviews > 1) return <span>{reviews} reviews</span>;\n\n    return <span>{reviews} review</span>;\n  }\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport {\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\nimport {\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormSelect,\n} from \"shards-react\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport ImageCard from \"../components/Hub/ImageCard\";\n\nclass HubView extends React.Component {\n  state = {\n    banner: Store.getBanner(\"hub\"),\n    images: Store.getHubImages(),\n    sortType: \"suggested\",\n    category: \"all\",\n    searchQuery: \"\",\n  };\n  componentWillMount = () => {\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-hub\", this.getHubImages);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-hub\", this.getHubImages);\n  };\n\n  getHubImages = () => {\n    const images = Store.getHubImages();\n    this.setState({ images });\n  };\n\n  getData = () => {\n    const banner = Store.getBanner(\"hub\");\n    this.setState({ banner });\n  };\n\n  sortBy = (sortType) => {\n    this.setState({ sortType }, this.search);\n  };\n\n  setCategory = (category) => {\n    this.setState({ category }, this.search);\n  };\n\n  updateSearch = (searchQuery) => {\n    this.setState({ searchQuery }, this.search);\n  };\n\n  search = () => {\n    const { category, searchQuery, sortType } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.SEARCH_HUB,\n      payload: { category, q: searchQuery, sort: sortType },\n    });\n  };\n\n  render = () => {\n    const { banner, images, sortType, category, searchQuery } = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        <div className=\"px-4\">\n          <Row className=\"page-header py-4\">\n            <PageTitle\n              title=\"Jina Hub\"\n              subtitle=\"Community\"\n              className=\"text-sm-left mb-3\"\n            />\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Categories</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.setCategory(e.target.value)}\n                  value={category}\n                >\n                  <option value=\"all\">All Categories</option>\n                  <option value=\"highestRated\">Search</option>\n                  <option value=\"newest\">Configurations</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <InputGroup>\n                <InputGroupAddon type=\"prepend\">\n                  <InputGroupText>Sort By</InputGroupText>\n                </InputGroupAddon>\n                <FormSelect\n                  onChange={(e) => this.sortBy(e.target.value)}\n                  value={sortType}\n                >\n                  <option value=\"suggested\">Suggested</option>\n                  <option value=\"highestRated\">Highest Rated</option>\n                  <option value=\"newest\">Newest</option>\n                </FormSelect>\n              </InputGroup>\n            </Col>\n\n            <Col md=\"3\" className=\"py-sm-2\">\n              <FormInput\n                placeholder=\"search images...\"\n                className=\"mb-3 mb-sm-0 ml-auto py-2\"\n                value={searchQuery}\n                onChange={(e) => this.updateSearch(e.target.value)}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {Object.keys(images).map((imageId) => (\n              <Col key={imageId} md=\"3\" className=\"mb-4\">\n                <ImageCard image={images[imageId]} />\n              </Col>\n            ))}\n          </Row>\n        </div>\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nclass BuildHistory extends React.Component {\n  render = () => {\n    const { buildHistory } = this.props.image;\n    return (\n      <Card className=\"readme-container mb-4\">\n        <CardHeader className=\"border-bottom d-flex flex-row\">\n          <h6 className=\"m-0 d-inline-block\">Build History</h6>\n        </CardHeader>\n        <CardBody className=\"p-0 build-history\">\n          {buildHistory &&\n            buildHistory.map((build, idx) => {\n              const formattedCreated = new Date(build.created).toLocaleString();\n              return (\n                <div key={idx} className=\"user-activity__item pr-3 py-3\">\n                  <div className=\"user-activity__item__icon mt-2\">\n                    <i className=\"material-icons\">build</i>\n                  </div>\n                  <div className=\"user-activity__item__content\">\n                    <span className=\"text-light\">{formattedCreated}</span>\n                    <p>\n                      [{build.os}/{build.architecture}]{\" \"}\n                      {parseFloat(build.size / 1e6).toFixed(2)} MB\n                    </p>\n                  </div>\n                </div>\n              );\n            })}\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default BuildHistory;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, Row, Col } from \"shards-react\";\n\nclass Readme extends React.Component {\n  render = () => {\n    const { image } = this.props;\n    return (\n      <Card className=\"readme-container mb-4\">\n        <CardHeader className=\"border-bottom d-flex flex-row\">\n          <h6 className=\"m-0 d-inline-block\">Image Details</h6>\n        </CardHeader>\n        <CardBody className=\"pt-0 pb-2\">\n          <Row className=\"border-bottom py-2\">\n            <Col>Name</Col>\n            <Col>{image.name}</Col>\n          </Row>\n          <Row className=\"border-bottom py-2\">\n            <Col>Version</Col>\n            <Col>{image.version}</Col>\n          </Row>\n          <Row className=\"border-bottom py-2\">\n            <Col>Author</Col>\n            <Col>{image.author}</Col>\n          </Row>\n          <Row className=\"border-bottom py-2\">\n            <Col>Description</Col>\n            <Col>{image.description}</Col>\n          </Row>\n          <Row className=\"border-bottom py-2\">\n            <Col>Documentation</Col>\n            <Col>\n              <a href={image.documentation} target=\"_blank\" rel=\"noopener noreferrer\">\n                {image.documentation}\n              </a>\n            </Col>\n          </Row>\n          <Row className=\"border-bottom py-2\">\n            <Col>Source</Col>\n            <Col>\n              <a href={image.source} target=\"_blank\" rel=\"noopener noreferrer\">\n                {image.source}\n              </a>\n            </Col>\n          </Row>\n          <Row className=\"border-bottom py-2\">\n            <Col>License</Col>\n            <Col>{image.license}</Col>\n          </Row>\n          <Row className=\"border-bottom py-2\">\n            <Col>Vendor</Col>\n            <Col>{image.vendor}</Col>\n          </Row>\n          <Row className=\"py-2\">\n            <Col>URL</Col>\n            <Col>\n              <a href={image.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {image.url}\n              </a>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default Readme;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nclass Readme extends React.Component {\n  render = () => {\n    const { readme, documentation } = this.props;\n    return (\n      <Card className=\"readme-container mb-4\">\n        <CardHeader className=\"border-bottom d-flex flex-row\">\n          <h6 className=\"m-0 d-inline-block\">README.MD</h6>\n          <div className=\"flex-fill d-inline-block\" />\n          <a\n            href={documentation}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"cursor-pointer text-primary\"\n          >\n            <i className=\"fab fa-github\"></i> View on GitHub\n          </a>\n        </CardHeader>\n        <CardBody>\n          {readme ? (\n            <div\n              className=\"markup\"\n              dangerouslySetInnerHTML={{ __html: readme }}\n            />\n          ) : (\n            <h2 className=\"text-muted text-center py-4\">No Readme Found</h2>\n          )}\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default Readme;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody} from \"shards-react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport { copyToClipboard } from \"../../helpers\";\nimport { Dispatcher, Constants } from \"../../flux\";\n\nclass CopyCommand extends React.Component {\n  getCodeAtIndex = (index) => {\n    const { image } = this.props;\n    const imageVar = image.repoTags[image.repoTags.length - 1];\n    let code = [\n      `from jina.flow import Flow\\nf = Flow().add(name='my-pod', image='${imageVar}')`,\n      `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', yaml_path='my.yml')`,\n      `from jina.flow import Flow\\n# assuming you have a running gateway on 192.168.0.123:45678\\nf = Flow().add(name='my-pod', image='${imageVar}', host='192.168.0.123', port_grpc=45678)`,\n      `!Flow\\npods:\\n  my_pod1:\\n    image: \"${imageVar}\"`,\n      `jina pod --image ${imageVar}`,\n      `docker run -p 55555:55555 -p 55556:55556 ${imageVar} --port-in 55555 --port-out 55556`,\n      `docker run -v $(pwd)/my.yml:/my.yml ${imageVar} --yaml-path /my.yml`,\n    ];\n    return code[index];\n  };\n  copyCode = (index) => {\n    const content = this.getCodeAtIndex(index);\n    copyToClipboard(content);\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_BANNER,\n      payload: [\"hub\", \"Content copied to clipboard\", \"success\"],\n    });\n  };\n  render = () => {\n    return (\n      <Card className=\"mb-4\">\n        <CardHeader className=\"p-3 border-bottom d-flex flex-row\">\n          <h6 className=\"m-0 d-inline-block\">Usage</h6>\n        </CardHeader>\n        <CardBody className=\"py-2 px-3 pt-4 code-usage\">\n          <p className=\"mb-1\">Use this image in Flow API</p>\n          <SyntaxHighlighter\n            language=\"python\"\n            style={atomOneLight}\n            onClick={() => this.copyCode(0)}\n          >\n            {this.getCodeAtIndex(0)}\n          </SyntaxHighlighter>\n          <p className=\"mb-1 mt-4\">\n            Use this image in Flow API and override YAML\n          </p>\n          <SyntaxHighlighter\n            language=\"python\"\n            style={atomOneLight}\n            onClick={() => this.copyCode(1)}\n          >\n            {this.getCodeAtIndex(1)}\n          </SyntaxHighlighter>\n          <p className=\"mb-1 mt-4\">Use this image remotely in Flow API</p>\n          <SyntaxHighlighter\n            language=\"python\"\n            style={atomOneLight}\n            onClick={() => this.copyCode(2)}\n          >\n            {this.getCodeAtIndex(2)}\n          </SyntaxHighlighter>\n          <p className=\"mb-1 mt-4\">Use this image in Flow YAML</p>\n          <SyntaxHighlighter\n            language=\"yaml\"\n            style={atomOneLight}\n            onClick={() => this.copyCode(3)}\n          >\n            {this.getCodeAtIndex(3)}\n          </SyntaxHighlighter>\n          <p className=\"mb-1 mt-4\">Use this image in Jina CLI</p>\n          <SyntaxHighlighter\n            language=\"bash\"\n            style={atomOneLight}\n            onClick={() => this.copyCode(4)}\n          >\n            {this.getCodeAtIndex(4)}\n          </SyntaxHighlighter>\n          <p className=\"mb-1 mt-4\">Use this image in Docker CLI</p>\n          <SyntaxHighlighter\n            language=\"bash\"\n            style={atomOneLight}\n            onClick={() => this.copyCode(5)}\n          >\n            {this.getCodeAtIndex(5)}\n          </SyntaxHighlighter>\n          <p className=\"mb-1 mt-4\">\n            Use this image in Docker CLI and override YAML\n          </p>\n          <SyntaxHighlighter\n            language=\"bash\"\n            style={atomOneLight}\n            onClick={() => this.copyCode(6)}\n          >\n            {this.getCodeAtIndex(6)}\n          </SyntaxHighlighter>\n        </CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default CopyCommand;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody } from \"shards-react\";\n\nclass ReviewCard extends React.Component {\n  render = () => {\n    const { review } = this.props;\n    return (\n      <Card className=\"readme-container mb-4\">\n        <CardHeader className=\"border-bottom d-flex flex-row\">\n          <h6 className=\"m-0 d-inline-block\">{review.username}</h6>\n          <div className=\"flex-fill d-inline-block\" />\n          {/* <h6 className=\"m-0\"><StarRating rating={4.5}/></h6> */}\n        </CardHeader>\n        <CardBody className=\"py-3\">{review.content}</CardBody>\n      </Card>\n    );\n  };\n}\n\nexport default ReviewCard;\n","import React from \"react\";\nimport { Button } from \"shards-react\";\nimport ReviewCard from \"./ReviewCard\";\nimport { Dispatcher, Constants } from \"../../flux\";\n\nclass Readme extends React.Component {\n  newReview = () => {\n    const { imageId } = this.props;\n    const modal = \"review\";\n    Dispatcher.dispatch({\n      actionType: Constants.SHOW_MODAL,\n      payload: { modal, params: { imageId } },\n    });\n  };\n  render = () => {\n    const { reviews } = this.props;\n    return (\n      <div>\n        <div className=\"border-bottom d-flex flex-row mb-4\">\n          <h3 className=\"flex-fill\">Reviews</h3>\n          <div>\n            <Button onClick={this.newReview}>\n              <i className=\"material-icons mr-2\">add_comment</i>New Review\n            </Button>\n          </div>\n        </div>\n        {reviews.length > 0 ? (\n          reviews.map((review, idx) => <ReviewCard key={idx} review={review} />)\n        ) : (\n          <h2 className=\"text-muted text-center py-4\">No Reviews</h2>\n        )}\n      </div>\n    );\n  };\n}\n\nexport default Readme;\n","import React from \"react\";\nimport { Container, Row, Col} from \"react-bootstrap\";\nimport { Dispatcher, Constants, Store } from \"../flux\";\nimport BuildHistory from \"../components/Hub/BuildHistory\";\nimport PageTitle from \"../components/Common/PageTitle\";\nimport Details from \"../components/Hub/ImageDetails\";\nimport Readme from \"../components/Hub/Readme\";\nimport CopyCommand from \"../components/Hub/CopyCommand\";\nimport StarRating from \"../components/Hub/StarRating\";\nimport ImageReviews from \"../components/Hub/ImageReviews\";\n\nclass HubView extends React.Component {\n  constructor() {\n    super();\n    let windowHash = window.location.hash;\n    const windowParams = windowHash.substring(\n      windowHash.indexOf(\"?\"),\n      windowHash.length\n    );\n    const params = new URLSearchParams(windowParams);\n    const imageId = params.get(\"id\");\n    this.state = {\n      imageId,\n      loading: false,\n      banner: {},\n      imageData: {\n        reviews: [],\n        repoTags: [],\n      },\n    };\n  }\n\n  componentDidMount = () => {\n    this.getData();\n    this.getImageData();\n  };\n\n  componentWillMount = () => {\n    Store.on(\"update-ui\", this.getData);\n    Store.on(\"update-hub\", this.getImageData);\n  };\n\n  componentWillUnmount = () => {\n    Store.removeListener(\"update-ui\", this.getData);\n    Store.removeListener(\"update-hub\", this.getImageData);\n  };\n\n  getImageData = async () => {\n    const imageData = (await Store.getHubImage(this.state.imageId)) || {};\n    this.setState({ imageData, loading: false });\n  };\n\n  getData = () => {\n    const banner = Store.getBanner(\"hub\");\n    this.setState({ banner });\n  };\n\n  rate = (stars) => {\n    const { imageId } = this.state;\n    Dispatcher.dispatch({\n      actionType: Constants.POST_RATING,\n      payload: { imageId, stars },\n    });\n  };\n\n  render = () => {\n    const { banner, imageData, loading } = this.state;\n    const {\n      name,\n      id,\n      readmeHTML,\n      documentation,\n      totalStars,\n      totalRatings,\n      userRated,\n      reviews,\n    } = imageData;\n    let rating;\n    if (totalStars && totalRatings) {\n      rating = totalStars / totalRatings;\n    }\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        {banner && (\n          <div className=\"mr-4\">\n            <div className={`mb-0 banner px-4 banner-${banner.theme}`}>\n              {banner.message}\n            </div>\n          </div>\n        )}\n        {loading ? (\n          <div className=\"error\">\n            <div className=\"loader\" />\n          </div>\n        ) : (\n          <div className=\"px-4\">\n            <Row noGutters className=\"page-header py-4\">\n              <PageTitle\n                title={name}\n                subtitle=\"Image\"\n                className=\"text-sm-left mb-3\"\n              />\n              <Col md=\"6\" />\n              <Col md=\"3\" className=\"py-sm-2\">\n                <h3>\n                  <StarRating\n                    rating={userRated || rating}\n                    rate={this.rate}\n                    userRated={userRated}\n                  />\n                </h3>\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"6\">\n                <CopyCommand image={imageData} />\n                <Details image={imageData} />\n                <BuildHistory image={imageData} />\n              </Col>\n              <Col md=\"6\">\n                <Readme\n                  readme={readmeHTML}\n                  documentation={documentation}\n                />\n                <ImageReviews reviews={reviews} imageId={id} />\n              </Col>\n            </Row>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default HubView;\n","/* eslint jsx-a11y/anchor-is-valid: 0 */\n\nimport { hubURL } from \"../flux/config\";\n\nimport React from \"react\";\nimport { Container, Row, Col, Card, CardBody } from \"shards-react\";\n\nclass Login extends React.Component {\n  componentDidMount = () => {\n    let hash = window.location.href;\n    if (hash.indexOf(\"code\") > 0) {\n      console.log(\"hash: \", hash);\n      let code = hash.substring(hash.indexOf(\"code\") + 5, hash.length);\n      console.log(\"code:\", code);\n      window.location = `${hubURL}/auth/github/callback?code=${code}`;\n    }\n  };\n  testAuthentication = () => {\n    const xhr = new XMLHttpRequest();\n    const connectionString = `${hubURL}/auth/test`;\n    console.log(\"test connectionString: \", connectionString);\n    xhr.open(\"POST\", connectionString);\n    xhr.timeout = 5000;\n    xhr.withCredentials = true;\n    xhr.onload = function () {\n      if (this.status >= 200 && this.status < 300) {\n        console.log(\"test: SUCCESS\");\n      } else {\n        console.log(\"test: FAIL\");\n      }\n    };\n    xhr.onerror = function () {\n      console.log(\"test: ERROR\");\n    };\n    xhr.send();\n  };\n  render = () => {\n    return (\n      <Container fluid className=\"main-content-container px-0\">\n        <Row noGutters className=\"h-100\">\n          <Col lg=\"3\" md=\"5\" className=\"auth-form mx-auto\">\n            <Card>\n              <CardBody>\n                <img\n                  onClick={this.testAuthentication}\n                  className=\"auth-form__logo d-table mx-auto mb-3\"\n                  src={require(\"../images/jina-light.svg\")}\n                  style={{ maxWidth: \"100px\" }}\n                  alt=\"Jina\"\n                />\n                <h5 className=\"auth-form__title text-center mb-4\">Log in</h5>\n                <a\n                  href={`${hubURL}/auth/github`}\n                  id=\"github-button\"\n                  className=\"btn btn-block btn-social btn-github\"\n                >\n                  <i className=\"fab fa-github\"></i> Sign in with GitHub\n                </a>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nclass ChartNode extends React.Component {\n  render = () => {\n    const { title, content, icon, theme, link } = this.props;\n    return (\n      <a className=\"unstyled-link\" href={link}>\n        <Card className=\"h-100\">\n          <Card.Body className=\"pt-3\">\n            <Row>\n              <Col xs=\"8\" className=\"pr-0\">\n                <h4>{title}</h4>\n                {content}\n              </Col>\n              <Col xs=\"4\" className=\"pl-0\">\n                <h1 className=\"mt-4 ml-4\">\n                  <span className={`${icon} log-${theme}`} />\n                </h1>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n      </a>\n    );\n  };\n}\n\nexport default ChartNode;\n","import React from \"react\";\nimport { Container, Row, Col } from \"shards-react\";\nimport HelpCard from \"../components/Common/HelpCard\";\nimport PageTitle from \"../components/Common/PageTitle\";\n\nconst Errors = () => (\n  <Container fluid className=\"main-content-container px-4\">\n    <Row noGutters className=\"page-header py-4\">\n      <PageTitle\n        title=\"Resources\"\n        subtitle=\"Jina.ai\"\n        className=\"text-sm-left mb-3\"\n      />\n    </Row>\n    <Row>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina 101\"\n          content=\"Understanding all key concepts of Jina in 3 minutes!\"\n          link=\"https://101.jina.ai\"\n          icon=\"fas fa-egg\"\n          theme=\"warning\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Jina Documentations\"\n          content=\"The best way to learn Jina in depth.\"\n          link=\"https://docs.jina.ai\"\n          icon=\"fas fa-book\"\n          theme=\"primary\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title='Jina \"Hello World\"'\n          content=\"A simple demo of image neural search for Fashion-MNIST.\"\n          link=\"https://github.com/jina-ai/jina#jina-hello-world-\"\n          icon=\"fas fa-globe-europe\"\n          theme=\"error\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"Visit us on Github!\"\n          content=\"Explore more exciting open-source projects from us.\"\n          link=\"https://opensource.jina.ai\"\n          icon=\"fab fa-github\"\n          theme=\"info\"\n        />\n      </Col>\n      <Col md=\"3\" className=\"mb-4\">\n        <HelpCard\n          title=\"We are hiring!\"\n          content=\"Join us and build the next neural search eco system!\"\n          link=\"https://www.linkedin.com/company/jinaai/jobs/\"\n          icon=\"fab fa-linkedin\"\n          theme=\"linkedin\"\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Errors;\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DashboardLayout, IconSidebar } from \"./layouts\";\n\n// Route Views\nimport FlowView from \"./views/FlowView\";\nimport LogsView from \"./views/LogsView\";\nimport TaskView from \"./views/TaskView\";\nimport Settings from \"./views/Settings\";\nimport HubView from \"./views/HubView\";\nimport PackageView from \"./views/PackageView\";\nimport LogIn from \"./views/LogIn\";\n\nimport NotFound from \"./views/NotFound\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DashboardLayout,\n    component: () => <Redirect to=\"/logs\" />,\n  },\n  {\n    path: \"/logs\",\n    layout: IconSidebar,\n    component: LogsView,\n  },\n  {\n    path: \"/flow\",\n    layout: IconSidebar,\n    component: FlowView,\n  },\n  {\n    path: \"/task\",\n    layout: IconSidebar,\n    component: TaskView,\n  },\n  {\n    path: \"/settings\",\n    layout: IconSidebar,\n    component: Settings,\n  },\n  {\n    path: \"/help\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/home\",\n    layout: IconSidebar,\n    component: NotFound,\n  },\n  {\n    path: \"/hub\",\n    layout: IconSidebar,\n    component: HubView,\n  },\n  {\n    path: \"/package\",\n    layout: IconSidebar,\n    component: PackageView,\n  },\n  {\n    path: \"/login\",\n    layout: IconSidebar,\n    component: LogIn,\n  },\n];\n","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-164627626-1\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = (page) => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options,\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/main.scss\";\nimport \"./App.css\";\n\nexport default () => (\n  <Router basename={\"/\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker((props) => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  hubURL: \"https://hub.jina.ai\",\n  // hubURL:'http://localhost:3040'\n};\n"],"sourceRoot":""}